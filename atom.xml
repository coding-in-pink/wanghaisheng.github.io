<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[海生的世界]]></title>
  <subtitle><![CDATA[正在打怪升级中～～～]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://wanghaisheng.github.io/"/>
  <updated>2015-04-27T17:29:02.000Z</updated>
  <id>http://wanghaisheng.github.io/</id>
  
  <author>
    <name><![CDATA[Edwin]]></name>
    <email><![CDATA[edwin_uestc@163.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Bottled Water-PostgreSQL与 Kafka的实时数据整合]]></title>
    <link href="http://wanghaisheng.github.io/2015/04/27/bottled-water-real-time-integration-of-postgresql-and-kafka/"/>
    <id>http://wanghaisheng.github.io/2015/04/27/bottled-water-real-time-integration-of-postgresql-and-kafka/</id>
    <published>2015-04-27T08:34:12.000Z</published>
    <updated>2015-04-27T17:29:02.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="Bottled_Water:_PostgreSQL与_Kafka_的实时数据整合">Bottled Water: PostgreSQL与 Kafka  的实时数据整合</h2><p> 英文版： <a href="http://blog.confluent.io/2015/04/23/bottled-water-real-time-integration-of-postgresql-and-kafka/" target="_blank" rel="external">Bottled Water: Real-time integration of PostgreSQL and Kafka</a><br> 中文版：<br> <a href="http://wanghaisheng.github.io/2015/04/27/bottled-water-real-time-integration-of-postgresql-and-kafka" target="_blank" rel="external">Bottled Water: PostgreSQL与 Kafka  的实时数据整合</a></p>
<p>写数据库相对容易，读数据库则异常困难。当然，如果你只是查询数据库，拿到一部分值，也还行。但如果你想要将整个数据库中的数据复制到其他系统中去，比如使用Elasticsearch来<br>做索引，做快速的pre-fill缓存，或是将数据导入到一个数据仓库供统计分析，或是迁移到其他类型的数据库中。</p>
<p>如果数据不会发生变更，实现起来也很简单。只需要一份数据库的快照(通过备份dump整个数据库)，复制然后载入到其他系统即可。但问题是如果数据库是持续变更的，<br>在你载入数据的时候快照中的数据已经不是最新的，即使你采用每日一次快照的方式，在下游系统中你只能拿到滞后一天的数据，对于数据量大的数据库而言，快照和大数据量的加载（bulk load<br>本身成本就很高。</p>
<p>从一个数据库复制数据到另外的系统中有哪些解决方案呢？</p>
<ul>
<li>1、第一种是系统实现双写“dual writes”。每当系统进行数据库的写操作的时候，同时更新/校验缓存条目，对搜索引擎的数据重新索引，将数据发送到用于统计分析的系统等等<br><img src="../../../../images/slide-37-4-3.png" alt=""></li>
</ul>
<p>然而之前我就<a href="http://martin.kleppmann.com/2014/10/28/staying-agile-at-span.html" target="_blank" rel="external">谈到</a>,双写的方法其实是有很多问题的，主要是Race Condition(也叫做资源竞争)和可靠性的方面。如果稍有差异的数据写到2个不同的数据库中，数据库的内容会慢慢的相差甚远，随着时间的推移会变得越来越不一致。<br>要想从这样的渐进式的数据损坏中恢复是很困难的。</p>
<ul>
<li>2、CDC 变更数据捕获<br>如果是从数据库的快照中重新构建缓存或索引，这样做的好处在于从新的数据库备份中重新构建时会消除任何的不一致性。但对于大型数据库而言，每天要处理整个数据库备份速度太慢，效率太低，怎么样才能提速呢？</li>
</ul>
<p>典型的，不同的快照之间数据库只有一小部分会发生变化。如果你只是处理自上次快照之后数据库中发生的那些变更？这样只用处理一小部分数据，也可以频繁的进行比对。比如说每分钟比对一次，每秒比对一次？1秒100次呢？</p>
<p>当比对频率达到极限的时候，数据库的变更就变成了stream流。每次写数据库时，也就是流中的一条消息。如果你把这些消息严格按照原来数据提交时的顺序应用到数据库上，你就可以得到一份和数据库一模一样的副本，这其中的原理也就是<a href="http://blog.confluent.io/2015/03/04/turning-the-database-inside-out-with-apache-samza/" target="_blank" rel="external">数据库复制的原理</a></p>
<p>复制的方法来保持数据同步比双写的方法要好一些。首先，你只需要写一个数据库。然后从数据库中拿到2个东西：<br>1、某时刻下满足一致性的快照<br>2、自那个时刻之后的实时的变更流</p>
<p>你可以将快照导入到其他系统(比如搜索索引或缓存)，然后持续的应用这些实时的变更。如果管道是警告调优的，那么你的延迟可能低于1秒，下游系统也可以保持尽可能最新。由于变更流本身包括了写的顺序，<a href="https://martin.kleppmann.com/2015/04/24/logs-for-data-infrastructure-at-craft.html" target="_blank" rel="external">资源竞争就不再是问题</a></p>
<p>这种方法常常称为<a href="http://en.wikipedia.org/wiki/Change_data_capture" target="_blank" rel="external">变更数据捕获</a>,目前现有的一些工具都不是很好用。但在一些公司里，CDC已经成为了系统构建的关键模块，比如Linkedin有<a href="http://www.socc2012.org/s18-das.pdf" target="_blank" rel="external">Databus</a>。Facebook有<a href="https://code.facebook.com/posts/188966771280871/wormhole-pub-sub-system-moving-data-through-space-and-time/" target="_blank" rel="external">Wormhole</a></p>
<p>CDC 变更数据捕获能够让你释放你已有数据中的价值。你可以将数据“喂”给一个<a href="http://blog.confluent.io/2015/02/25/stream-data-platform-1/" target="_blank" rel="external">中心式的数据流</a><br>这样就可以实时与来自其他数据库的数据或时间流整合起来。这种方式使得新的数据分析或新的数据格式试验更加容易，允许你以一种最小化的风险渐进式地从<br>一个系统迁移到另一个系统，也比 data corruption更加健壮，如果出了任何问题，你都可以很快的利用快照和流恢复数据库。</p>
<p><img src="../../../../images/slide-42b-4-3.png" alt=""></p>
<h2 id="获取实时的变更流">获取实时的变更流</h2><p>获取数据库的一致性快照是一个通用的特性，因为你需要利用它进行备份。但获取实时的变更流是传统数据库一直忽略的一个功能。<br> Oracle <a href="http://www.oracle.com/us/products/middleware/data-integration/goldengate/overview/index.html" target="_blank" rel="external">GoldenGate</a>, the <a href="https://dev.mysql.com/doc/refman/5.7/en/binary-log.html" target="_blank" rel="external">MySQL binlog</a>, the <a href="http://www.manuel-schoebel.com/blog/meteorjs-and-mongodb-replica-set-for-oplog-tailing" target="_blank" rel="external">MongoDB oplog</a> or the <a href="http://guide.couchdb.org/draft/notifications.html" target="_blank" rel="external">CouchDB changes feed</a> 都是类似的功能，但要想用好都不是那么容易。近来一些数据库如 <a href="http://rethinkdb.com/blog/realtime-web/" target="_blank" rel="external">RethinkDB</a> or <a href="https://www.firebase.com/docs/web/guide/retrieving-data.html" target="_blank" rel="external">Firebase</a> 正在朝着实时变更流的方向努力。</p>
<p>这里我们主要看看<strong>PostgreSQL</strong>. 它是一个很古老的数据库，但是很好用，很稳定、性能不错，也拥有绝大多数的<a href="https://vimeo.com/61044807" target="_blank" rel="external">功能</a>。</p>
<p>以前你如果想从Postgres中拿到变更流你必须使用触发器。这样是可以实现，但fiddly，需要变更schema，且性能不大好。但去年12月份发布的Postgresql 9.4引入了一种叫<a href="http://www.postgresql.org/docs/9.4/static/logicaldecoding.html" target="_blank" rel="external"> logical decoding逻辑编码</a>的新特性，</p>
<p>有了logical decoding之后,Postgres的变更数据捕获突然变得更加吸引人。因此，当发布了这一功能之后，我立即利用这一特性开始为Postgres构建一个变更捕获工具<a href="http://confluent.io/" target="_blank" rel="external">Confluent</a>赞助了我这个项目，目前我们发布了一个alpha的开源版本 <a href="https://github.com/confluentinc/bottledwater-pg" target="_blank" rel="external">Bottled Water</a>.</p>
<p><img src="../../../../images/slide-44-4-3.png" alt="Bottled Water: Data streams freshly bottled at source"></p>
<h2 id="Bottled_Water简介"><strong>Bottled Water简介</strong></h2><p>Logical decoding利用了数据库的write-ahead log (WAL),能够让我们访问行级别的变更事件：每次一张表的某一行出现插入、更新删除操作。这类事件是利用事务来分组的，是以它们提交到数据库的顺序出现的。流中并不会记录Aborted/rolled-back事务。因此，如果你以同样的顺序应用这些变更事件，就能得到一个与数据库的事务保持一致的副本。</p>
<p>Postgres logical decoding 的设计是很精巧的：利用变更流能够构建出一个一致性的快照来。你可以使用快照来做整个数据库某个时间点的备份，无需锁库即可完成备份，然后通过变更流获取所有自快照之后发生的写操作。</p>
<p>Bottled Water 利用这些特性来复制数据库中的所有数据，将数据编码成 <a href="http://avro.apache.org/" target="_blank" rel="external">Avro format</a>格式.然后把编码后的数据发送给<a href="http://kafka.apache.org/" target="_blank" rel="external">Kafka</a> — 数据库中的每张表作为一个Kafka topic,数据库中的每一行作为Kafka中的一条消息。</p>
<p>一旦数据导入到Kafka里面,你可以按你所需来编写Kafka consumer that does whatever you need:发送数据给Elasticsearch, 生成一份缓存，在 <a href="http://samza.apache.org/" target="_blank" rel="external">Samza</a> job中进行处理, 利用<a href="http://confluent.io/docs/current/camus/docs/intro.html" target="_blank" rel="external">Camus</a>将数据导入到HDFS with … 等等</p>
<h2 id="为什么选择_Kafka?"><strong>为什么选择 Kafka?</strong></h2><p>Kafka 是一个消息系统，以大量事件的传输闻名，诸如web服务器日志，用户点击事件。在Kafka里,此类事件通常保留一段时间然后就丢弃掉。 Kafka是否真的适合数据库的变更事件。我们不希望丢掉任何的数据库数据。</p>
<p>事实上， Kafka 是不二之选—  最关键的是Kafka’s <a href="http://kafka.apache.org/documentation.html#compaction" target="_blank" rel="external">log compaction feature</a>, 简直就是为了这个目的量身定做的. 如果你启动log compaction,就不会存在按照时间对数据进行丢弃。相反，每个消息都有一个key，Kafka会无限保留某个<br>key对应的最新的消息。某个key值之前的消息最终通过garbage-collected来采集。这与key-value键值数据库中使用新的值覆盖旧的值是一样的道理。</p>
<p>Bottled Water确定了 (or <a href="http://michael.otacoo.com/postgresql-2/postgres-9-4-feature-highlight-replica-identity-logical-replication/" target="_blank" rel="external">replica identity</a>)Postgres中每张表的主键，并将其用作发送给Kafka消息的主键。消息值取决于事件的类型：</p>
<ul>
<li>对于插入和更新操作，消息值包含了每行所有字段的值，编码成Avro格式</li>
<li>对于删除操作，消息值为null。这样 Kafka 就会在 log compaction时移除消息,这样就释放了磁盘空间</li>
</ul>
<p>通过log compaction,你不再需要一个系统来存储整个数据库的快照，用另一个系统来处理实时的消息-二者可以在同一个系统中并存。<br>Bottled Water把最开始的快照按照数据库中每行作为一个消息发送给Kafka，主键作为消息的key，发送给所有Kafka brokers.当处理完了快照，插入的、删除的或更新的每行都被转换成一条消息。</p>
<p>如果某一行频繁更新的话，同一个key就会存在多条消息(每次更新都会产生一条消息)。所幸的是，Kafka’s log compaction会对其进行排序，对以往的值进行garbage-collect处理，这样就不会浪费磁盘空间。另一方面，如果某一行从不更新或删除，在Kafka中也再也不会发生变化，-永远不会进行 garbage-collected.</p>
<p>整个数据库的备份和实时流位于同一个系统中是很有益处的。如果你想从头开始构建一个下游的系统，你可以从一个空的数据库开始，慢慢consuming Kafka topic，浏览所有的topic, 将每一条消息写入到你的数据库当中。完成之后，你便得到了整个数据的最新副本。另外，你可以通过不断的消费流数据来保持最新。给原有的数据做一些新的视图相当之容易。</p>
<p>用Kafka的方式来维护数据库的副本给熟悉传统的企业消息和局限性的人带来了诸多惊喜。事实上，这个应用场景也正是为什么Kafka是基于 <a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying" target="_blank" rel="external">replicated log abstraction</a>所构建的:它使得这样一类大规模的数据data retention and distribution 保持和分发成为了可能。下游系统可以自己的意愿重载和重新处理数据，不会影响要求低延迟查询的上游数据库的性能。</p>
<p><strong>为什么选择 Avro?</strong></p>
<p>从Postgres抽取的数据可以编码成JSON, or Protobuf, or Thrift,或其他任意格式. 但是，Avro才是最佳选择。Gwen Shapira 曾经撰文<a href="http://radar.oreilly.com/2014/11/the-problem-of-managing-schemas.html" target="_blank" rel="external">讨论了Avro在schema management中的优点</a>，我也写过一篇 <a href="http://martin.kleppmann.com/2012/12/05/schema-evolution-in-avro-protocol-buffers-thrift.html" target="_blank" rel="external">Avro 与Protobuf and Thrift比较的文章</a> .<a href="http://blog.confluent.io/2015/02/25/stream-data-platform-2/" target="_blank" rel="external">Confluent流数据平台指南 stream data platform guide</a>中给出了为什么Avro 适合于数据集成的若干理由。</p>
<p>Bottled Water首先检查数据库表的schema，自动为每个表格生成Avro schema，利用<a href="http://confluent.io/docs/current/schema-registry/docs/index.html" target="_blank" rel="external">Confluent’s schema registry</a>对schema进行注册,将schema的版本嵌入到Avro中<br>以消息的形式发送给Kafka。也就是说是于流数据平台<a href="http://confluent.io/docs/current/schema-registry/docs/serializer-formatter.html" target="_blank" rel="external">serializers</a>一起使用:你可以将Postgres中拿到的数据以有价值的业务对象和丰富的数据类型来使用，无需编写大量的解析代码。</p>
<p>Postgres datatypes 到 Avro的转换已经基本上很全面了，涵盖了所有常见的数据类型，提供了一种lossless and sensibly的类型转换。后续我打算对其进行扩展以支持所有Postgres内置的数据类型-虽然工作量很大，但是是值得的，因为一个好的schema对于数据是相当重要的。</p>
<p><img src="../../../../images/slide-46-4-3-cropped.png" alt="Inside the bottle factory"></p>
<p><strong>logical decoding输出插件</strong></p>
<p> Postgres’ logical decoding feature的一个有趣之处在于说它并没有定义一种wire format来表示在网络中如何传输变更数据。相反，它定义了<a href="http://www.postgresql.org/docs/9.4/static/logicaldecoding-output-plugin.html" target="_blank" rel="external">output plugin API</a>, 其中对于每一次插入、更新或删除都会收到一个函数调用。 Bottled Water使用这个API来读取数据库内在格式的数据，并将其序列化成Avro格式。</p>
<p>由于 Postgres 扩展机制的原因，输出插件必须用C来编写，并且以共享库的形式导入到数据库服务器中去。这里要求使用超级用户的权限和数据库服务器的文件<br>访问权限，所以并不是很容易就完成的。这里我理解很多数据库管理会被在数据库服务器上运行自定义代码所吓到。不幸的是，这是目前能够使用logical decoding的唯一方式</p>
<p>所幸的是，你无须在主数据库中安装该插件-你可以使用从属机(replica, hot standby).这样你就能保证该插件不会损坏你的数据，引起主数据库的崩溃或影响其性能。</p>
<p><img src="../../../../images/slide-47-4-3.png" alt="Bottled Water architecture"></p>
<p><strong> client daemon</strong></p>
<p>除了数据库服务器上运行的插件之外, Bottled Water还包含了一个你可以在其他地方运行的客户端程序。它能够连接Postgres 服务器，能够连接 Kafka brokers，接收来自数据库的Avro格式编码的数据，将Avro数据推送给 Kafka。</p>
<p>客户端是使用C编写的，是因为这样使用Postgres 的客户端库文件的最简单的方式，由于客户端和插件之间一部分代码是复用的，相当轻量级，且无须写到磁盘中。</p>
<p>如果客户端发送崩溃，与Postgres or Kafka的连接发生中断会有哪些影响?完全没影响。它会跟踪那条消息已经发布过了，那条消息Kafka brokers已经确认过了。<br>当出错之后重启客户端时，它会重新发送哪些没有确认过的消息。因此Kafka 中一些消息可能会出现2次，但不会有数据丢失。</p>
<p><strong>相关工作</strong></p>
<p>其他人解决同样问题所做的工作:</p>
<ul>
<li><a href="https://github.com/xstevens/decoderbufs" target="_blank" rel="external">Decoderbufs</a>是一个试验性的Postgres plugin by <a href="https://twitter.com/xstevens" target="_blank" rel="external">Xavier Stevens</a>，将变更流转换成Protocol Buffers 格式.它只是提供 logical decoding plugin —并不包括一致性快照或客户端的部分 (Xavier提到他以前写过一个客户端，读取Postgres中的数据写到Kafka,但目前还不是开源的).</li>
<li><a href="https://github.com/xstevens/pg_kafka" target="_blank" rel="external">pg_kafka</a> (同样是Xavier写的) 是一个Postgres函数形式的Kafka producer client，你可以使用触发器来生成数据给Kafka</li>
<li><a href="https://wiki.postgresql.org/wiki/PGQ_Tutorial" target="_blank" rel="external">PGQ</a> 是一个基于Postgres的队列实现， <a href="https://wiki.postgresql.org/wiki/SkyTools" target="_blank" rel="external">Skytools Londiste</a> (developed at Skype)使用它来做基于触发器的复制。 <a href="https://bucardo.org/wiki/Bucardo" target="_blank" rel="external">Bucardo</a>是另一款基于触发器的复制器。就我理解基于触发器的复制是有些黑客味道的(相当有技术含量)，<br>要对schema进行变更，需要fiddly的配置，要承担巨额的花销。另外，这些项目似乎都没有得到PostgreSQL core team的认可,而 logical decoding is fully supported.</li>
<li><a href="http://sqoop.apache.org/" target="_blank" rel="external">Sqoop</a> 最近增加了支持<a href="https://issues.apache.org/jira/browse/SQOOP-1852" target="_blank" rel="external">writing to Kafka</a>. 就我所知，Sqoop只能利用数据库的完整快照，无法捕获持续的流数据，同样也无法保证不同快照之间的事务一致性</li>
<li>对于MySQL, <a href="https://twitter.com/lorax_james" target="_blank" rel="external">James Cheng</a>整理了从MySQL into Kafka的<a href="https://github.com/wushujames/mysql-cdc-projects/wiki" target="_blank" rel="external">change capture projects</a>的列表，这些项目主要围绕着binlog的解析，并没有做一致性快照的部分、</li>
</ul>
<p><strong>Bottled Water目前的状态</strong></p>
<p>目前, Bottled Water只是一款alpha的软件.充其量也就是个概念验证— 虽然经过了详细的设计和实现—但仍未在现实世界的系统中得到测试。现阶段还不适合在生产系统中使用，但经过一些测试和调整，希望将来能用在生产系统之中。</p>
<p>我们将其以开源的形式发布出来是希望能够得到社区的反馈。同时，知道我正在完成这个项目的人一直在帮我测bug。</p>
<p> <a href="https://github.com/confluentinc/bottledwater-pg/blob/master/README.md" target="_blank" rel="external">README</a> 包含了如何入门的更多信息。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="KAFKA" scheme="http://wanghaisheng.github.io/tags/KAFKA/"/>
    
      <category term="PostgreSQL" scheme="http://wanghaisheng.github.io/tags/PostgreSQL/"/>
    
      <category term="数据仓库" scheme="http://wanghaisheng.github.io/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="数据仓库" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
      <category term="KAFKA" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/KAFKA/"/>
    
      <category term="PostgreSQL" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/KAFKA/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关系型数据库向KAFKA迁移 FROM RELATIONAL INTO KAFKA]]></title>
    <link href="http://wanghaisheng.github.io/2015/04/26/from-relational-to-Kafka/"/>
    <id>http://wanghaisheng.github.io/2015/04/26/from-relational-to-Kafka/</id>
    <published>2015-04-26T06:19:12.000Z</published>
    <updated>2015-04-27T13:38:20.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="关系型数据库向KAFKA迁移_FROM_RELATIONAL_INTO_KAFKA">关系型数据库向KAFKA迁移 FROM RELATIONAL INTO KAFKA</h2><p>英文版： <a href="http://ingest.tips/2015/04/26/from-relational-into-kafka/" target="_blank" rel="external">FROM RELATIONAL INTO KAFKA</a><br>中文版：<a href="http://wanghaisheng.github.io/2015/04/26/from-relational-to-Kafka" target="_blank" rel="external">关系型数据库向KAFKA迁移</a></p>
<p>去年我做了一个极受欢迎的“如何从数据仓库迁移到Hadoop”教程，大概内容可以在<a href="https://www.percona.com/live/mysql-conference-2014/sessions/relational-hadoop-migrating-your-data-pipeline" target="_blank" rel="external">percona 会议的网站上</a><br>看到。过去的四年我基本上都在和如何从传统ER数据库向Hadoop进行数据迁移打交道。<br>目前，我正在做的是，如何将数据从数据仓库迁移到 Kafka  。之前我就说过，Hadoop是一个性价比极高的数据仓库的解决方案。但Kafka不是数据仓库，即使你可以直接<br>用Hive查询Kafka的数据，数据访问的模式是有质的差异。Kafka 是一个很棒的管道和消息总线。</p>
<p>为什么要把数据从关系型数据库迁移到Kafka上呢？因为如果有上以千记的系统都想要访问关系型数据库中的数据，你绝对不想让每个app都能直接访问OLTP数据库 业务数据库<br>。一旦业务数据库down掉之后，会直接带来经济损失。</p>
<p>把数据从业务数据库中迁移到Kafka中来，这样大家就可以不影响DBA工作的情况下即可访问数据，更重要的是，完全用不到DBA。<br>要怎么实现数据从业务数据库中迁移到Kafka呢？如果你是个DBA，不了解什么是Kafka，可以看一下这个<a href="http://www.slideshare.net/gwenshap/kafka-for-dbas" target="_blank" rel="external">PPT:Kafka for DBAs</a><br>基本上有如下几种方式：</p>
<ul>
<li>1、<a href="http://sqoop.apache.org/" target="_blank" rel="external">Sqoop2</a>能够从支持JDBC的任何数据源把数据导入到Kafka中去。它是直接访问数据库的，你需要DBA的配合。</li>
<li>2、<a href="https://github.com/wushujames/mysql-cdc-projects/wiki" target="_blank" rel="external">MySQL到Kafka CDC</a>James Cheng总结了所有与MySQL到Kafka CDC之间数据迁移的项目。<br>基于MySQL CDC的方式是很安全的，系统是从数据库的事务日志中拿到数据，无需直接访问生产系统的库表。</li>
<li>3、<a href="https://github.com/confluentinc/bottledwater-pg" target="_blank" rel="external">bottledwater-pg</a>Martin Kleppmann的开源项目，利用Postgres事务日志将Postgres中的数据迁移到Kafka，具体介绍请参考<a href="http://blog.confluent.io/2015/04/23/bottled-water-real-time-integration-of-postgresql-and-kafka/" target="_blank" rel="external">Bottled Water: Real-time integration of PostgreSQL and Kafka</a>.其中导出的数据是Avro格式<br>保留了原始数据的schema，其他大部分项目都用的csv的文本格式。</li>
<li>4、对于Oracle的Redo日志而言，<a href="https://www.oracle.com/middleware/data-integration/goldengate/big-data/index.html" target="_blank" rel="external">GoldenGate</a><br>提供了一个Flume adapter但价格不菲，据说<a href="http://www.dbvisit.com/" target="_blank" rel="external">DBVisit</a>正在尝试使用自己的CDC的方式来解决数据从Oracle到Kafka的迁移</li>
</ul>
<p>等数据迁移到Kafka中的时候，可以做如下选择：</p>
<ul>
<li>1、使用一些如Cloudera Search, Elastisearch 的文本索引技术</li>
<li>2、使用流处理方式来处理数据，将其导入到NoSQL数据库当做物化视图来使用</li>
<li>3、转移至审计系统</li>
<li>4、转移至监控系统</li>
<li>3、在不同的Dashboard进行展示</li>
<li>3、用作系统缓存</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="KAFKA" scheme="http://wanghaisheng.github.io/tags/KAFKA/"/>
    
      <category term="数据仓库" scheme="http://wanghaisheng.github.io/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="数据仓库" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
      <category term="KAFKA" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/KAFKA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[病人记录的健康信息PGHD]]></title>
    <link href="http://wanghaisheng.github.io/2015/04/11/patient-generated-data/"/>
    <id>http://wanghaisheng.github.io/2015/04/11/patient-generated-data/</id>
    <published>2015-04-11T13:40:12.000Z</published>
    <updated>2015-04-11T13:45:36.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="病人记录的健康信息PGHD">病人记录的健康信息PGHD</h2><p>patient-generated health-information (PGHI) or patient-generated health data (PGHD). 这样一些在医院、医疗机构之外由患者或护理人员创建、收集、记录的与某个健康问题相关的观察、检验结果、 抑或是对已有EHR中某项数据的确认或变更等信息。</p>
<p>这样的信息在患者诊疗或健康管理过程中究竟应该扮演怎么样的角色？ONC在年底就他们所作的工作编制了这么一个报告，目录结构如下</p>
<p>一 问题是什么</p>
<p>1.临床中的PGHD</p>
<p>2.科研中的PGHD</p>
<p>3.政策上的PGHD</p>
<p>二机会在哪里</p>
<p>三有哪些顾虑</p>
<p>1.医疗机构的顾虑</p>
<p>2.患者的顾虑</p>
<p>3.技术因素</p>
<p>4.隐私与安全问题</p>
<p>四 下一步</p>
<p>整体报告<a href="images/pghd_brief_final122013.pdf">见文件</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="PGHD" scheme="http://wanghaisheng.github.io/tags/PGHD/"/>
    
      <category term="互联网医疗" scheme="http://wanghaisheng.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91%E5%8C%BB%E7%96%97/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="互联网医疗" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E4%BA%92%E8%81%94%E7%BD%91%E5%8C%BB%E7%96%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Yelp公司总结的微服务架构的实践经验]]></title>
    <link href="http://wanghaisheng.github.io/2015/03/23/service-principles/"/>
    <id>http://wanghaisheng.github.io/2015/03/23/service-principles/</id>
    <published>2015-03-23T10:46:12.000Z</published>
    <updated>2015-03-23T10:46:27.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="Yelp公司总结的微服务架构的实践经验">Yelp公司总结的微服务架构的实践经验</h2><p>英文版：<br><a href="(https://github.com/Yelp/service-principles">Service Principles</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/service-principles" target="_blank" rel="external">Yelp公司总结的微服务架构的实践经验/</a></p>
<h1 id="Service_Principles">Service Principles</h1><ul>
<li><a href="#service-principles">服务设计的原则</a><ul>
<li><a href="#creation">创建</a><ul>
<li><a href="#discuss-the-organization-of-your-overall-system-first">首先探讨系统的整体架构</a></li>
<li><a href="#check-whether-you-can-add-your-feature-to-an-existing-service">核实是否能够给现有服务添加新的功能</a></li>
<li><a href="#consider-whether-your-feature-is-better-suited-to-a-library">考虑你的功能是否更适合作为一个库</a></li>
<li><a href="#services-are-curated-by-teams-not-individuals">服务应由团队而不是个人负责管理</a></li>
<li><a href="#services-are-a-long-term-commitment">服务是长期的commitment</a></li>
<li><a href="#factor-in-the-overhead-of-deploying-a-distributed-system">部署到分布式系统之前的考虑因素</a></li>
<li><a href="#prefer-larger-services">服务大点更好</a></li>
<li><a href="#minimize-the-depth-of-the-service-call-graph">最小化服务调用链的深度</a></li>
<li><a href="#minimize-the-number-of-services-owned-by-your-team">最小化你的团队所拥有的服务数目</a></li>
</ul>
</li>
<li><a href="#interfaces">接口</a><ul>
<li><a href="#interfaces-should-be-easy-to-understand">接口要易于理解</a></li>
<li><a href="#interfaces-should-be-robust">接口要尽可能健壮</a></li>
<li><a href="#changes-to-interfaces-should-be-backwards-compatible">接口变更应该要向后兼容</a></li>
</ul>
</li>
<li><a href="#testing">测试</a><ul>
<li><a href="#any-changes-to-your-service-should-be-able-to-be-tested-automatically">应该能够对任何接口变更进行自动化测试</a></li>
<li><a href="#your-interface-is-the-most-important-thing-to-test">最主要的是测试你的接口</a></li>
</ul>
</li>
<li><a href="#operations">运维</a><ul>
<li><a href="#you-are-responsible-for-running-your-service">服务的运行由你来负责</a></li>
<li><a href="#guide-your-clients’-expectations">引导客户的期望值</a></li>
<li><a href="#plan-for-failure">故障计划</a></li>
</ul>
</li>
<li><a href="#additional-reading">补充材料</a></li>
</ul>
</li>
</ul>
<h2 id="创建">创建</h2><h3 id="首先探讨系统的整体架构">首先探讨系统的整体架构</h3><p>在你开始考虑设计服务之初，也就是动手写代码和设计之前，和团队成员、其他服务领域的专家聊一聊。除了如何与现有的特性、产品以及服务如何适配之外，考虑一下你想要额外添加的功能。考虑一种最合理的组织整体功能的方式。有时候添加新功能意味着要对现有组件进行重组。</p>
<p>我们希望避免那些简单的 “append-only”服务架构，也就是说development只存在于新的服务中 </p>
<h3 id="核实是否能够给现有服务添加新的功能">核实是否能够给现有服务添加新的功能</h3><p>在编写新的服务之前，应该核实是否现有服务不包括你的功能。它可能会与现有的功能存在冲突，处理相同的信息，或者只是在现有服务功能范围内的演化。另一方面，如果给现有服务添加新的功能会让服务的使用者感到困惑的话，最好就不要添加新的功能了。</p>
<h3 id="考虑你的功能是否更适合作为一个库">考虑你的功能是否更适合作为一个库</h3><p>尽管这篇文档是讲服务的，但值得注意的是一些功能更适合做成库。为了帮助大家更好的决策，我们介绍了库与服务之间进行取舍的一些经验:</p>
<p><strong><em>升级速度</em></strong>  对于库来讲更适合哪些用户期望很长时间才进行升级的场合(通常数周或数月，甚至于数年)。一般来说，这要求功能本身相对小且自包含，所以本身变更的可能就小。相反，如果你还正在进行开发，或者你希望能够快速推送一些bug修订给用户，这样的功能更适合作为一个服务。这样功能就回更复杂一些，常常需要依赖外部的一些库。</p>
<p><strong><em>性能和可靠性</em></strong> 库与调用请求的寻址空间一样，而服务则处于不同的网络地址。假使其他东西都是一样的，访问一个库 要比服务更快更可靠。但是，如果功能对资源需求较高，比如CPU,内存和硬盘，那么作为一个服务能够让客户端的运行效率更高，能够使得服务所依赖的硬件独立于客户端的硬件而水平扩展。</p>
<p><strong><em>技术无关性</em></strong><br>大多数情况下，Yelp使用的是Python，有一些后台服务是Java的。如果你的服务希望 Python and Java都能调用，那么做成服务能够帮你避免重复写两个库。</p>
<h3 id="服务应由团队而不是个人负责管理">服务应由团队而不是个人负责管理</h3><p>每个服务应由团队而不是个人负责管理，这样出了问题，就不会出现只有一个开发人员知道如何解决bug。实践中也就是说，每个服务从最开始都至少要2个人员参与，分摊维护的责任。</p>
<h3 id="服务是长期的投入">服务是长期的投入</h3><p>Services are a long-term commitment</p>
<p>当你编写代码时，你的团队会进行持续的维护和运营支持。随着时间推移，你的服务用户将依赖服务才能够运营。你需要持续的监控性能、一致性和 brown-outs.你或许也要处理下游系统的故障。</p>
<h3 id="部署到分布式系统之前的考虑因素">部署到分布式系统之前的考虑因素</h3><p>一个服务的推出往往花费的时间比你想象的要长。这可能是由于未预料到的不同服务间的交互，或者是搭建监控环境时的困难所导致的。负载测试没有100%完美的，因此需要部署成功之前制定一个多个阶段和迭代的持续计划。</p>
<h3 id="服务大点更好Prefer_larger_services">服务大点更好Prefer larger services</h3><p>尽量把相关功能整成一个较大的服务而非多个很小的服务。记住 你的大服务应该是逻辑内聚的，比如你仍然要具体的描述服务的功能。该原则的原理如下：</p>
<ul>
<li>流程内调用比服务间调用要更快、更可靠</li>
<li>单独更改一个服务比在多个服务间协调变更要简单一些。实际上，更改服务接口的成本相对是很高的</li>
<li>在运营层面上，保证统一的流程正常运行的话，数量越少越容易.</li>
<li>有些运维任务必须在每个服务上单独进行，比如库版本的更新。服务更少这个工作量越小</li>
</ul>
<h3 id="最小化服务调用链的深度">最小化服务调用链的深度</h3><p>在对服务进行架构时，调用链长度越小越好 (service <code>A</code> calls services <code>B</code>, <code>C</code> and <code>D</code>)比(<code>A</code> calls <code>B</code> calls <code>C</code> calls <code>D</code>)好。原理如下:</p>
<ul>
<li>更容易来推出调用链; 在长度较小的情况下, B, C and D 没有依赖任何外部的服务，而在较长的情况下B和C服务都依赖其他服务。注意 这与 <a href="http://en.wikipedia.org/wiki/Multitier_architecture#Three-tier_architecture" target="_blank" rel="external">three-tier architecture</a>很匹配。</li>
<li>这样能提高性能，在较短的情况下，服务的调用可以并发执行(只要服务间互相独立即可)而较长的情况下只能串行执行</li>
</ul>
<h3 id="最小化你的团队所拥有的服务数目">最小化你的团队所拥有的服务数目</h3><p>你所在的团队可能负责某个产品或一些产品的交付。你们所开发的服务应该与这一目标相统一。如果你们所拥有的服务过多，也就是说你的团队过于面面俱到，或者你们服务的统一程度还不够.</p>
<p>如果你们团队已经在负责大量的重要服务，且新功能并不属于任何已有的服务，在你们团队能够接受构建新服务的任务之前你可能需要把任务推出去。也应避免2个以上团队负责某个服务的情况</p>
<h2 id="接口">接口</h2><p>你的服务接口可能不只是对外发布的<a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="external">REST</a> 接口. 日志、数据备份、数据流等其他服务使用的都要考虑在内。接口指的是对客户端有用的所有东西的总和.</p>
<blockquote>
<p>比如我们一直在模仿的接口设计的实践, 参考 <a href="https://developer.github.com/v3/" target="_blank" rel="external">GitHub API v3</a> 和  <a href="https://developer.paypal.com/docs/api/" target="_blank" rel="external">PayPal REST API</a></p>
</blockquote>
<h3 id="接口要易于理解">接口要易于理解</h3><p>在设计接口时, 要遵循如下最佳实践:</p>
<ul>
<li>使用自描述的名称。对内对外保持一直</li>
<li>让领域专家评审你的接口</li>
<li>使用一种显而易见的方式来完成每个操作</li>
<li>在将现有功能移植成服务时不一定会成为最好的网络节点。远端执行会改变一致性、可靠性和性能的本质。设计服务的边界时应保证与其他系统是松耦合的.</li>
<li>将读与更新操作的接口分离. (See <a href="http://martinfowler.com/bliki/CQRS.html" target="_blank" rel="external">CQRS</a> as an example)</li>
<li>尽可能的最小化、简单化你的接口。这样测试起来也方便</li>
<li>尽可能对存在疑虑的地方写上文档</li>
<li>跟自己发问: “在没有和你请教之前，新人能够看懂你的接口?”</li>
</ul>
<h3 id="接口要尽可能健壮">接口要尽可能健壮</h3><p>设计接口时把它当做是暴露给整个互联网来使用的。只暴露那些客户端需要的信息。尽可能不要提供不安全的、高成本的操作</p>
<p>将只读和能够改变状态的方法区分开来。理想情况下，只读方法是可缓存的且是幂等的</p>
<h3 id="接口变更应该要向后兼容">接口变更应该要向后兼容</h3><p>接口应该有某种版本控制机制。当改变一个服务接口时，之前存在的客户端仍然能够调用你之前版本的接口。你不能破坏这些客户端。要么做好计划持续的支持这些旧的客户端，要么花些时间使得它们和更新相协调。同时有多个版本的接口并存是可以接受的。</p>
<h2 id="测试">测试</h2><h3 id="应该能够对任何接口变更进行自动化测试">应该能够对任何接口变更进行自动化测试</h3><p>Yelp没有单独的QA工程师。相反我们靠计算机来进行校验工作。你的服务由你来负责维护测试工具。测试应该在开发和测试环境中都能够快速可靠的完成。</p>
<p>一个优秀的测试工具就像一个金字塔。最基础的是单元测试：很多快速的很小的测试代码中的单个实现的细节。中间一层是集成测试，这时候对服务进行交互的多个组件进行校验。最上面是很小但很重要的验收测试，主要校验你的服务是否能够与其他服务进行交互</p>
<h3 id="最主要的是测试你的接口">最主要的是测试你的接口</h3><p>接口是你们协议的重要部分，也就是客户端使用和交互的东西。如果你改变了接口，破坏或改变它原来的功能你会影响所有调用你服务的客户端。这个影响是很大的。</p>
<p>这也就是为什么接口测试是最主要的。接口测试能够告诉你客户端实际看到的是什么，持续的测试能够保证客户端总是看到这些结果。确保接口的所有现用版本的性能是一致的。尽可能早的编写测试，整个黑盒测试所看到的结果应该驱动你的接口设计</p>
<h2 id="运维">运维</h2><h3 id="服务的运行由你来负责">服务的运行由你来负责</h3><p>你的团队负责你们服务的持续运维。运维团队是解决整体站点问题的第一道防线，但是涉及到服务就只能做些边边角角的工作。监控服务的健康度是你的职责所在，做一些有意义的提醒以及出现问题时的方案。你是最了解服务运行机制的人，因此你也是发现和解决问题的最佳人选</p>
<p>为服务编写runbook。其中应包含常见的运维场景(诸如部署、监控和问题处理)。记录已知的错误。</p>
<h3 id="引导客户的诉求">引导客户的诉求</h3><p>你要能够准确清晰的向客户传达你们服务的运行特征。我们建议你要积极地监控和对服务进行测试以理解这些特征，以确保哪些你所承诺要达到的维护程度。</p>
<p>比如，如果我告诉客户99.99%的正常运行情况下99%的请求都在100ms以下。也就是说我要不停的监控性能和可用性来保证我的承诺。</p>
<p>不同服务运维承诺不同是可取的。a “cat picture of the day”服务的正常运行时间只是团队内部用来调剂气氛的就不需要实时的监控和提醒了。一个生产系统中的对主要节点很重要的服务就需要多关注正常运行时间、性能和其他可能会出现的问题</p>
<h3 id="故障计划">故障计划</h3><p>SOA的特质之一是分布式系统中故障场景数量的急剧增加。从运维角度来看，这意味着你的服务必须<br> strive to be honest about the collaborating services and datastores it requires to operate, and those whose downtime can be gracefully handled.</p>
<p>服务启动之初就要有如何确定外部的依赖关系和记录它们之间关系的计划。外部链接的指标，以及主动式和开发层面的保护措施以保障服务在外部故障之后的处理。最后一点，你要实时的监控这些潜在的weak points，根据严重程度来提醒当班团队.</p>
<p>另外，服务可能在跨机器、跨rack和跨数据中心间运行，每种情况都可能出现故障。要深刻理解这样的场景下服务的表型。</p>
<p>设计良好的服务要考虑所有的故障点，做出合理的决策来减少每个故障的可能性。</p>
<h2 id="补充材料">补充材料</h2><ul>
<li><a href="http://martinfowler.com/articles/microservices.html" target="_blank" rel="external">Martin Fowler on Microservices</a></li>
<li><a href="http://en.wikipedia.org/wiki/Law_of_Demeter" target="_blank" rel="external">Law of Demeter</a></li>
<li><a href="http://steverant.pen.io/" target="_blank" rel="external">Steve Yegge’s Google Platforms Rant</a></li>
<li><a href="http://en.wikipedia.org/wiki/Fallacies_of_distributed_computing" target="_blank" rel="external">The Fallacies of Distributed Computing</a></li>
<li><a href="http://pyvideo.org/video/2647/designing-poetic-apis" target="_blank" rel="external">Designing Poetic APIs</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[<微服务架构在Netflix的应用>系列博文-4 微服务架构在Netflix的应用：团队和流程设计相关的经验教训]]></title>
    <link href="http://wanghaisheng.github.io/2015/03/23/adopting-microservices-at-netflix-lessons-for-team-and-process-design/"/>
    <id>http://wanghaisheng.github.io/2015/03/23/adopting-microservices-at-netflix-lessons-for-team-and-process-design/</id>
    <published>2015-03-23T03:37:12.000Z</published>
    <updated>2015-04-27T13:40:29.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="第四篇-微服务架构在Netflix的应用：团队和流程设计相关的经验教训">第四篇-微服务架构在Netflix的应用：团队和流程设计相关的经验教训</h2><p>&lt;微服务架构在Netflix的应用&gt;系列博文-共四篇</p>
<p>英文版： <a href="(http://blogs.forrester.com/ted_schadler/13-11-20-mobile_needs_a_four_tier_engagement_platform/">第一部分： The Four-Tier Engagement Platform</a><br>中文版：<a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第一部分：移动应用所需要的四层架构/</a></p>
<p>英文版：<a href="http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/" target="_blank" rel="external">第二部分：http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/</a><br>中文版：<a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第二部分：是时候转移到四层架构上来了/</a></p>
<p>英文版：<a href="http://nginx.com/blog/microservices-at-netflix-architectural-best-practices/" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a><br>中文版：<a href="http://wanghaisheng.github.io/2015/03/23/microservices-at-netflix-architectural-best-practices" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a></p>
<p>英文版：<a href="http://nginx.com/blog/adopting-microservices-at-netflix-lessons-for-team-and-process-design/" target="_blank" rel="external">第四部分：Adopting Microservices at Netflix: Lessons for Team and Process Design</a><br>中文版：<a href="http://wanghaisheng.github.io/2015/03/23/adopting-microservices-at-netflix-lessons-for-team-and-process-design" target="_blank" rel="external">第四部分：微服务架构在Netflix的应用：团队和流程设计相关的经验教训</a></p>
<p>In a previous blog post, we shared best practices for designing a microservices architecture, based on Adrian Cockcroft’s presentation at nginx.conf2014 about his experience as Director of Web Engineering and then Cloud Architect at Netflix. In this follow-up post, we’ll review his recommendations for retooling your development team and processes for a smooth transition to microservices.<br>Optimize for Speed, not Efficiency</p>
<p>Source: Xyzproject@Dreamstime.com</p>
<p>The top lesson that Cockcroft learned at Netflix is that speed wins in the marketplace. If you ask any developer whether a slower development process is better, no one ever says yes. Nor do management or customers ever complain that your development cycle is too fast for them. The need for speed doesn’t just apply to tech companies, either: as software becomes increasingly ubiquitous on the Internet of Things – in cars, appliances, and sensors as well as mobile devices – companies that didn’t used to do software development at all now find that their success depends on being good at it.</p>
<p>Netflix made an early decision to optimize for speed. This refers specifically to tooling your software development process so that you can react quickly to what your customers want, or even better, can create innovative web experiences that attract customers. Speed means learning about your customers and giving them what they want at a faster pace than your competitors. By the time competitors are ready to challenge you in a specific way, you’ve moved on to the next set of improvements.</p>
<p>This approach turns the usual paradigm of optimizing for efficiency on its head. Efficiency generally means trying to control the overall flow of the development process to eliminate duplication of effort and avoid mistakes, with an eye to keeping costs down. The common result is that you end up focusing on savings instead of looking for opportunities that increase revenue.</p>
<p>In Cockcroft’s experience, if you say “I’m doing this because it’s more efficient,” the unintended result is that you’re slowing someone else down. This is not an encouragement to be wasteful, but you should optimize for speed first. Efficiency becomes secondary as you satisfy the constraint that you’re not slowing things down. The way you grow the business to be more efficient is to go faster.<br>Make Sure Your Assumptions are Still True</p>
<p>Many large companies that have enjoyed success in their market (we can call them incumbents) are finding themselves overtaken by nimbler, usually smaller, organizations (disruptors) that react much more quickly to changing consumer behavior. Their large size isn’t necessarily the root of the problem – Netflix is no longer a small company, for example. As Cockcroft sees it, the main cause of difficulty for industry incumbents is that they’re operating under business assumptions that are no longer true. Or, as Will Rogers put it,</p>
<pre><code>It’s <span class="keyword">not</span> what we don’t know <span class="keyword">that</span> hurts. It’s what we know <span class="keyword">that</span> ain’t so.”
</code></pre><p>Of course, you have to make assumptions as you formulate a business model, and then it makes sense to optimize your business practices around them. The danger comes from sticking with assumptions after they’re no longer true, which means you’re optimizing on the wrong thing. That’s when you become vulnerable to industry disruptors who are making the right assumptions and optimizations for the current business climate.</p>
<p>As examples, consider the following assumptions that hold sway at many incumbents. We’ll examine them further in the indicated sections and describe the approach Netflix adopted.</p>
<pre><code>Computing power <span class="keyword">is</span> expensive. This was <span class="keyword">true</span> when increasing your computing capacity required capital expenditure <span class="keyword">on</span> computer hardware. See Put Your Infrastructure <span class="keyword">in</span> the Cloud.
Process prevents problems. At many companies, the standard response <span class="keyword">to</span> something going wrong <span class="keyword">is</span> <span class="keyword">to</span> <span class="keyword">add</span> a preventative <span class="keyword">step</span> <span class="keyword">to</span> the relevant <span class="function"><span class="keyword">procedure</span>. <span class="title">See</span> <span class="title">Create</span> <span class="title">a</span> <span class="title">High</span> <span class="title">Freedom</span>, <span class="title">High</span> <span class="title">Responsibility</span> <span class="title">Culture</span> <span class="title">with</span> <span class="title">Less</span> <span class="title">Process</span>.</span>
</code></pre><p>Here are some ways to avoid holding onto assumptions that have passed their expiration date:</p>
<pre><code>As obvious <span class="keyword">as</span> <span class="keyword">it</span> might seem, you need <span class="keyword">to</span> make your assumptions explicit, <span class="keyword">then</span> periodically review them <span class="keyword">to</span> make sure they still hold <span class="constant">true</span>.
Keep aware <span class="keyword">of</span> technological trends. As an example, <span class="keyword">the</span> cost <span class="keyword">of</span> solid state storage drive (SSDs) storage continues <span class="keyword">to</span> go down. It’s still more expensive than regular disks, <span class="keyword">but</span> <span class="keyword">the</span> cost difference <span class="keyword">is</span> becoming small enough <span class="keyword">that</span> many companies are deciding <span class="keyword">the</span> superior performance <span class="keyword">is</span> worth paying a bit more <span class="keyword">for</span>. [Ed: In this entertaining video, Fastly founder <span class="keyword">and</span> CEO Artur Bergman explains why he believes SSDs are always <span class="keyword">the</span> right choice.]
Talk <span class="keyword">to</span> people who aren’t your customers. This <span class="keyword">is</span> especially necessary <span class="keyword">for</span> incumbents, who need <span class="keyword">to</span> make sure <span class="keyword">that</span> potential new customers are interested <span class="keyword">in</span> their product. Otherwise, they don’t hear <span class="keyword">about</span> <span class="keyword">the</span> fact <span class="keyword">that</span> they’re <span class="keyword">not</span> being used. As an example, <span class="keyword">some</span> vendors <span class="keyword">in</span> <span class="keyword">the</span> storage <span class="constant">space</span> are building hyper-converged systems even <span class="keyword">as</span> more <span class="keyword">and</span> more companies are storing their data <span class="keyword">in</span> <span class="keyword">the</span> cloud <span class="keyword">and</span> using open source storage management software. Netflix, <span class="keyword">for</span> example, stores data <span class="function_start"><span class="keyword">on</span></span> Amazon Web Services (AWS) servers <span class="keyword">with</span> SSDs <span class="keyword">and</span> manages <span class="keyword">it</span> <span class="keyword">with</span> Apache Cassandra. A single specialist <span class="keyword">in</span> Java distributed systems <span class="keyword">is</span> managing <span class="keyword">the</span> entire configuration <span class="keyword">without</span> any commercial storage tools <span class="keyword">or</span> help <span class="keyword">from</span> engineers specializing <span class="keyword">in</span> storage, SAN, <span class="keyword">or</span> backup.
Don’t base your future strategy <span class="function_start"><span class="keyword">on</span></span> current IT spending, <span class="keyword">but</span> instead <span class="function_start"><span class="keyword">on</span></span> level <span class="keyword">of</span> adoption <span class="keyword">by</span> developers. Suppose <span class="keyword">that</span> your company accounts <span class="keyword">for</span> nearly all spending <span class="keyword">in</span> <span class="keyword">the</span> market <span class="keyword">for</span> proprietary virtualization software, <span class="keyword">but</span> <span class="keyword">then</span> a competitor starts offering an open source-based product <span class="keyword">at</span> only <span class="number">1</span>% <span class="keyword">the</span> cost <span class="keyword">of</span> yours. If people start choosing <span class="keyword">it</span> <span class="keyword">instead of</span> your product, than <span class="keyword">at</span> <span class="keyword">the</span> point <span class="keyword">that</span> your share <span class="keyword">of</span> total spending <span class="keyword">is</span> still <span class="number">90</span>%, your market share has declined <span class="keyword">to</span> only <span class="number">10</span>%. If you’re only attending <span class="keyword">to</span> your revenue, <span class="keyword">it</span> seems like you’re still <span class="keyword">in</span> good shape, <span class="keyword">but</span> <span class="number">10</span>% <span class="keyword">of</span> market share can collapse really quickly.
</code></pre><p>Put Your Infrastructure in the Cloud<br>Source: Fbmadeira | Dreamstime.com</p>
<p>Source: Fbmadeira@Dreamstime.com</p>
<p>In Make Sure Your Assumptions are Still True, we mentioned that in the past it was valid to base your business plan on the assumption that computing power was expensive, because it was: the only way to increase your computing capacity was to buy computer hardware. You could then make money by using this expensive resource in the right way to solve customer problems.</p>
<p>The advent of cloud computing has pretty much completely invalidated this assumption. It is now possible to buy the amount of capacity you need when you need it, and to pay for only the time you actually use it. The new assumption you need to make is that (virtual) machines are ephemeral. You can create and destroy them at the touch of a button or a call to an API, without any need to negotiate with other departments in your company.</p>
<p>One way to think of this change is that the self-service cloud makes formerly impossible things instantaneous. All of Netflix’s engineers are in California, but they manage a worldwide infrastructure. The cloud enables them to experiment and determine whether (for example) adding servers in particular location improves performance. Suppose they notice problems with video delivery in Brazil. They can easily set up 100 cloud server instances in São Paulo within a couple hours. If after a week they determine that the difference in delivery speed and reliability isn’t large enought to justify the cost of the additional server instances, they can shut them down just as quickly and easily as they created them.</p>
<p>This kind of experiment would be so expensive with a traditional infrastructure that you would never attempt it. You would have to hire an agent in São Paulo to coordinate the project, find a data center, satisfy Brazilian government regulations, ship machines to Brazil, and so on. It would be six months before you could even run the test and find out that increased local capacity didn’t improve your delivery speed.<br>Create a High Freedom, High Responsibility Culture with Less Process</p>
<p>In Make Sure Your Assumptions are Still True, we observed that many companies create rules and processes to prevent problems. When someone makes a mistake, they add a rule to the HR manual that says “well, don’t do that again.” If you read some HR manuals from this perspective, you can extract a historical record of everything that went wrong at the company. When something goes wrong in the development process, the corresponding reaction is to add a new step to the procedure. The major problem with creating process to prevent problems is that over time you build up complex “scar tissue” processes that slow you down.</p>
<p>Netflix doesn’t have an HR manual. There is a single guideline: “Act in NetFlix’s best interest.” The idea is that if an employee can’t figure out how to interpret the guideline in a given situation, he or she doesn’t have enough judgment to work there. If you don’t trust the judgment of the people on your team, you have to ask why you’re employing them. It’s true that you’ll have to fire people occasionally for violating the guideline. Overall, the high level of mutual trust among members of a team, and across the company as a whole, becomes a strong binding force.</p>
<p>The following books outline new ways of thinking about process if you’re looking to transform your organization:</p>
<pre><code>The Goal: A Process <span class="operator">of</span> Ongoing Improvement <span class="keyword">by</span> Eliyahu M. Goldratt <span class="operator">and</span> Jeff Cox. This book has become <span class="operator">a</span> standard management <span class="keyword">text</span> <span class="keyword">at</span> business schools since its original publication <span class="operator">in</span> <span class="number">1984.</span> Written <span class="keyword">as</span> <span class="operator">a</span> novel about <span class="operator">a</span> manager who has only <span class="number">90</span> days <span class="built_in">to</span> improve performance <span class="keyword">at</span> his factory <span class="operator">or</span> have <span class="keyword">it</span> closed down, <span class="keyword">it</span> embodies Goldratt’s Theory <span class="operator">of</span> Constraints <span class="operator">in</span> <span class="operator">the</span> context <span class="operator">of</span> <span class="built_in">process</span> control <span class="operator">and</span> automation.
The Phoenix Project: A Novel about IT, DevOps, <span class="operator">and</span> Helping Your Business Win <span class="keyword">by</span> Gene Kim <span class="operator">and</span> Kevin Behr. As <span class="operator">the</span> title indicates, <span class="keyword">it</span>’s also <span class="operator">a</span> novel, about <span class="operator">an</span> IT manager who has <span class="number">90</span> days <span class="built_in">to</span> save <span class="operator">a</span> project that’s late <span class="operator">and</span> over budget, <span class="operator">or</span> his entire department will be outsourced. He discovers DevOps <span class="keyword">as</span> <span class="operator">the</span> solution <span class="built_in">to</span> his problem.
</code></pre><p>Replace Silos with Microservice Teams</p>
<p>Most software development groups are separated into silos, with no overlap of personnel between them. The standard process for a software development project starts with the product manager meeting with the user experience and development groups to discuss ideas for new features. After the idea is implemented in code, the code is passed to the quality assurance (QA) and database administration teams and discussed in more meetings. Communication with the system, network, and SAN administrators is often via tickets. The whole process tends to be slow and loaded with overhead.<br>silos-base</p>
<p>Source: Adrian Cockcroft</p>
<p>Some companies try to speed up by creating small “start-up”-style teams that handle the development process from end to end, or sometimes such teams are the result of acquisitions where the acquired company continues to run independently as a separate division. But if the small teams are still doing monolithic delivery, there are usually still handoffs between individuals or groups with responsibility for different functions. The process suffers from the same problems as monolithic delivery in larger companies – it’s simply not very efficient or agile.<br>Source: Adrian Cockcroft</p>
<p>Source: Adrian Cockcroft</p>
<p>Conway’s law says that the interface structure of a software system will reflect the social structure of the organization that produced it. So if you want to switch to a microservices architecture, you need to organize your staff into product teams and use DevOps methodology. There are no longer distinct product managers, UX managers, development managers, and so on, managing downward in their silos. There is a manager for each product feature (implemented as a microservice), who supervises a team that handles all aspects of software development for the microservice, from conception through deployment. The platform team provides infrastructure support that the product teams access via APIs. At Netflix, the platform team was mostly AWS in Seattle, with some Netflix-managed infrastructure layers built on top. But it doesn’t matter whether your cloud platform is in-house or public; the important thing is that it’s API-driven, self-service, and automatable.<br>Source: Adrian Cockcroft</p>
<p>Source: Adrian Cockcroft</p>
<p>Adopt Continuous Delivery, Guided by the OODA Loop</p>
<p>A siloed team organization is usually paired with monolithic delivery model, in which an integrated, multi-function application is released as a unit (often version-numbered) on a regular schedule. Most software development teams use this model initially because it is relatively simple and works well enough with a small number of developers (say, 50 or fewer). However, as the team grows it becomes a real issue when you discover a bug in one developer’s code during QA or production testing and the work of 99 other developers is blocked from release until the bug is fixed.</p>
<p>In 2009 Netflix adopted a continuous delivery model, which meshes perfectly with a microservices architecture. Each microservice represents a single product feature that can be updated independently of the other microservices and on its own schedule. Discovering a bug in a microservice has no effect on the release schedule of any other microservice. Continuous delivery relies on packaging microservices in standard containers. Netflix initially used AWS machine images (AMIs) and it was possible to deploy an update into a test or production environment in about 10 minutes. With Docker, that time is reduced even further, to mere seconds in some cases.</p>
<p>At Netflix, the conceptual framework for continuous development and delivery is an Observe-Orient-Decide-Act (OODA) loop.<br>Source: Adrian Cockcroft (<a href="http://www.slideshare.net/adrianco" target="_blank" rel="external">http://www.slideshare.net/adrianco</a>)</p>
<p>Source: Adrian Cockcroft (<a href="http://www.slideshare.net/adrianco" target="_blank" rel="external">http://www.slideshare.net/adrianco</a>)</p>
<p>Observe refers to examining your current status to look for places where you can innovate. You want your company culture to implicitly authorize anyone who notices an opportunity to start a project to exploit it. For example, you might notice what the diagram calls a “customer pain point”: a lot of people abandoning the registration process on your website when they reach a certain step. You can undertake a project to investigate why and fix the problem.</p>
<p>Orient refers to analyzing metrics to understand the reasons for the phenomena you’ve observed at the Observe point. Often this involves analyzing large amounts of unstructured data, such as log files; this is often referred to as big data analysis. The answers you’re looking for are not already in your business intelligence database. You’re examining data that no one has previously looked at and asking questions that haven’t been asked before.</p>
<p>Decide refers to developing and executing a project plan. Company culture is a big factor at this point. As previously discussed, in a high-freedom, high-responsibility culture you don’t need to get management approval before starting to make changes. You share your plan, but you don’t have to ask for permission.</p>
<p>Act refers to testing your solution and putting it into production. You deploy a microservice that includes your incremental feature to a cloud environment, where it’s automatically put into an AB test to compare it to the previous solution, side by side, for as long as it takes to collect the data that shows whether your approach is better. Cooperating microservices aren’t disrupted, and customers don’t see your changes unless they’re selected for the test. If your solution is better, you deploy it into production. It doesn’t have to be a big improvement, either. If the number of clients for your microservice is large enough, then even a fraction of a percent improvement (in response time, say) can be shown to be statistically valid, and the cumulative effect over time of many small changes can be significant.</p>
<p>Now you’re back at the Observe point. You don’t always have to perform all the steps or do them in strict order, either. The important characteristic of the process is that it enables you quickly to determine what your customers want and to create it for them. Cockcroft says “it’s hard not to win” if you’re basing your moves on enough data points and your competitors are making guesses that take months to be proven or disproven.</p>
<p>The state of art is to circle the loop every one to two weeks, but every microservice team can do it independently. With microservices you can go much faster because you’re not trying to get entire company going around the loop in lockstep.<br>How NGINX Plus Can Help</p>
<p>At NGINX we believe it’s crucial to your future success that you adopt a 4-tier application architecture in which applications are developed and deployed as sets of microservices. We hope the information we’ve shared in this post and its predecessor, Adopting Microservices at Netflix: Lessons for Architectural Design, are helpful as you plan your transition to today’s state-of-the-art architecture for application development.</p>
<p>When it’s time to deliver your apps, NGINX Plus offers an application delivery platform that provides the superior performance, reliability, and scalability your users expect. Fully adopting a microservices-based architecture is easier and more likely to succeed when you move to a single software tool for web serving, load balancing, and content caching. NGINX Plus combines those functions and more in one easy to deploy and manage package. Our approach empowers developers to define and control the flawless delivery of their microservices, while respecting the standards and best practices put into place by a platform team. Click here to learn more about how NGINX Plus can help your applications succeed.</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[<微服务架构在Netflix的应用>系列博文-3 微服务架构在Netflix的应用：架构设计的经验教训]]></title>
    <link href="http://wanghaisheng.github.io/2015/03/23/microservices-at-netflix-architectural-best-practices/"/>
    <id>http://wanghaisheng.github.io/2015/03/23/microservices-at-netflix-architectural-best-practices/</id>
    <published>2015-03-23T03:27:12.000Z</published>
    <updated>2015-04-27T13:40:21.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="第三篇-微服务架构在Netflix的应用：架构设计的经验教训">第三篇-微服务架构在Netflix的应用：架构设计的经验教训</h2><p>&lt;微服务架构在Netflix的应用&gt;系列博文-共四篇</p>
<p>英文版： <a href="(http://blogs.forrester.com/ted_schadler/13-11-20-mobile_needs_a_four_tier_engagement_platform/">第一部分： The Four-Tier Engagement Platform</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第一部分：移动应用所需要的四层架构/</a></p>
<p>英文版： <a href="http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/" target="_blank" rel="external">第二部分：http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第二部分：是时候转移到四层架构上来了/</a></p>
<p>英文版： <a href="http://nginx.com/blog/microservices-at-netflix-architectural-best-practices/" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/microservices-at-netflix-architectural-best-practices" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a></p>
<p>英文版：<br><a href="http://nginx.com/blog/adopting-microservices-at-netflix-lessons-for-team-and-process-design/" target="_blank" rel="external">第四部分：Adopting Microservices at Netflix: Lessons for Team and Process Design </a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/adopting-microservices-at-netflix-lessons-for-team-and-process-design" target="_blank" rel="external">第四部分：微服务架构在Netflix的应用：团队和流程设计相关的经验教训</a></p>
<p>在最近的一些博客里我们解释了采用<a href="http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/" target="_blank" rel="external">四层的架构</a>对于开发和部署<a href="http://nginx.com/blog/building-microservices-free-ebook-oreilly-nginx/" target="_blank" rel="external">微服务</a>的应用程序是很重要的。<br>如果你仍然采用十年前的开发流程和应用架构，你不能很快地获取和满足移动端用户的需求，移动端用户可以从越来越多的APP中进行选择。</p>
<p>向微服务架构的转换给市场上的公司带来了很多的机会。对于系统架构和开发人员，它在为用户提供新的用户体验的同时又带来了一种前所未有的控制力和速度。但在现在这样紧张的节骨眼上，感觉上是不允许出一点差错的。现实世界中，你不可能革新期间就停止APP的开发和部署的。你深深明白未来的成功取决于能否成功迁移到微服务架构中来，但是你该怎么来做呢？</p>
<p><a href="http://nginx.com/wp-content/uploads/2015/02/Netflix_Logo_Digital-Video.png" target="_blank" rel="external"><img src="http://nginx.com/wp-content/uploads/2015/02/Netflix_Logo_Digital-Video-300x169.png" alt="Netflix_Logo_Digital+Video"></a></p>
<p>幸运的是，微服务的早期实践者本着开源的精神慷慨地分享他们的专业知识，不仅有开源代码，也会在会议上做一些演讲，写一些博客。Netflix就是其中之一。Adrian Cockcroft作为web工程和云计算架构师总监负责监督了公司内负责DVD租赁系统的100人的工程师团队从传统开发模式到只需要很少人员负责数百个后台服务的微服务架构来为数百万的Nrtflix客户提供数字娱乐服务。Battery Ventures公司的技术人员Cockcroft是微服务和云架构方面著名的布道者，目前供职于Nginx技术咨询委员会。<br>后续的两篇文章中，我们会给大家将一些从去年Cockcroft做的2场演讲，一场是10月的NGINX大会上，一场是几个月之后的硅谷微服务meetup中的一些启发。</p>
<ul>
<li>这篇里面主要是给微服务架构一个定义，阐述了一些设计微服务架构的最佳实践</li>
<li>后面的一篇讨论了采用软件设计新思路以及绕着这种新思路来重组团队的原因和方式。</li>
</ul>
<h2 id="什么是微服务架构?">什么是微服务架构?</h2><p>Cockcroft 把微服务架构定义为由松耦合的有相应语境的元素构成的一种面向服务的架构</p>
<p>松耦合意味着你可以独立更新这些服务。更新其中一个服务并不会改变其他的服务。<br>如果你的系统里有大量的特殊服务，但是又必须同时更新它们，它们又不是微服务，因为它们不是松耦合的。在向微服务迁移的时候人们常常会把数据库的耦合看的过重，也就是所有服务都连的是同一个数据库，更新其中一个服务就意味着要改变数据库的schema。这种情况你需要对数据库进行拆分</p>
<p><em>bounded contexts</em>的概念来源于Eric Evans的书 <em>Domain Driven Design</em> 。就软件开发的目的而言，拥有恰当语境的微服务本身是自包含的。由于微服务和其他微服务之间交互是严格通过API来进行的，你不需要共享数据结构、数据库表结构和对象的内部表达形式，在不了解其他服务的内部结构的情况下你也可以理解和更新一个微服务的代码。</p>
<p>如果你开发的是互联网应用，你已经很熟悉这些概念了，实际上只不过用的不是同样的叫法。大多数移动APP都用到了一些后台服务，这样用户可以在APP里实现Facebook里共享、从Google Map里得到地理位置、在Foursquare找到一家餐馆。假如你的APP与这些服务是紧耦合的，这样你在更新之前必须与开发团队进行协调来确保你的更新不会破坏任何东西。</p>
<p>在使用微服务架构时，你要把其他的开发团队看作是这些后台服务：也就是那些你的微服务通过API交互的外部服务。微服务之间最通用的协议就是它们的API足够稳定，也是向前兼容的。</p>
<p>就跟Google Map 的API不可能事先提醒就进行更改是不能所接受的，这样的话，你是API可以演进，但是必须要与之前的版本兼容</p>
<h2 id="微服务架构设计的最佳实践">微服务架构设计的最佳实践</h2><p>Cockcroft解释他在Netflix的职位是云架构师，他的职责不是管理架构，而是发现和标准化公司工程师所形成的架构。Netflix开发团队提出了几条设计和实现微服务架构的最佳实践</p>
<h3 id="每个微服务的数据单独存储">每个微服务的数据单独存储</h3><p> 不同微服务不要使用同一个后台数据存储。让开发团队选择适合每个微服务的数据库。或许，不同团队使用同样的数据结构来存储会减少工作量，但当其中某个团队想要更改数据结构的时候，其他服务不得不跟着改变。</p>
<p> 数据的拆分会使得数据管理异常复杂，是因为单独的存储系统不容易同步，易于出现不一致的情况，外键也会发生意外的改变。你需要一个后台运行的<a href="http://en.wikipedia.org/wiki/Master_data_management" target="_blank" rel="external">主数据管理</a>的工具来发现和修复不一致的情况。比如，你需要检查每个存储订阅者ID的数据库来确保所有的ID都是同一个。这个工具可以自己写或者直接买。很多商用的关系型数据库都提供此类核对，它常常过于耦合，不能支持很好的伸缩性。</p>
<h3 id="使用类似程度的成熟度来维护代码">使用类似程度的成熟度来维护代码</h3><p>微服务中所有代码都保持同样的类似程度的成熟度和稳定度。也就是说，你想要重写或给一个运行良好的已部署好的微服务添加一些代码的话，最好的方式常常 是对于新的或要改动的代码，新建一个微服务，现有的微服务丢着不管就行。 [编辑注：这种架构常常称之为<a href="http://highops.com/insights/immutable-infrastructure-what-is-it/" target="_blank" rel="external">immutable infrastructure</a> principle.] 这样的话，你可以迭代式的部署和测试新代码，直至没有bug，性能足够好,现有的微服务不会出现故障或性能下降.一旦新的微服务和原始的服务一样稳定，如果确实需要进行功能合并的话，你可以将其合并在一起，或者处于性能的考虑合并它们。然而，就Cockcroft’s的经验来讲，常常是你发现你的服务太大而要进行拆分。</p>
<h3 id="每个微服务都单独进行编译构建">每个微服务都单独进行编译构建</h3><p>每个微服务都单独进行编译构建，这样你就从代码库里某个版本中抽取单独的组件。这样，你可以拿到多个类似文件的微服务，但却是不同的版本的。这样如果要对codebase进行清理会比较麻烦，但对于在新建微服务时添加新文件时的便利性的话，是值得的。The asymmetry is intentional: 你想要引入新的微服务、文件或者功能，很容易又不会存在风险</p>
<h3 id="部署到容器之中">部署到容器之中</h3><p>将微服务部署到容器中很重要是因为这意味着你需要一款部署的工具。只要一个微服务是在容器之中，该工具就应该知道如何部署。无论是那种容器都没有关系。也就是说，Docker看起来很快会成为容器的行业标准。</p>
<h3 id="将服务器看做是无状态的">将服务器看做是无状态的</h3><p>将那些特别是部署了客户端代码的服务器视作是可替换的一组之中的一个。这些服务器的功能都是一样的，你无须关心某一个。只需要关心要实现你的目标是否数量足够，你可以使用自动伸缩来按需调整数目。如果其中一个服务器宕机了，可以由其他一个替换。避免了那些单个服务器完成特殊功能的系统中存在的雪崩现象，</p>
<p>Cockcroft打了个比方，你把服务器看做奶牛而不是宠物。如果生产系统中某个服务器负责某个特殊的功能，你通过名称认识这个服务器，这个服务器宕机后大家都回很难过，这也就是一个宠物。相反，如果你把服务器看作是一些奶牛。你关心的是你每天能挤多少奶，如果有一天你发现今天挤的奶少了，你知道是哪头牛有问题，你可以换掉它。</p>
<h2 id="Netflix_Delivery_Architecture_is_Built_on_nginx">Netflix Delivery Architecture is Built on nginx</h2><p>下面是一段软广吧。不过nginx还是很NB的。<br>Netflix is a longtime nginx user and became the first customer of NGINX, Inc. after it incorporated in 2011. Indeed, <a href="http://nginx.com/news/nginx-inc-consulted-netflix-open-connect-initiative/" target="_blank" rel="external">Netflix chose nginx</a> as the heart of their delivery infrastructure, the <a href="https://openconnect.itp.netflix.com/software/index.html" title="Open Connect Appliance Software" target="_blank" rel="external">Netflix Open Connect</a> Content Delivery Network (CDN), one of the largest CDNs in the world. With the ability to serve thousands, and sometimes millions, of requests per second, nginx is an optimal solution for high-performance HTTP delivery and enables companies like Netflix to offer high-quality digital experiences to millions of customers every day.<a name="videos"></a></p>
<h2 id="Video_Recordings">Video Recordings</h2><h3 id="Fast_Delivery">Fast Delivery</h3><p><a href="https://www.youtube.com/embed/5qJ_BibbMLw" target="_blank" rel="external">Fast Delivery nginx.conf2014, October 2014 </a></p>
<h3 id="Migrating_to_Microservices,_Part_1">Migrating to Microservices, Part 1</h3><p><a href="https://www.youtube.com/embed/1wiMLkXz26M" target="_blank" rel="external">Migrating to Microservices, Part 1 Silicon Valley Microservices Meetup, August 2014</a></p>
<h3 id="Migrating_to_Microservices,_Part_2">Migrating to Microservices, Part 2</h3><p>Silicon Valley Microservices Meetup, August 2014</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[<微服务架构在Netflix的应用>系列博文-2 是时候转移到四层架构上来了]]></title>
    <link href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture/"/>
    <id>http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture/</id>
    <published>2015-03-23T03:17:12.000Z</published>
    <updated>2015-03-23T03:40:16.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="第二篇-是时候转移到四层架构上来了">第二篇-是时候转移到四层架构上来了</h2><p>&lt;微服务架构在Netflix的应用&gt;系列博文-共四篇</p>
<p>英文版： <a href="(http://blogs.forrester.com/ted_schadler/13-11-20-mobile_needs_a_four_tier_engagement_platform/">第一部分： The Four-Tier Engagement Platform</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第一部分：移动应用所需要的四层架构/</a></p>
<p>英文版： <a href="http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/" target="_blank" rel="external">第二部分：http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第二部分：是时候转移到四层架构上来了/</a></p>
<p>英文版： <a href="http://nginx.com/blog/microservices-at-netflix-architectural-best-practices/" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/microservices-at-netflix-architectural-best-practices" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a></p>
<p>英文版：<br><a href="http://nginx.com/blog/adopting-microservices-at-netflix-lessons-for-team-and-process-design/" target="_blank" rel="external">第四部分：Adopting Microservices at Netflix: Lessons for Team and Process Design </a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/adopting-microservices-at-netflix-lessons-for-team-and-process-design" target="_blank" rel="external">第四部分：微服务架构在Netflix的应用：团队和流程设计相关的经验教训</a></p>
<p>新年伊始，你也许计划提升你现有的数字化体验或者从头构建新的网站或系统。如果你要做这些都话，首要的你要牢记在心的是”web“不再只是指 ”web browser“。专家这些年一直在提”mobile first approach“来进行系统开发。但今年的移动流量已经增长至接近60%，这已经是不能再拖的了。互联式设备数量的激增，流量从桌面端向移动端的转变，万物互联的潮水意味着项目必须以不同设备上的用户体验为出发点。<br>过去的专注于单个集成式的包含大多数功能和特性的整体式模型-既往的应用架构开始不适合这个你需要根据特殊设备特殊用户来调整用户体验的年代。此外，你不能通过很多旧的架构模式和行为实现现如今的系统所要求的敏捷性、灵活性和可扩展性的要求。</p>
<p>为了开发和部署能够有效的吸引和留住不同设备上的移动端的APP，你需要有一种崭新的应用设计的思路。本文中将会阐述为何整体式的架构模型不再适用，同时介绍一种新的架构模型，能够帮助你迎接当今web，乃至于未来web的挑战。</p>
<h2 id="为什么软件架构的标准在变化">为什么软件架构的标准在变化</h2><p><img src="http://nginx.com/wp-content/uploads/2015/02/monolithic_architecture_post.png" alt=""><br>Monolithic Architecture, Source: Martin Fowler<br>在传统的 monolithic 架构中，应用程序处于中间那层，也就是说前端是展现层，后端是数据层。应用程序将数据传输给web浏览器，也就是展现层，它能给用户提供向应用程序请求信息、展现信息、管理和更改信息的方式，应用程序读写信息到数据层，数据层也就是数据库或其他存储设备负责管理和维护数据。应用程序本身负责与前后两层之间进行交互的业务逻辑以及数据的转换。</p>
<p> 并不是monolithic架构自身存在缺陷，只是它已经过时了，在智能手机和其他移动设备设计之前就已经存在了，那时候应用程序在展现层只需要跟一种实体进行交互，这种缺陷并不是由于层数亦或是层与层之间数据的处理方式，而是应用程序本身被写成一个单独的统一的代码块。monolithic的天性导致开发人员很难用敏捷性和灵活性对应用程序进行改造以适应移动终端用户的需求，满足运营团队自由伸缩应用程序规模以满足实际的需求。</p>
<p> monolithic 的设计理念阻碍了应用程序开发流程诸多阶段的敏捷性。即使应用程序的功能是以模块化方式组织的，人以模块的更改都需要对整个应用程序进行编译和测试。这本身是恨耗时的，对于那些一年内只更新很少次的公司来讲可能是可以接受的，但要跟上如今的大环境，一年只更新几次的APP恐怕难以在竞争中存活下来。你需要很快的响应渐进式的更新来为用户提供更好的性能和最新的功能。在这样的一个世界里，更新APP永远不会给大多数用户带来不便。</p>
<p>Source: Martin Fowler</p>
<p><img src="http://nginx.com/wp-content/uploads/2015/02/microservices_architecture_post.png" alt=""><br>Microservices Architecture, Source: Martin Fowler</p>
<p> 将应用程序拆分成模块长久以来被视为最佳实践。最近，开源项目的成功使得多数开发人员能够借助外部的一些库来实现特殊的功能。这些开源库常常用于那些开发人员不熟悉的特殊功能，或仅仅是为了节省时间，或者是出于维护安全性的考虑。对于 monolithic设计而言 就不存在从诸多方案中任选其一的灵活性，应用程序往往是由一些高度耦合的组件开发而成。</p>
<p> 最后一点，三层架构缺乏伸缩性。事实上，提出这种架构理念的年代并不存在 elasticity and rapid scaling 。由于应用程序的功能组件是打包成一个整体的，你要响应客户端需求变更的唯一方式就是对整体进行扩展。由于应用程序是紧耦合的，三层架构的应用程序通常是没有办法对某个特殊部分单独进行扩展的。不管是一个电子商务的平台、社交媒体的应用还是一个博客，现如今应用程序的基本要求是能够按需伸缩，成本越低越好。对应用程序进行伸缩控制的过程要简单、自动化和智能。比如说某个应用架构能够让你根据用户注册的突发量来部署额外的Node.js节点。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[<微服务架构在Netflix的应用>系列博文-1 移动应用所需要的四层架构]]></title>
    <link href="http://wanghaisheng.github.io/2015/03/23/mobile_needs_a_four_tier_engagement_platform/"/>
    <id>http://wanghaisheng.github.io/2015/03/23/mobile_needs_a_four_tier_engagement_platform/</id>
    <published>2015-03-23T03:17:12.000Z</published>
    <updated>2015-03-23T03:38:16.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="第一篇-移动应用所需要的四层架构">第一篇-移动应用所需要的四层架构</h2><p>&lt;微服务架构在Netflix的应用&gt;系列博文-共四篇</p>
<p>英文版： <a href="(http://blogs.forrester.com/ted_schadler/13-11-20-mobile_needs_a_four_tier_engagement_platform/">第一部分： The Four-Tier Engagement Platform</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第一部分：移动应用所需要的四层架构/</a></p>
<p>英文版： <a href="http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/" target="_blank" rel="external">第二部分：http://nginx.com/blog/time-to-move-to-a-four-tier-application-architecture/</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/time-to-move-to-a-four-tier-application-architecture" target="_blank" rel="external">第二部分：是时候转移到四层架构上来了/</a></p>
<p>英文版： <a href="http://nginx.com/blog/microservices-at-netflix-architectural-best-practices/" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/microservices-at-netflix-architectural-best-practices" target="_blank" rel="external">第三部分：微服务架构在Netflix的应用：架构设计的经验教训</a></p>
<p>英文版：<br><a href="http://nginx.com/blog/adopting-microservices-at-netflix-lessons-for-team-and-process-design/" target="_blank" rel="external">第四部分：Adopting Microservices at Netflix: Lessons for Team and Process Design </a><br>中文版：<br><a href="http://wanghaisheng.github.io/2015/03/23/adopting-microservices-at-netflix-lessons-for-team-and-process-design" target="_blank" rel="external">第四部分：微服务架构在Netflix的应用：团队和流程设计相关的经验教训</a></p>
<p>Michael Facemire, John McCarthy和作者最近向整个软件技术行业发起了倡议：老式的web不是为移动APP和网站而设计的，也不能处理互联式产品的实时需求。是时候提出一种新架构了。</p>
<p>大致总结如下:</p>
<p>移动互联网把传统的web架构推到了悬崖的边缘。为传统PC的浏览器而设计的三层架构不够灵活，不能很好地扩展，也不能提供良好的移动端的用户体验，满足互联式产品的新兴需求。移动互联网的volatility and velocity of change需要的是一种分布式的四层架构，我们称之为“engagement platform”。<br>这个平台能够将技术功能分成4部分：客户端、分发端、集成聚合端、和服务端。</p>
<p>移动互联网APP的新需求需要将CDN、应用服务器供应商、移动端中间件供应商、PAAS供应商、各种初创公司和其他公司围绕着这四层架构整合起来。<br>CIO需要立即规划从三层架构到四层架构的迁移工作。</p>
<p>是时候扔掉三层架构，即表现层、应用层和数据层，转向能够满足新需求的四层架构模型：</p>
<blockquote>
<p>“engagement platform”支持分布式的四层架构，能够提供优质的用户体验、优异的性能，以及与任何设备之间的模块化集成。</p>
</blockquote>
<p>Figure 1 The Four-Tier Engagement Platform Makes Delivery Its Own Tier<br><img src="http://blogs.forrester.com/f/b/users/TSCHADLER/engagement_platform_2.png" alt=""></p>
<p>四层架构的处理流程如下:</p>
<ul>
<li>客户端层负责不同设备的唯一性的确定。 这一展现层将每个app以及设备(桌面端、移动端，浏览器或原生APP)的特殊功能与后台应用程序的服务隔离起来。这个边界使得开发人员可以将后台服务的开发与消费它们的app独立开来，比如航班状态和入港通知等等。确定明确的边界提高了开发人员的效率，无需顾及繁重的维护工作，一个良好的网络环境也是很重要的。</li>
<li>分发层处理中间的和最后一英里的问题。通过客户端层的信息决定交付特定场景下具体内容的最佳方式。通过over-the-wire的内容转换—这里与聚合层不同，聚合层使用的基于协议的转换，利用 edge-of-network cache 功能来增加动态数据， 如Akamar等提供的CDN、如Instart Logic的分发优化方案、如Riverbed Stingray的应用分发控制和on-premises in-memory database caches一起完成这方面的任务</li>
<li>聚合层负责内部和外部服务的集成和数据的转换。这样的API层有两方面的角色，不同APP请求和服务<br>的发现和客户端请求与后台服务的双向转换。这样能够使得底层数据的组装和服务更加简洁，能够提供相对实时的数据格式的转换。服务组合外加上商务智能、分析、基于角色的访问等更加动态。</li>
<li>服务层包括了内部外部提供数据和功能。通过一系列连贯的可部署的服务来动态组装服务和业务流程。<br>该层负责为上述三层提供数据，不关心数据具体如何使用。其他几层可以部署在防火墙内也可以部署在防火墙外，或者二种方式相结合。这样不论是APP使用还是生态系统中其他系统使用，在服务的动态组合和访问上就提供了相当的灵活性</li>
</ul>
<p>未来的展望</p>
<p>问: 如果未来是engagement platform的天下，如何实现呢？</p>
<p>答: 颠覆现在的软件行业的核心架构。IBM, Microsoft, Oracle, and Akamai一直在推三层架构，现在将被<br>Netflix, Kinvey, and Salesforce.com提出的四层架构所替代。</p>
<p>是时候供应商、投资人员、架构师和开发人员对如何来构建和使用engagement platform展开讨论了。</p>
<p>engagement platform”支持分布式的四层架构，能够提供优质的用户体验、优异的性能，以及与任何设备之间的模块化集成，并且能够推动这些颠覆的演化:</p>
<ul>
<li>公司将依赖于供应商的生态系统来deliver engagement. 你无须购买这个engagement platform平台。而且这个engagement platform平台也不是全部受你直接控制。相反，你以松耦合的方式组装各种<br>engagement 功能，而且能够按需扩展，同时能够保持灵活性，也能够解决持续交付的问题。</li>
<li>HTTP traffic on Nginx will surpass the traffic on Apache. If you don’t know what those things are, don’t worry about it. If you don’t but think you should, then see the last chart here and learn about it here and here.</li>
<li>IBM, Oracle, Microsoft, SAP, and Salesforce.com will rethink their middleware products and architectures. Adding mobile app lipstick on an application server won’t solve the delivery challenge by itself. These companies will slowly overcome their reluctance and begin to operate in a four-tier, ecosystem-dependent platform. But it will take five years for that to happen. Microsoft Azure is the farthest along, but still tentative in its strategy and execution.</li>
<li>The content delivery network industry will accumulate content and performance optimization services. Akamai, Limelight, and Amazon CloudFront have done good work for the Web. But new approaches from Instart Logic and rumblings from Akamai point to the delivery-tier future.</li>
<li>Platform-as-a-service providers like Amazon, Google, IBM, Microsoft, and Salesforce will grow many new platform services. For example, services in the aggregation tier loosely coupled with an intelligent delivery tier will handle notification at scale, including personalized messages, open-message analytics, and device and network customization.</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="架构" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="微服务" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读< 从业务角度看API >]]></title>
    <link href="http://wanghaisheng.github.io/2015/02/09/web-api-from-start-finish-2/"/>
    <id>http://wanghaisheng.github.io/2015/02/09/web-api-from-start-finish-2/</id>
    <published>2015-02-09T05:42:12.000Z</published>
    <updated>2015-04-27T13:44:30.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="第二篇，读&lt;_从业务角度看API_&gt;">第二篇，读&lt; 从业务角度看API &gt;</h2><p><a href="http://www.infoq.com/articles/web-apis-business-perspective" target="_blank" rel="external">英文</a><br><a href="">中文</a><br>作者：Matt McLarty</p>
<p>观点1：API是当今信息技术趋势的核心，比如说移动终端、云计算、物联网、大数据、社交网络。涉足各行各业，如能源、汽车、电商等<br>观点2：虽然和API在整个技术领域应用相比是九牛一毛，在open WEB领域，API俨然已经成为相当重要的创新和收益的业务模式，对比，Kin Lane在<a href="http://apievangelist.com/index.html" target="_blank" rel="external">API Evangelist</a>网站上撰文进行了详细的阐述, <a href="https://medium.com/@medjawii/5-ways-an-api-is-more-than-an-api-bddcdb0517ca" target="_blank" rel="external">Mehdi Medjaoui</a>也在博文中就此进行了总结 。<br>事实上，现如今web API是隐藏在解决方案背后的，也就是API的业务模式也就是业务本身<br>观点3：API的业务价值、商业价值是可以度量的。传统意义上，由于服务器和存储设备成本高昂，他们所拥有的数据一定程度成为自身的债务。现如今，伴随着大数据和物联网、万物互联IoT等技术发展，拥有数据意味着可以将其转换为新的机会和收入来源。<br>观点4：如何确定那些数据、服务可以通过API暴露，以及如何实现这些API，可以通过如下三个数据的属性来判断：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Data Applicability</td>
<td><ul><li>这些数据是否能够帮助我们实现核心业务价值</li><li>这些数据是否能够形成业务上的差异性</li><li>需要那些商品化处理才能将这些数据对外发布</li></ul></td>
</tr>
<tr>
<td>Data Accuracy</td>
<td><ul><li>目前这些数据的及时性如何</li><li>数据是否来自可信的来源</li><li>正确的用户出于正确的目的是否可以访问数据</li></ul></td>
</tr>
<tr>
<td>Data Accessibility</td>
<td><ul><li>有哪些数据可供程序使用</li><li>这些数据有哪些不同的访问方式</li><li>开发人员利用这些数据构建APP的难易程度如何</li><li>数据访问的规模是否能满足客户的需求</li></ul></td>
</tr>
</tbody>
</table>
<p>总结下来，也就是两方面：<br>1、有用的API“Useful APIs”  能够提供准确适当的数据<br>2、可用的API “Usable APIs”能够访问到数据</p>
<p>观点5：有用的API<br>开发API时常见的误区是认为所有数据都是有用的。不是说你开放了数据，开发人员就能从中增加收益、创新、开拓新的业务。API和Open Data本身是远远不够的。<br>“This “medium is the message” thinking was responsible for many of the failed SOA initiatives that occurred in enterprise integration over the last decade”这句是什么意思，没有搞懂<br>举出Google  Map、Facebook、Twitter的例子说明只有正确的数据结合API才能攫取最大的效益，<br>观点6：Amazon API的案例<br>API对于开放API之外的机构而言，在业务上帮助作用拥有巨大潜力。对于Amazon，API是从内部缘起的。<br>经验教训一：将API定位为产品、解决方案的构建基石。Brad Stone在<a href="http://brad-stone.com/book/" target="_blank" rel="external"></a>书中花了一章来阐述API是Amazon整个技术架构的基础，Kin Lane在博文<a href="http://apievangelist.com/2012/01/12/the-secret-to-amazons-success-internal-apis/" target="_blank" rel="external">The Secret to Amazons Success Internal APIs</a>中讨论了如何保证程序能够访问这些API接口。<br>经验教训二：如何使用基于API的方法来采集、分析、改进和分发数据。Jeff Bezos 讲到<a href="http://www.businessinsider.com/bezos-pioneering-requires-being-misunderstood-2013-1" target="_blank" rel="external">“We don’t make money when we sell things. We make money when we help customers make purchase decisions.”</a>.只有恰当的、准确的、可用的数据才能帮助用户进行决策，这对于亚马逊来讲至关重要。<br>“Data-Enabled Disruption (DED)”图示<br><img src="../../../../images/DED_Cycle.jpg" alt=""><br>经验教训三： 战略与战术定位之间的权衡。早期，Jeff Bezos认识到万维网的巨大潜力，随即产生了要创建一个巨大的能够存放任何东西的商店。<br>在分析了市场之后，以在线图书零售为突破口来优化整个供应链，企业文化(ensuring timely execution while maintaining religious devotion to the future vision—is now a tenet of Amazon’s culture, where solutions must add value both in what they deliver and what they enable)一方面能够实现功能，一方面能够传递价值。<br>见下图<br><img src="../../../../images/5Fig2.png" alt=""><br>每种服务都对应着一个API，每个都是基于早期的解决方案所产生的。</p>
<p>观点6：可用的API以及API设计的重要性<br>虽然亚马逊很成功，但它们的API设计却不是很好，也不易用。随着API的爆发性增长和其必要性的认可度提高，API的可用性成为众多公司主宰行业或者初创公司试图开拓创新服务的关键。</p>
<p>移动设备和consumerization of IT引发了企业应用开发的<a href="https://www.linkedin.com/today/post/article/20140716032508-16039030-the-rebirthing-of-the-mobile-app?trk=hb_ntf_MEGAPHONE_ARTICLE_POST" target="_blank" rel="external">模式转变</a>。从一开始的终端到CS架构到现在的分布式网络。在之前的文章<a href="https://www.youtube.com/watch?v=23nyxjRPe94" target="_blank" rel="external">the shedding of tiers</a>,为了适应云端和移动端的发展，正在从n层web模型向以API为中心的而转变。<br>以远程通讯领域为例，多年来大玩家们一方面互相竞争，另一方面寻求能够为用户提供网络之外的增值服务。这个行业在过去15年间经历过很大分裂，如VOIP的出现，业务和服务的整合，以及移动设备服务的改革，在上述环节中，API都发挥了作用，尽管仍然主导着传统的telco服务，但难以维系其优势，在Alan Quayle的文章<a href="">a-brief-history-of-telco-apis</a>(<a href="http://alanquayle.com/2012/06/a-brief-history-of-telco-apis/)中指出在像Parlay" target="_blank" rel="external">http://alanquayle.com/2012/06/a-brief-history-of-telco-apis/)中指出在像Parlay</a> X和OneAPI这样的协作项目中这些玩家困难重重。</p>
<p>Twilio公司成立于2007年，旨在提供易用的语音和短信服务，所有应用都部署在云端。他们认识到API是他们最核心的业务渠道，尽管SMS和VOIP服务是恨有用的，但要和大玩家竞争，commoditized telco services是远远不够的。Twilio也意识到他们服务的最初用户并非终端用户，而是调用API构建APP的开发人员，而且发展最快的是移动APP，于是开发了诸多衡量是否能够很好的服务客户的指标。除了像传统的统计数据如端到端的调用响应时间，他们还测量了新上手的开发人员从注册他们的api到开发好应用花多长时间，这极大的提高了易用性，成为了和大公司的主要差异点，当开发人员在选择SMS VOIP服务的时候，优势就显现出来了。</p>
<p>总结：<br>1、API 与业务策略要统一<br>2、实现过程中通过API保证数据可用、准确<br>3、确保API是有用的、可用的<br>4、像亚马逊一样形成a disciplined culture of iterative Data-Enabled Disruption<br>5、像Twilio一样形成优质的API开发人员用户体验来差异化和竞争对手的业务</p>
<p>参考资料</p>
<p><a href="https://medium.com/@medjawii/5-ways-an-api-is-more-than-an-api-bddcdb0517ca" target="_blank" rel="external">Mehdi Medjaoui</a></p>
<blockquote>
<p>如果要解释web API到底是什么，常常会说，“web API代表的是应用程序的借口”，这个答案会让business managers和出租车司机都一脸茫然。如果说“是网站和移动应用程序的基石”，又显得太过于抽象，如果说“你记得Facebook和微信上的点赞按钮么，可用在Facebook之外的任何网站上使用，那么Facebook是如何知道发生了什么 的呢？这一切要归功于Facebook的API使得外部网站和Facebook能够处于连接状态。因此点赞按钮是不属于Facebook本身的Facebook的一块功能，API能够似的应用程序相互连接起来”<br>如果Twitter不允许收集APP访问Twitter你如何从收集发送tweet，也就是说APP也要用到Twitter的API。<br>这些说法都没错，我们强调了API是一切事物的基石。但对于CEO和管理层而言，API对于业务有多大价值，如何来介绍呢<br>“An API is not only a building brick, it is also a projection of a product vision, based on internal assets you can open to the world”<br>API定义了一种新的数字化的B2B共享的生态圈，各个公司以API的形式将自己的核心资产暴露出去，同时通过API消费其他核心资产。对于管理、业务人员我们要向他们这样解释，将内部资产以web API暴露出去，也就成为了第三方可产品化的资产。这时候，API 就是产品。<br>那如何从市场、财务、技术、业务拓展和法律五个角度来解释API呢？<br>第一点：平台式思考。就市场而言，开放API意味着公司转型为一个平台，在传统的B2B或SaaS市场上，你与竞争对手在同一个市场上竞争，很难扩展市场份额。<br><img src="../../../../images/typical-market-share.png" alt=""><br>通过Open API，你占领的是垂直方向的市场，与合作方和第三方以及开发人员形成一个全新的生态圈，蓝海市场。<br><img src="../../../../images/blue-ocean.png" alt=""><br>第二点：现有资产的商品化。从财务的角度来看，API是对现有资产ROI做乘法。在亚马逊形成了一个全球性的零售店之后，才发觉他们自己的云数据服务器架构也可以作为服务来卖，通信行业采用了双面的业务模型，一方面卖自己的语音、短消息和连接服务，另一方面卖自己的网络给第三方公司。最近IBM也开始对外卖自己的Watson大数据处理分析技术。<br>对于花了重金形成了技术资产的公司，也想通过向第三方开放的形式回收一部分投入。就好像你买了一栋房子，想出租其中一间给外人来用抵房贷一样。</p>
</blockquote>
<p>第三点：Composability 从技术的角度而言，API能够让用户把外部的软件适配到自己内部的IT架构上，而不是反过来内部的IT架构适配外部的软件上。<br>在做B2B集成时，必须考虑尽量避免自己这边的繁重的governance治理工作量。再也没有必要安排一系列的业务上的会议、技术上的会议和技术培训来探讨如何集成。可以在自己的网站上把API放上去，能够极大地帮你减少概念验证所花的时间。客户只需要通过API把你的软件与自己内部的IT架构整合起来，不用说两面都添功能，再改功能。<br>当然你也可以给客户直接买实现好的服务，虽然大多数长尾客户都会自己实现自己的功能。</p>
<p>第四点：自服务Self-service，从业务拓展的角度而言，API就是一个Self-service自服务的门户，能够让你的业务延伸到全球范围内。潜在的用户能够7*24小时的发现你所提供的服务和特性，使用API来完成集成，letting you contact them later in the customer on-boarding funnel. You are then able to transform better leads into customers in a more qualified approach</p>
<p><img src="../../../../images/self-service.png" alt=""></p>
<p>越来越多的开发人员代表公司会在查找API，立即进行集成的测试，在评估线上可用的服务之后做出业务上的决策。有人曾说过如果开发人员不能马上开始集成的话，在7分钟内就会转向另一个API服务，作者也听过很多客户讲过如果服务不能在他们所在的时区内启动和运行的话，或者是晚上或是周末，或者说要去解决针对他们自己业务需求的一些问题的话，客户都会直接抛弃这个API。</p>
<p>第五点：从法律的角度而言，API就是供应方和客户之间的一纸合约。这个在API Terms of Service and Business Model Agreement.的里面都说明好了。<br>API式的业务数据定义了两个机构/实体间的业务和法律关系：它是供应方和客户之间的合同。<br>This is why an API user and customer community is valuable as a customer portfolio in accounting.<br>因此，从法律角度来看，API就是合同，但是相对简单，十分钟就可以读完；同样也是7*24小时可用；足够灵活可随生态系统的发展而改变；</p>
<p>总结：<br>API的出现改变了我们做生意的方式，但很重要的一点是形成一个真正理解API真正价值的业务文化。通过向周围的同事介绍宣讲API到底是什么，鼓励大家实践API。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="HTTP API" scheme="http://wanghaisheng.github.io/tags/HTTP-API/"/>
    
      <category term="REST" scheme="http://wanghaisheng.github.io/tags/REST/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="HTTP API" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/HTTP-API/"/>
    
      <category term="REST" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/HTTP-API/REST/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读< 与Roy Fielding谈论版本化、超媒体以及REST >]]></title>
    <link href="http://wanghaisheng.github.io/2015/02/08/web-api-from-start-finish-1/"/>
    <id>http://wanghaisheng.github.io/2015/02/08/web-api-from-start-finish-1/</id>
    <published>2015-02-08T03:34:12.000Z</published>
    <updated>2015-04-27T14:07:39.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="第一篇，读&lt;_与Roy_Fielding谈论版本化、超媒体以及REST_&gt;">第一篇，读&lt; 与Roy Fielding谈论版本化、超媒体以及REST &gt;</h2><p>全系列<a href="http://www.infoq.com/articles/Web-APIs-From-Start-to-Finish" target="_blank" rel="external">Web APIs: From Start to Finish </a><br>第一篇，读&lt; 与Roy Fielding谈论版本化、超媒体以及REST &gt;<br><a href="http://www.infoq.com/cn/articles/roy-fielding-on-versioning" target="_blank" rel="external">中文版</a><br><a href="http://www.infoq.com/articles/roy-fielding-on-versioning" target="_blank" rel="external">英文版</a><br>Roy的“Scrambled Eggs • Roy T. Fielding, Ph.D. | Senior Principal Scientist, Adobe”PPT解读<br>1、什么是作者所说的版本化，怎么理解所说的接口数量限制在某些名称内，什么样的名称，还有一点是这里所说的API版本和资源的版本的区别是什么，各自的设计初衷是什么，适用的场景有哪些？</p>
<blockquote>
<p>我所说的版本化，是指将客户端可见的接口数量限定在某些名称内，这样一来客户端就可以对每个操作进行标记，将这些操作归于该API的某一版本。</p>
</blockquote>
<p>不幸的是，对接口名称进行版本化，只是从API作者的角度而言实现了对变更的管理。这一点是对接口设计哲学的短视行为：作者渴望对API进行控制，而忽略了客户对于良好的持续性的需求。</p>
<p>查看了 PPT，对于API的版本控制，常见的有如下实现方式(<br>在stackoverflow上看到一个相关问答，其中详细讨论了下述方法优劣<a href="http://stackoverflow.com/questions/389169/best-practices-for-api-versioning/" target="_blank" rel="external">best-practices-for-api-versioning</a><br>):</p>
<ul>
<li>URL里带版本号<br><a href="http://www.host.com/v1/users" target="_blank" rel="external">http://www.host.com/v1/users</a></li>
<li>资源名称里带版本号<br>• <a href="http://example.com/users.v1" target="_blank" rel="external">http://example.com/users.v1</a></li>
<li>查询参数里带版本号<br>• <a href="http://example.com/users?api=v1" target="_blank" rel="external">http://example.com/users?api=v1</a></li>
<li>在HTTP头中制定版本信息<br>• Content-Type: application/vnd.myname.v1+json</li>
</ul>
<p>2、</p>
<blockquote>
<p>Hypertext as the Engine of Application State<br><a href="http://stackoverflow.com/questions/717851/can-someone-explain-hypertext-as-engine-of-application-state-in-simple-terms" target="_blank" rel="external">http://stackoverflow.com/questions/717851/can-someone-explain-hypertext-as-engine-of-application-state-in-simple-terms</a></p>
</blockquote>
<p>也就是说在web的世界里，事物的状态变化是通过link来实现的，你浏览网页，看到了一些内容，点击了其中一些链接跳转到其他的页面上，获取更多的内容<br> Darrel Miller在stackoverflow上的回答</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">When attempting to explain hypermedia, I like to use the example of navigating in a car via signposts versus a map. I realize it doesn&#39;t directly answer you question but it may help.&#10;When driving a car and you reach a particular intersection you are provided signposts to indicate where you can go from that point. Similarly, hypermedia provides you with a set of options based on your current state.&#10;A traditional RPC based API is more like a map. With a map you tend to plan your route out based on a static set of road data. One problem with maps is that they can become out of date and they provide no information about traffic or other dynamic factors.&#10;The advantage of signposts is that they can be changed on the fly to detour traffic due to construction or to control traffic flow.&#10;I&#39;m not suggesting that signposts are always a better option than a map. Obviously there are pros and cons but it is valuable to be aware of both options. It is the same with hypermedia. It is a valuable alternative to the traditional RPC interface.</span><br></pre></td></tr></table></figure>
<p>作者强调Rest是一个可Evolvability演化的架构方式，他说不应该对API打上版本号标签，紧接着他抛出REST API版本控制的最佳实践也应该是怎么样的问题？<br>他把RESTAPI比喻成机器与机器交互的website，接着反问谁在网站的地址上看到过版本号这些玩意儿(对于网站而言，向后的兼容性简直是生命线，如果baidu哪天域名换成bidu呢 google换成bidu呢)，紧接着又引用了Paul在“ALWAYS SHIP TRUNK”PPT中的结论，web应用程序都没能很好的解决版本控制的问题，你自己怎么可能搞的定这难题。 接着便引出了Paul在ppt中的观点，如果要给web应用程序设计一个revision control system  版本控制系统，应该是什么样的呢？<br>随即引出了根据feature flag和具体情况激活不同的功能，给出了一种全局配置文件的例子</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (frags(&#8220;saml_auth&#8221;)) &#123;&#10;  credentials = saml.authenticate(user);&#10;&#125;&#10;else &#123;&#10;  credentials = httpAuth.check(user);&#10;&#125;&#10;&#8226; testable for conditional content (i.e., everything) &#8226; readable via all development interfaces&#10;&#8226; writable with ops authority</span><br></pre></td></tr></table></figure>
<p>后面就是广告时间了，展示了一下他的产品FRAGS的情况，去twitter上搜了一下，说这个产品的点子来源于Paul Hammond<br><a href="http://www.paulhammond.org/2010/06/trunk/" target="_blank" rel="external"> using version control to manage web services.</a>，在这个长达96页的PPT里Paul介绍到：<br>要实现软件的 revision control，既有的分支、分布式分支的方法实现起来问题多多。接着指出现有的revision control的方案是面向可安装的软件这一种软件类型所设计的，他提出软件可以分为三种(要安装的软件、开源的要安装的软件、web应用程序或软件即服务)，考虑到我们不是所有服务器上的管理员，无法保证在公开测试、beta环境、QA环境和AB测试环境下同时发布更新，那么要怎么解决呢？(第39页开始)提出三种思路</p>
<ul>
<li>第一种：基础架构和功能代码启动的分离，二者都可以单独部署，不会影响</li>
<li><p>第二种：同时运行多个版本的代码，来回切换，不论是后台还是UI(这里就需要一个revision control系统来解决代码运行时的动态切换并行存在的多个版本的代码)</p>
</li>
<li><p>传统的分支本身不能帮你解决运行时不同版本间的切换；</p>
</li>
<li>传统的分支不能帮你解决一次性多个版本的依赖关系变化的管理<br>到底怎么样才能解决不同版本切换时的revision control呢？考虑在应用程序内部，也就是代码层面控制不同的版本，换句话说，就是要在代码里利用分支来实现不同版本的控制。<br>紧接着从550-72利用大量的代码演示了如何利用配置文件来设置标记，实现不同功能(功能的切换、功能的启动与否、不同环境下的配置、不同比例的用户使用那些功能、生产环境下的功能测试等)的切换，74页总结了三类feature flag 功能标记</li>
<li>1、Development on user facing features UI界面的</li>
<li>2、Development on infrastructure 后台功能的</li>
<li>3、 Kill-switches</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># killswitch&#10;if ($cfg[&#39;disable_login&#39;]) &#123;&#10;  error(&#39;Sorry, login is unavailable&#39;);&#10;  exit;&#10;&#125;</span><br></pre></td></tr></table></figure>
<p>通常而言，需要将三者混合使用，如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># for development&#10;$cfg[&#39;disable_search_tests_all&#39;] = false;&#10;$cfg[&#39;disable_search_ui_beta_test&#39;] = false;&#10;$cfg[&#39;disable_search_darklaunch&#39;] = false;&#10;# for post launch&#10;$cfg[&#39;disable_search&#39;] = false;</span><br></pre></td></tr></table></figure>
<p>作者对于使用分支和feature flag的结论</p>

* 1、前期使用分支来开发。Use branches for early development
* 2、分支要合并到trunk下。Branches merged into trunk
* 3、功能差不多了要上线时使用flag。Use flags for rollout of almost-finished code
   
<p>为了进一步了解feature flag究竟为何物，google一把，定位了几个不错的资源<br>1、<a href="http://stackoverflow.com/questions/7707383/what-is-a-feature-flag" target="_blank" rel="external">stackoverflow上关于feature-flag的讨论</a><br>2、<a href="https://github.com/wangcheng714/feature-flag" target="_blank" rel="external">看起来是百度前端团队某大神整理的feature-flag的材料</a><br>3、<a href="http://technologyconversations.com/2014/08/26/feature-toggles-feature-switches-or-feature-flags-vs-feature-branches/" target="_blank" rel="external">概念的对比和介绍Feature Toggles (Feature Switches or Feature Flags) vs Feature Branches</a><br>4、<a href="http://code.flickr.com/blog/2009/12/02/flipping-out/）
5、[](http://techblog.outbrain.com/tag/feature-flags/" target="_blank" rel="external"></a><br>6、<a href="https://github.com/toutantic/featureflags" target="_blank" rel="external">java代码示例</a><br>7、<a href="http://martinfowler.com/bliki/FeatureToggle.html" target="_blank" rel="external">仍然是matrin大神的博文</a></p>
<p>infoQ上另外一篇文章<a href="http://www.infoq.com/news/2013/12/api-versioning/" target="_blank" rel="external">不同api版本控制策略的成本分析</a>则指出<br>对于如下三种策略：</p>
<ul>
<li>1、只有一个版本，所有消费端使用同一个版本，当API发生变更，消费端也要跟着变。<img src="first-type-version.png" alt=""></li>
<li>2、每个服务的版本都可以在生产环境中使用，客户端按需来就行<img src="second-type-version.png" alt=""></li>
<li>3、有多个版本存在，所有消费端都使用最新的一个版本，版本是向后兼容的<img src="third-type-version.png" alt=""></li>
</ul>
<p><img src="../../../../images/version-type-cost.png" alt="成本分析图">显示向后兼容的版本策略最划算</p>
<p>综上所述：<br>feature flag指的是将功能发布与代码部署分离feature release and code deployment,对于rest API 或者HTTP API 而言，完全没搞懂ROY大神推荐的是那种套路，是说并存多个向后兼容的版本，以feature flag的形式来配置，客户端只访问最新的版本？对于URL和http header 大神似乎不推荐使用任意带版本号的方法。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="HTTP API" scheme="http://wanghaisheng.github.io/tags/HTTP-API/"/>
    
      <category term="REST" scheme="http://wanghaisheng.github.io/tags/REST/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="HTTP API" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/HTTP-API/"/>
    
      <category term="REST" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/HTTP-API/REST/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Docker玩转Rhadoop]]></title>
    <link href="http://wanghaisheng.github.io/2014/12/20/run-rhadoop-on-docker-cn/"/>
    <id>http://wanghaisheng.github.io/2014/12/20/run-rhadoop-on-docker-cn/</id>
    <published>2014-12-20T02:52:12.000Z</published>
    <updated>2014-12-20T04:45:51.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="Docker_玩转_RHadoop">Docker 玩转 RHadoop</h2><p>网络上已经有了太多的 RHadoop 的安装使用的教程，鉴于其中的配置配置繁复，对软件版本的要求又极其苛刻，故笔者想用时下热门的 docker 来尝尝鲜，以下是心路历程，供看客参考，希望能给大家一些帮助。    </p>
<h3 id="1、软硬件环境">1、软硬件环境</h3><p>操作系统：OXS 10.10.1</p>
<p>docker安装版本：boot2docker(推荐大家使用<a href="https://github.com/unixorn/docker-helpers.zshplugin该插件可以省去大家不少功夫" target="_blank" rel="external">https://github.com/unixorn/docker-helpers.zshplugin该插件可以省去大家不少功夫</a>)</p>
<p>Hadoop镜像：sequenceiq/hadoop-ubuntu:2.6.0</p>
<h3 id="2、事前准备">2、事前准备</h3><p>1、考虑到GFW的因素，拟将 sequenceiq/hadoop-ubuntu:2.6.0 镜像中的源替换成163的,顺便添加R语言安装的source<br>新建source.list<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//cran.r-project.org/bin/linux/ubuntu trusty/</span></span><br></pre></td></tr></table></figure></p>
<p>2、下载好RHadoop的几个 tar.gz 安装包，版本以自己安装日期的最新版本号为准</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rmr-2.3.3</span><br><span class="line">rhdfs-1.0.8</span><br><span class="line">rhbase-1.2.1</span><br></pre></td></tr></table></figure>
<p>3、测试过程中会用到的测试数据 主要是wordcount程序中<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subl  <span class="literal">part</span>-m-<span class="number">00000</span></span><br></pre></td></tr></table></figure></p>
<p>数据内容如下所示<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">10,3,tsinghua university,2004-05-26 15:21:00.0</span><br><span class="line">23,4007,北京第一七一中学,2004-05-31 06:51:53.0</span><br><span class="line">51,4016,大连理工大学,2004-05-27 09:38:31.0</span><br><span class="line">89,4017,Amherst College,2004-06-01 16:18:56.0</span><br><span class="line">92,4017,斯坦福大学,2012-11-28 10:33:25.0</span><br><span class="line">99,4017,Stanford University Graduate School of Business,2013-02-19 12:17:15.0</span><br><span class="line">113,4017,Stanford University,2013-02-19 12:17:15.0</span><br><span class="line">123,4019,<span class="keyword">St</span> Paul's Co-educational College - Hong Kong,2004-05-27 18:04:17.0</span><br><span class="line">138,4019,香港苏浙小学,2004-05-27 18:59:58.0</span><br><span class="line">172,4020,University,2004-05-27 19:14:34.0</span><br><span class="line">182,4026,ff,2004-05-28 04:42:37.0</span><br><span class="line">183,4026,ff,2004-05-28 04:42:37.0</span><br><span class="line">189,4033,tsinghua,2011-09-14 12:00:38.0</span><br><span class="line">195,4035,ba,2004-05-31 07:10:24.0</span><br><span class="line">196,4035,<span class="keyword">ma</span>,2004-05-31 07:10:24.0</span><br><span class="line">197,4035,southampton university,2013-01-07 15:35:18.0</span><br><span class="line">246,4067,美国史丹佛大学,2004-06-12 10:42:10.0</span><br><span class="line">254,4067,美国史丹佛大学,2004-06-12 10:42:10.0</span><br><span class="line">255,4067,美国休士顿大学,2004-06-12 10:42:10.0</span><br><span class="line">257,4068,清华大学,2004-06-12 10:42:10.0</span><br><span class="line">258,4068,北京八中,2004-06-12 17:34:02.0</span><br><span class="line">262,4068,香港中文大学,2004-06-12 17:34:02.0</span><br><span class="line">310,4070,首都师范大学初等教育学院,2004-06-14 15:35:52.0</span><br><span class="line">312,4070,北京师范大学经济学院,2004-06-14 15:35:52.0</span><br></pre></td></tr></table></figure></p>
<p>4、这些文件准备好了之后，最好放置在宿主机的某个文件夹下，比如我这里放在<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Users/</span>wanghaisheng<span class="regexp">/docker</span></span><br></pre></td></tr></table></figure></p>
<p>5、请确保docker成功安装，不同操作系统的安装教程请前往国内docker中文社区寻找答案<br><a href="http://www.docker.org.cn/" target="_blank" rel="external">docker中文社区站</a><br><a href="https://docker.cn/" target="_blank" rel="external">docker.cn </a><br><a href="http://www.dockerpool.com/" target="_blank" rel="external">DockerPool</a></p>
<h3 id="3、Hadoop_单机环境">3、Hadoop 单机环境</h3><p>1、从远端服务器拉取Hadoop镜像文件 由于GFW和网络原因，可能耗时较长 请耐心等待<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ docker pull sequenceiq/hadoop-<span class="string">ubuntu:</span><span class="number">2.6</span>.0</span><br></pre></td></tr></table></figure></p>
<p>2、把之前准备好的文件夹挂载到我们要启动的单机 Hadoop 容器中去，这里笔者比较懒，各位可以自行用喜欢的目录替换容器中的挂载目录(冒号后面的部分/Users/wanghaisheng/docker)<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ docker run -i -t  -v  <span class="regexp">/Users/</span>wanghaisheng<span class="regexp">/docker:/U</span>sers<span class="regexp">/wanghaisheng/</span>docker sequenceiq<span class="regexp">/hadoop-ubuntu:2.6.0 /</span>etc<span class="regexp">/bootstrap.sh -bash</span></span><br></pre></td></tr></table></figure></p>
<h3 id="4、R的安装">4、R的安装</h3><p>1、修改源文件<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/sources<span class="class">.list</span> /etc/apt/sources<span class="class">.list_backup</span></span><br><span class="line">rm /etc/apt/sources<span class="class">.list</span></span><br><span class="line">cp /Users/wanghaisheng/docker/source<span class="class">.list</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure></p>
<p>2、从CRAN安装R<br>CRAN中具有最新的R版本，所以一般建议利用CRAN进行R的安装。其基本步骤为：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ sudo apt-key adv --keyserver keyserver<span class="class">.ubuntu</span><span class="class">.com</span> --recv-keys E084DAB9</span><br></pre></td></tr></table></figure></p>
<p>然后需要添加CRAN源到/etc/apt/sources.list:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="symbol">http:</span>/<span class="regexp">/cran.r-project.org/bin</span><span class="regexp">/linux/ubuntu</span> xxx/</span><br></pre></td></tr></table></figure></p>
<p>其中xxx为你的Ubuntu版本,这里的话就是trusty。同时CRAN的地址可以用任意你喜欢的镜像替换。这里我们在source.list中已经事先准备好了，直接进入下一步<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~ sudo apt-<span class="keyword">get</span> update</span><br><span class="line">~ sudo apt-<span class="keyword">get</span> install r-<span class="keyword">base</span> r-<span class="keyword">base</span>-dev</span><br></pre></td></tr></table></figure></p>
<h3 id="5、R的配置">5、R的配置</h3><p>1、需要运行如下命令，让R与系统中安装好得jdk环境关联起来<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ R <span class="built_ins">CMD</span> javareconf</span><br></pre></td></tr></table></figure></p>
<p>2、启动启动R程序<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ <span class="literal">R</span></span><br></pre></td></tr></table></figure></p>
<p>3、安装RHadoop会使用到的依赖包<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"rJava"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"reshape2"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"Rcpp"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"iterators"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"itertools"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"digest"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"RJSONIO"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"functional"</span>)</span></span></span><br><span class="line">install.<span class="function"><span class="title">packages</span><span class="params">(<span class="string">"caTools"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<h3 id="6、rhdfs和rmr2的安装">6、rhdfs和rmr2的安装</h3><p>1、配置环境变量，网络上大量的例子使用的是hadoop1.0.3，我们使用的是Apache2.6，这里的HADOOP_STREAMING路径可能大不一样，/hadoop-1.0.3/contrib/streaming/hadoop-streaming-1.0.3.jar)，PATH这里要添加hadoop的安装路径的bin目录，否则后续使用hadoop命令会出现not found<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">~ vi <span class="regexp">/etc/</span>environment</span><br><span class="line"></span><br><span class="line">    HADOOP_CMD=<span class="regexp">/usr/</span>local<span class="regexp">/hadoop/</span>bin/hadoop</span><br><span class="line">    HADOOP_STREAMING=<span class="regexp">/usr/</span>local<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/</span>tools<span class="regexp">/lib/</span>hadoop-streaming-<span class="number">2.6</span>.0.jar </span><br><span class="line">	PATH=<span class="string">$PATH:</span><span class="regexp">/usr/</span>local<span class="regexp">/hadoop/</span>bin </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~ source <span class="regexp">/etc/</span>environment</span><br></pre></td></tr></table></figure></p>
<p>2、安装rhdfs<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ R CMD INSTALL /Users/wanghaisheng/docker/rhdfs_1.<span class="number">0.8</span><span class="class">.tar</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure></p>
<p>3、安装rmr2<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~  R CMD INSTALL /Users/wanghaisheng/docker/rmr2_3.<span class="number">3.0</span><span class="class">.tar</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure></p>
<h3 id="7、测试rmr2-wordcount">7、测试rmr2-wordcount</h3><p>1、启动R<br>2、载入rmr2包<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">library</span><span class="params">(rmr2)</span></span></span><br></pre></td></tr></table></figure></p>
<p>3、执行如下命令<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; small<span class="class">.ints</span> = to.<span class="function"><span class="title">dfs</span><span class="params">(<span class="number">1</span>:<span class="number">10</span>)</span></span></span><br><span class="line">&gt; <span class="function"><span class="title">mapreduce</span><span class="params">(input = small.ints, map = function(k, v)</span></span> <span class="function"><span class="title">cbind</span><span class="params">(v, v^<span class="number">2</span>)</span></span>)</span><br><span class="line">&gt; from.<span class="function"><span class="title">dfs</span><span class="params">(<span class="string">"/tmp/file1ea36ae45f9f"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>这里要注意的是 这个临时文件的名字是变化的 请自己根据上一条命令的返回信息进行替换</p>
<h3 id="8、测试rmr2-MapReduce的R语言程序">8、测试rmr2-MapReduce的R语言程序</h3><p>1、首先，是基本的hdfs的文件操作。查看hdfs文件目录</p>
<p>hadoop的命令：hadoop fs -ls /usr<br>R语言函数：hdfs.ls(“/usr/“)</p>
<p>你会发现什么数据都没有，这时候把事先准备好的测试数据拿进来好了<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -mkdir <span class="regexp">/user/</span>hdfs</span><br><span class="line"></span><br><span class="line">hadoop fs -mkdir <span class="regexp">/user/</span>hdfs<span class="regexp">/o_same_school/</span>  </span><br><span class="line">hadoop  fs  -rm <span class="regexp">/user/</span>hdfs<span class="regexp">/o_same_school/</span>part-m-<span class="number">00000</span></span><br><span class="line"></span><br><span class="line">hadoop fs -put  <span class="regexp">/Users/</span>wanghaisheng<span class="regexp">/docker/</span>part-m-<span class="number">00000</span>  <span class="regexp">/user/</span>hdfs<span class="regexp">/o_same_school/</span></span><br><span class="line">hadoop fs -cat <span class="regexp">/user/</span>hdfs<span class="regexp">/o_same_school/</span>part-m-<span class="number">00000</span></span><br><span class="line">看到了一堆数据了把！</span><br></pre></td></tr></table></figure></p>
<p>2、启动R程序<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="tag">library</span>(<span class="tag">rhdfs</span>)</span><br><span class="line"><span class="tag">Loading</span> <span class="tag">required</span> <span class="rule"><span class="attribute">package</span>:<span class="value"> rJava</span><br><span class="line">HADOOP_CMD=/root/hadoop/hadoop-<span class="number">1.0</span>.<span class="number">3</span>/bin/hadoop</span><br><span class="line">Be sure to run hdfs.<span class="function">init</span>()</span><br><span class="line"></span><br><span class="line">&gt; hdfs.<span class="function">init</span>()</span><br><span class="line">hdfs.<span class="function">ls</span>(<span class="string">"/user/"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function">library</span>(rmr2)</span><br><span class="line">&gt; input&lt;- <span class="string">'/user/hdfs/o_same_school/part-m-00000'</span></span><br><span class="line">&gt; wordcount = <span class="function">function</span>(input, output = NULL, pattern = <span class="string">" "</span>)&#123;</span><br><span class="line"></span><br><span class="line">  wc.map = <span class="function">function</span>(., lines) &#123;</span><br><span class="line">            <span class="function">keyval</span>(<span class="function">unlist</span>( <span class="function">strsplit</span>( x = lines,split = pattern)),<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    wc.reduce =<span class="function">function</span>(word, counts ) &#123;</span><br><span class="line">            <span class="function">keyval</span>(word, <span class="function">sum</span>(counts))</span><br><span class="line">    &#125;         </span><br><span class="line"></span><br><span class="line">    <span class="function">mapreduce</span>(input = input ,output = output, input.format = <span class="string">"text"</span>,</span><br><span class="line">        map = wc.map, reduce = wc.reduce,combine = T)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&gt; <span class="function">wordcount</span>(input)</span><br><span class="line">&gt; from.<span class="function">dfs</span>(<span class="string">"/tmp/file24053f4a0d65"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>这里要注意的是 这个临时文件的名字是变化的 请自己根据上一条命令的返回信息进行替换</p>
<h3 id="参考文献">参考文献</h3><p>1.<a href="http://hijiangtao.github.io/2014/03/23/RHadoopSetupLinux/" target="_blank" rel="external">Linux环境下RHadoop配置笔记</a><br>2.<a href="http://blog.fens.me/series-rhadoop/" target="_blank" rel="external">RHadoop实践系列文章</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="extern]]>
    </summary>
    
      <category term="docker" scheme="http://wanghaisheng.github.io/tags/docker/"/>
    
      <category term="rhadoop" scheme="http://wanghaisheng.github.io/tags/rhadoop/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="rhadoop" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/rhadoop/"/>
    
      <category term="docker" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/rhadoop/docker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TWITTER REST API研究]]></title>
    <link href="http://wanghaisheng.github.io/2014/12/20/twitter-api-restapi/"/>
    <id>http://wanghaisheng.github.io/2014/12/20/twitter-api-restapi/</id>
    <published>2014-12-20T02:52:12.000Z</published>
    <updated>2014-12-20T02:57:53.000Z</updated>
    <content type="html"><![CDATA[<p>原文标题：<a href="https://dev.twitter.com/rest/public" target="_blank" rel="external">REST APIs</a><br>原文作者：Twitter Inc<br>原文来源：<a href="">Twitter Inc</a><br>译者： <a href="http://wanghaisheng.github.io/about/" target="_blank" rel="external">edwin_uestc</a></p>
<blockquote>
<p>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。</p>
</blockquote>
<h2 id="REST_APIs">REST APIs</h2><p>这样就能够以编程的方式读写Twitter数据。发一条推或者读取某个人的资料和他的粉丝信息等。通过OAuth来识别twitter应用程序和用户，返回的数据是JSON格式。</p>
<p> entities(实体)<br> retweets(转发)<br> Tweet objects微博对象</p>
<h3 id="概述">概述</h3><p>在1.1版本之中我们做了如下重大变化，在此列出 希望所有的开发人员不会错过这些重要信息。</p>
<p>1、Default entities and retweets</p>
<p>在一定的情况下，V1.1版本的接口中默认会返回 entities(实体) 和 retweets(转发)。 entities(实体) 是作为Tweet objects微博对象的一部分返回的，除非你将include_entities变量的值设为false。其中会包含时间流顺序组织的转发信息，除非include_rts参数的值为false</p>
<p>2、Authentication on all endpoints</p>
<p>我们使用OAuth1.0a或者Application-only authentication对来自应用程序的所有请求消息进行鉴权。<br>这种透明化的方式避免了滥用行为，也能够让我们对使用API的应用程序更好的分类。<br>这样我们就能对平台持续演进以更好的满足开发者的需求</p>
<p>3、Rate Limiting </p>
<p>对于每个endpoint，我们将频率限制划分为15分钟一段，在每段当中，单个应用调用的请求的上限为15次。<br>与V1版本的API相比，每个endpoint的调用次数都变多了，有些特殊的节点在一段内甚至可以达到180次，尤其有利于使用了GET statuses / show / :id, GET users / lookup, GET search / tweets 等接口的APP。详细信息请阅读API V1.1Rate Limiting相关文档和每个方法中具体对于调用上限的描述</p>
<p>4、Twitter client policies</p>
<p>所有再造了Twitter核心功能的应用斗称之为client客户端，都必须遵循某些约束，包括100，000用户令牌的限制。这点也仅仅适用于小型的客户端，并不适用于生态系统中的大多数应用程序。详情请查看<a href="https://dev.twitter.com/terms/api-terms" target="_blank" rel="external">开发者守则</a></p>
<h3 id=""> </h3>]]></content>
    <summary type="html">
    <![CDATA[<p>原文标题：<a href="https://dev.twitter.com/rest/public" target="_blank" rel="external">REST APIs</a><br>原文作者：Twitter Inc<br>原文来源：<a href="">Tw]]>
    </summary>
    
      <category term="REST" scheme="http://wanghaisheng.github.io/tags/REST/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="REST" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E8%AE%B0/REST/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SongWriting公开课笔记]]></title>
    <link href="http://wanghaisheng.github.io/2014/10/18/songwriting_note_1/"/>
    <id>http://wanghaisheng.github.io/2014/10/18/songwriting_note_1/</id>
    <published>2014-10-18T14:26:30.000Z</published>
    <updated>2014-12-03T10:25:25.000Z</updated>
    <content type="html"><![CDATA[<p>Courera上新一轮的SongWriting又开课了，去年就跟了一些，这次争取能把全部跟完，不求拿证，只为开心。</p>
<h2 id="第一篇">第一篇</h2><p>Donny和Donna的故事</p>
<blockquote>
<p>I have to leave you.<br>What?<br>Donny, I feel like I’ve lost myself. I, I don’t know who I am. I don’t know where I am. I think, I might be in Marrakesh and I need to go there and find myself, because<br>you can’t truly love anyone unless you know who and where you are. I’ve lost myself. I need to find myself. I’m sorry. I’m sorry. And especially I’m sorry about the wedding next week, But I need to go.<br>Goodbye. Don’t wait for me, I may never be back. And she picks up her suitcases, then turns to go.<br>At which point, Donny who has been sitting at the writing table in stunned silence, rises from the writing table and bursts into song.<br>记录灵感的小本本<br>And I put it in my little file of possible song ideas, which I’d really encourage you to take. you know just a little book or perhaps on<br>your computer, just have this little list. Of of potential song ideas. Of things that will take you someplace. What what could this mean?<br>What kind of idea will this song be? so that keeping, keeping a little list of songs. and then you can start thinking about them.<br>演唱者和听众的关系<br>第一人称、第二人称、第三人称<br>歌曲发展<br>盒子理论 三段式 层层升华 可以是时间为主线 也可以是事情发展的动机<br>经典故事 老情人见面</p>
<ul>
<li>hi, how are things going? You look really happy, are you, are you as happy as you look? I’d just like to know. </li>
<li>Did you cheat on me? When you left me, did you know that, that you’re going to move in with him and, and do it so fast. When, when I was out on the road, did,<br>did you invite him over to your place? So, what’s up, did you cheat? I’d just like to know.</li>
<li>I said it to you. I said, I just want to be able to tell you everything. And I want you to tell me everything.<br>I really want this to be an open and honest relationship. You could told me about him, it’s, it’s not like I would have tried to stop you,<br>I’d just like to know.<br>歌曲内容的填充 有了大体框架之后<br>借助你的six friends<br>who what why when where how<br>歌曲的组织 前面讲的都是idea是如何发展的  歌曲大致上可以按照功能不同分成不同的section<br>verse 主歌 基本信息<br>chorus 副歌 大家一起唱的部分 简单易记 强调主题<br>bridge 间奏<br>pre-chorus </li>
</ul>
</blockquote>
<p>有爱的故事The story of Bernice    </p>
<blockquote>
<p>Let’s talk a little bit about the relationship of, all of the various song sections to the central idea. Whether that central idea, the statement of the central idea, the statement of the title of the song is a chorus, or whether it’s, as in The Great Pretender, the opening of a verse, or as in Still Crazy After All These Years, the closing of a verse where we’ll call it a refrain. But the diff-, the, the relationship between the, basic information of the song, given by the verses and the statement of the central idea. Bernice, went through preschool, grammar school, high school, and college With her best friends, Ashley, Brittany, Nicole, Caitlin, and Samantha.<br>They were best friends, 6, best friends. Now, it has to be said that, Bernice, was not the brightest light on the Christmas<br>tree, Bernice was not, the funniest, not the smartest, not the most athletic, not the best personality, not the prettiest, but she was a good and loyal friend. And as they grew and grew together,<br>everyone loved Bernice for her quality as a great listener. And someone who would always be supportive.<br>The girls all loved her. Things started getting a little complicated in high school when boys started coming around. Because the boys seemed to gather primarily around Katlin and Samantha.<br>And the other girls too, but Bernice was always left in the shadows. And when they started actually dating, she was often home alone on Friday night,<br>or in the group where all of the other girls had somebody they were with, and then Bernice didn’t, Bernice was the one who would always get fixed up with the<br>second cousin from Milwaukee. So that, as they went into college and started getting into serious relationships, Bernice felt a little more<br>and a little more Out of the loop and the girls were so hopeful that some time, some, some way, Bernice would find someone.<br>And then, in physical health class, Bernice found Edwin, Edwin thought that Bernice hung the moon and the girls were all so excited and it got deeper and it got deeper and they went everywhere<br>together until, on Christmas that year Edwin gave Bernice an engagement ring. And Bernice called the girls, and they<br>did the girl squeal, they were all so happy, and, and then, the date was set. And Bernice’s mom, who was no fool, took Bernice to the wedding dress store.<br>They looked, and they tried, they looked and tried another one on and tried another one on and an another one and an another when it was for such along time<br>till finally, Bernice’s mom found the dress. And in the dress Bernice looked better than she had ever looked in her entire life. All of the great qualities that Bernice<br>had were highlighted by the dress and those that she wasn’t sure about were all diminished by the dress.<br>So she looked fabulous, she said, Oh mom. I love you so much. This is so wonderful. The mom said, thank you honey, it’s so, you look so beautiful.<br>And Bernice said, thanks mom. Okay, let’s, let’s now get some dresses, pick out some dresses for the girls. She said there’s some really great<br>dresses over here, come on mom. And her mom said come back here darling. And led her over to a rack on which hung five purple taffeta sacks.<br>And Bernice said, oh Mom, I don’t know, I don’t know. And her mother said, Bernice, trust me. She said, okay mom, said, the girls will love them, they’ll wear them everywhere. And so it was done. Ashley, Brittany, Nicole, Katelyn and<br>Samantha in purple taffeta sacks, and the day of the wedding, the music begins, and down the aisle one by one. Ashley, Brittany, Nicole, Katelyn and<br>Samantha. All walking down the aisle, slightly uncomfortable in their purple taffeta sacks and the congregation turns to look, oh I always thought she was better<br>looking than that. And as they paraded one by one, the boyfriends and the husbands of these girls was like[NOISE] oh. They were slightly embarrassed because<br>they didn’t look that good. And then, the doors flung open[NOISE][SOUND] and here comes Bernice in the dress. And everybody goes[NOISE] shes’ so<br>gorgeous, and all of the husbands and boyfriends[NOISE] I could have had her, I could have had her, she’s gorgeous.<br>And there is Bernese in the dress, looking great for two reasons, number 1 because she’s wearing, the dress, and number 2, because everything around her<br>has been diminished in order to highlight her. That is the relationship between the secondary sections of your song, the development sections of your song and the<br>chorus. And what you need to do is try to put your chorus in the dress. But then be quite careful not to diminish that dress by anything that happens<br>before it. So, for example, if the dress has to do with a really special chord or a really high note, that that chord or that note probably should not appear, before it appears in the chorus. So that is the verse, walks down the<br>aisle. It should interest people to some degree, it should invite them in but it’s not the dress, the dress is Bernice’s sole property.<br>The story of Bernice, the end. </p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Courera上新一轮的SongWriting又开课了，去年就跟了一些，这次争取能把全部跟完，不求拿证，只为开心。</p>
<h2 id="第一篇">第一篇</h2><p>Donny和Donna的故事</p>
<blockquote>
<p>I have to leave ]]>
    </summary>
    
      <category term="碎碎念" scheme="http://wanghaisheng.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="碎碎念" scheme="http://wanghaisheng.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="碎碎念" scheme="http://wanghaisheng.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="碎碎念" scheme="http://wanghaisheng.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[EHR架构与设计相关材料]]></title>
    <link href="http://wanghaisheng.github.io/2014/09/04/EHRMaterial/"/>
    <id>http://wanghaisheng.github.io/2014/09/04/EHRMaterial/</id>
    <published>2014-09-04T07:13:12.000Z</published>
    <updated>2014-12-03T10:25:25.000Z</updated>
    <content type="html"><![CDATA[<h1 id="EHR_Architecture_and_Design">EHR Architecture and Design</h1><p>by <span class="author vcard fn">Jerome Carter on <abbr class="published" title="2013-03-25">March 25, 2013</abbr></span></p>
<p><strong>Updated August 26, 2014  </strong><span style="color: #000000;">(Page is updated monthly on </span></p>
<p>the 26th. For more frequent resource alerts, follow** <span style="color: #008000;">EHR Science on </span></p>
<p>Twitter:@ehrscience**<span style="color: #008000;">.)</span></p>
<p>_The Architecture and Design page has been created to serve as a resource for those who are interested in building  EHR </p>
<p>systems and/or  understanding how they work.  To that end, I have included links to EHR standards,  open source projects, </p>
<p>and programming/technology information.   Data exchange, decision support,  and content-related materials (e.g. SNOMED, </p>
<p>LOINC) are  included only if they directly address issues encountered when designing and building systems._</p>
<h3 id="General">General</h3><p><strong>Books</strong></p>
<p>Freeman E, Freeman E, Bates B, Sierra K, Robson E. _[Head First Design Patterns](<a href="http://www.amazon.com/First-Design-" target="_blank" rel="external">http://www.amazon.com/First-Design-</a></p>
<p>Patterns-Elisabeth-Freeman/dp/0596007124)_. 2004</p>
<p>McLaughlin BD, Pollice G, West D. _[Head First Object-Oriented Analysis and Design](<a href="http://www.amazon.com/Head-First-" target="_blank" rel="external">http://www.amazon.com/Head-First-</a></p>
<p>Object-Oriented-Analysis-Design/dp/0596008678/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1364182297&amp;sr=1-</p>
<p>1&amp;keywords=head+first+object+oriented+analysis+and+design)_. 2006</p>
<p><em><a href="http://msdn.microsoft.com/en-us/library/ff650706.aspx" target="_blank" rel="external">Microsoft Application Architecture Guide</a>,</em> Second Edition. 2009</p>
<p>Bass L, Clements P, Kazman R. _[Software Architecture in Practice](<a href="http://www.amazon.com/Software-Architecture-Practice-" target="_blank" rel="external">http://www.amazon.com/Software-Architecture-Practice-</a></p>
<p>3rd-Engineering/dp/0321815734/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1364182541&amp;sr=1-1&amp;keywords=software</p>
<p>+architecture+in+practice+3rd+edition)_, Third Edition. 2012</p>
<p>**Resource Pages</p>
<p>**<a href="http://ehrscience.com/architecture-and-design/ehr-data-quality/" target="_blank" rel="external"> EHR Data Quality</a></p>
<p><a href="http://ehrscience.com/nosql-and-relational-data-stores-in-health-care/" target="_blank" rel="external">NoSQL and Relational Databases </a>&lt;span </p>
<p>style=”color: #ff0000;”&gt;**</p>
<p>**</p>
<p><strong>Websites</strong></p>
<p><a href="http://www.objectmentor.com/resources/omi_reports_index.html" target="_blank" rel="external">Object Mentor Resources</a> - Great information on object-</p>
<p>oriented programminf and software design</p>
<p><a href="http://www.sei.cmu.edu/" target="_blank" rel="external">Software Engineering Institute</a> - Among other things, offers a range of resources on software </p>
<p>architecture</p>
<p><a href="http://www.computer.org/portal/web/swebok" target="_blank" rel="external">The Guide to the Software Engineering Body of Knowledge</a> (SWEBOK) - Provides a </p>
<p>great overview of the main issues/areas of software engineering</p>
<p>**Reports</p>
<p>**AHRQ</p>
<p><a href="http://www.healthit.gov/sites/default/files/ptp13-700hhs_white.pdf" target="_blank" rel="external">A Robust Health Data Infrastructure</a>, 2014 **&lt;span </p>
<p>style=”color: #ff0000;”&gt;</p>
<p>**</p>
<h3 id="EHR_Architecture_and_Design-1">EHR  Architecture and Design</h3><p><strong>EHR Standards</strong></p>
<p>AHRQ</p>
<p>[Clinical Decision Support Initiative](<a href="http://healthit.ahrq.gov/portal/server.pt/community/ahrq-" target="_blank" rel="external">http://healthit.ahrq.gov/portal/server.pt/community/ahrq-</a></p>
<p>funded_projects/654/clinical_decision_support_initiative/13665)</p>
<p>[Children’s Electronic Health Record Format]</p>
<p>(<a href="http://healthit.ahrq.gov/portal/server.pt/community/health_it_tools_and_resources/919/children" target="_blank" rel="external">http://healthit.ahrq.gov/portal/server.pt/community/health_it_tools_and_resources/919/children</a></p>
<p>%92s<em>electronic_health_record</em>(ehr)_format/31456)</p>
<p>American Society of Testing Materials</p>
<p><a href="http://www.astm.org/COMMIT/SUBCOMMIT/E3125.htm" target="_blank" rel="external">E31 Standards</a></p>
<p>Food and Drug Administration</p>
<p>[Mobile Medical Applications &#8211; Guidance for Industry and Food and Drug Administration Staff]</p>
<p>(<a href="http://www.fda.gov/downloads/MedicalDevices/DeviceRegulationandGuidance/GuidanceDocuments/UCM263366.pdf" target="_blank" rel="external">http://www.fda.gov/downloads/MedicalDevices/DeviceRegulationandGuidance/GuidanceDocuments/UCM263366.pdf</a>), 2013 &lt;span </p>
<p>style=”color: #ff0000;”&gt;**</p>
<p>**</p>
<p>Health Level Seven</p>
<p><a href="http://www.hl7.org/implement/standards/product_section.cfm?section=4" target="_blank" rel="external">EHR Functional Profiles</a></p>
<p>International Standards Organization (ISO)</p>
<p><a href="http://www.iso.org/iso/home/store/catalogue_tc/catalogue_tc_browse.htm?commid=54960" target="_blank" rel="external">TC 25 Health Informatics Standards</a></p>
<p>ONC</p>
<p>[Health information technology:  certification criteria, 2014 edition</p>
<p>](<a href="http://www.gpo.gov/fdsys/pkg/FR-2012-09-04/pdf/2012-20982.pdf)[2014" target="_blank" rel="external">http://www.gpo.gov/fdsys/pkg/FR-2012-09-04/pdf/2012-20982.pdf)[2014</a> Certification Test Methods]</p>
<p>(<a href="http://www.healthit.gov/policy-researchers-implementers/2014-edition-final-test-method" target="_blank" rel="external">http://www.healthit.gov/policy-researchers-implementers/2014-edition-final-test-method</a>)</p>
<p>OpenEHR</p>
<p><a href="http://www.openehr.org/programs/specification/listofspecifications" target="_blank" rel="external">Specification documents</a></p>
<p><strong>Open Source Projects</strong></p>
<p><a href="http://freemedsoftware.org/" target="_blank" rel="external">FreeMED</a></p>
<p><a href="http://wiki.gnumed.de/bin/view/Gnumed/WebHome" target="_blank" rel="external">GnuMED</a></p>
<p><a href="http://www.open-emr.org/" target="_blank" rel="external">Open EMR</a></p>
<p><a href="http://openmrs.org/" target="_blank" rel="external">Open MRS</a></p>
<p><strong>Tutorials </strong></p>
<p>Audit trails and data access &#8211; these posts discuss  MU audit requirements and audit trail design.</p>
<p>[EHR Design, Timelines, and Audit Trails: Getting a Sense of What Has Happened</p>
<p>](<a href="http://ehrscience.com/2013/01/14/ehr-design-timelines-and-audit-trails-getting-a-sense-of-what-has-happened/" target="_blank" rel="external">http://ehrscience.com/2013/01/14/ehr-design-timelines-and-audit-trails-getting-a-sense-of-what-has-happened/</a> “EHR Design, </p>
<p>Timelines, and Audit Trails: Getting a Sense of What Has Happened”)[EHR Design Basics: Tracking Data Changes and Accesses]</p>
<p>(<a href="http://ehrscience.com/2013/01/28/ehr-design-basics-tracking-data-changes-and-accesses/" target="_blank" rel="external">http://ehrscience.com/2013/01/28/ehr-design-basics-tracking-data-changes-and-accesses/</a> “EHR Design Basics: Tracking Data </p>
<p>Changes and Accesses”)</p>
<p>Representational State Transfer &#8211; the basics of REST</p>
<p>[Coming to REST, Part I: Complexity in EHR Systems</p>
<p>](<a href="http://ehrscience.com/2013/07/08/coming-to-rest-part-i-complexity-in-ehr-systems/" target="_blank" rel="external">http://ehrscience.com/2013/07/08/coming-to-rest-part-i-complexity-in-ehr-systems/</a> “Coming to REST, Part I: Complexity in </p>
<p>EHR Systems”)[Coming to REST, Part II: It’s All About Resources](<a href="http://ehrscience.com/2013/07/15/coming-to-rest-part-ii-" target="_blank" rel="external">http://ehrscience.com/2013/07/15/coming-to-rest-part-ii-</a></p>
<p>its-all-about-resources/ “Coming to REST, Part II: It’s All About Resources”)</p>
<p>**Posts</p>
<p>**General</p>
<p>[From Idea to System: A Story of Architecture and Design</p>
<p>](<a href="http://ehrscience.com/2013/02/18/from-idea-to-system-a-story-of-architecture-and-design/" target="_blank" rel="external">http://ehrscience.com/2013/02/18/from-idea-to-system-a-story-of-architecture-and-design/</a> “From Idea to System: A Story of </p>
<p>Architecture and Design”)[Coupling and Cohesion: A View of Software Design from the Inside Out</p>
<p>](<a href="http://ehrscience.com/2012/11/12/coupling-and-cohesion-a-view-of-software-design-from-the-inside-out-2/" target="_blank" rel="external">http://ehrscience.com/2012/11/12/coupling-and-cohesion-a-view-of-software-design-from-the-inside-out-2/</a> “Coupling and </p>
<p>Cohesion: A View of Software Design from the Inside Out”)[Software Architecture and Design, First Steps</p>
<p>](<a href="http://ehrscience.com/2012/02/29/software-architecture-and-design-first-steps/" target="_blank" rel="external">http://ehrscience.com/2012/02/29/software-architecture-and-design-first-steps/</a> “Software Architecture and Design, First </p>
<p>Steps”)[Rethinking the Design of Electronic Health Record Systems</p>
<p>](<a href="http://ehrscience.com/2012/04/18/rethinking-the-design-of-electronic-health-record-systems/" target="_blank" rel="external">http://ehrscience.com/2012/04/18/rethinking-the-design-of-electronic-health-record-systems/</a> “Rethinking the Design of </p>
<p>Electronic Health Record Systems”)[What If EHRs Were More Like Content Management Systems?</p>
<p>](<a href="http://ehrscience.com/2011/11/16/what-if-ehrs-were-more-like-content-management-systems/" target="_blank" rel="external">http://ehrscience.com/2011/11/16/what-if-ehrs-were-more-like-content-management-systems/</a> “What If EHRs Were More Like </p>
<p>Content Management Systems?”)[Moving Beyond Paper-based Thinking in EHR Design</p>
<p>](<a href="http://ehrscience.com/2013/02/11/moving-beyond-paper-based-thinking-in-ehr-design/" target="_blank" rel="external">http://ehrscience.com/2013/02/11/moving-beyond-paper-based-thinking-in-ehr-design/</a> “Moving Beyond Paper-based Thinking in </p>
<p>EHR Design”)[Requirements, Usability, and Petri Nets](<a href="http://ehrscience.com/2013/03/04/requirements-usability-and-petri-" target="_blank" rel="external">http://ehrscience.com/2013/03/04/requirements-usability-and-petri-</a></p>
<p>nets/ “Requirements, Usability, and Petri Nets”)</p>
<p>Architecture and Design</p>
<p><a href="http://ehrscience.com/2012/01/25/motifs-in-ehr-research/" title="Motifs in EHR Research" target="_blank" rel="external">Motifs in EHR Research</a></p>
<p>[The EHR As an Object Worthy of Study](<a href="http://ehrscience.com/2012/10/08/the-ehr-as-an-object-worthy-of-study/" target="_blank" rel="external">http://ehrscience.com/2012/10/08/the-ehr-as-an-object-worthy-of-study/</a> “The EHR As </p>
<p>an Object Worthy of Study”)</p>
<p>[EHRs and Architectural Styles, Peeking Under the Hood](<a href="http://ehrscience.com/2012/06/27/ehrs-and-architectural-styles-" target="_blank" rel="external">http://ehrscience.com/2012/06/27/ehrs-and-architectural-styles-</a></p>
<p>peeking-under-the-hood/ “EHRs and Architectural Styles, Peeking Under the Hood”)</p>
<p>[Investigating NoSQL for EHR Systems: MongoDB](<a href="http://ehrscience.com/2013/04/15/investigating-nosql-for-ehr-systems-" target="_blank" rel="external">http://ehrscience.com/2013/04/15/investigating-nosql-for-ehr-systems-</a></p>
<p>mongodb/ “Investigating NoSQL for EHR Systems: MongoDB”)<span style="color: #111111;"></span></p>
<p><a href="http://ehrscience.com/2013/04/08/exchanging-data-with-json/" title="Exchanging Data with JSON" target="_blank" rel="external">Exchanging Data with JSON</a></p>
<p>[SaaS EHRs, MVC, Flexibility and Innovation](<a href="http://ehrscience.com/2013/04/01/saas-ehrs-mvc-flexibility-and-innovation/" target="_blank" rel="external">http://ehrscience.com/2013/04/01/saas-ehrs-mvc-flexibility-and-innovation/</a> </p>
<p>“SaaS EHRs, MVC, Flexibility and Innovation”)</p>
<p>Data Quality</p>
<p>[Wrestling with EHR Data Quality](<a href="http://ehrscience.com/2012/11/26/wrestling-with-ehr-data-quality/" target="_blank" rel="external">http://ehrscience.com/2012/11/26/wrestling-with-ehr-data-quality/</a> “Wrestling with EHR </p>
<p>Data Quality”)</p>
<p>[EHR Data Accuracy—Should You Be Concerned?](<a href="http://ehrscience.com/2012/04/09/ehr-data-accuracy%e2%80%94should-you-be-" target="_blank" rel="external">http://ehrscience.com/2012/04/09/ehr-data-accuracy%e2%80%94should-you-be-</a></p>
<p>concerned/ “EHR Data Accuracy—Should You Be Concerned?”)</p>
<p>Clinical Algorithms and Data Structures</p>
<p>[From Data to Data + Processes: A Different Way of Thinking about EHR Software Design]</p>
<p>(<a href="http://ehrscience.com/2012/09/24/from-data-to-data-processes-a-different-way-of-thinking-about-ehr-design/" target="_blank" rel="external">http://ehrscience.com/2012/09/24/from-data-to-data-processes-a-different-way-of-thinking-about-ehr-design/</a> “From Data to </p>
<p>Data + Processes: A Different Way of Thinking about EHR Software Design”)</p>
<p>[The Informaticist-Programmer Interface: What Do You Mean By That…?](<a href="http://ehrscience.com/2012/07/30/the-informaticist-" target="_blank" rel="external">http://ehrscience.com/2012/07/30/the-informaticist-</a></p>
<p>programmer-interface-what-do-you-mean-by-that%e2%80%a6/ “The Informaticist-Programmer Interface: What Do You Mean By That…</p>
<p>?”)</p>
<p>[Making Clinical Concepts Computable](<a href="http://ehrscience.com/2012/05/16/making-clinical-concepts-computable/" target="_blank" rel="external">http://ehrscience.com/2012/05/16/making-clinical-concepts-computable/</a> “Making </p>
<p>Clinical Concepts Computable”)</p>
<p>[The Nuances of Clinical Data</p>
<p>](<a href="http://ehrscience.com/2012/01/30/the-nuances-of-clinical-data/" target="_blank" rel="external">http://ehrscience.com/2012/01/30/the-nuances-of-clinical-data/</a> “The Nuances of Clinical Data”)[Null Codes: A Mechanism </p>
<p>for Understanding the Reasons for Missing EHR Data Values](<a href="http://ehrscience.com/2013/07/22/null-codes-a-mechanism-for-" target="_blank" rel="external">http://ehrscience.com/2013/07/22/null-codes-a-mechanism-for-</a></p>
<p>understanding-the-reasons-for-missing-ehr-data-values/ “Null Codes: A Mechanism for Understanding the Reasons for Missing </p>
<p>EHR Data Values”)</p>
<p>**Key Articles</p>
<p>**Sinsky CA, Beasley JW, Simmons GE, Baron RJ. [Electronic health records: design, implementation, and policy for higher-</p>
<p>value primary care.](<a href="http://annals.org/article.aspx?articleid=1872852" target="_blank" rel="external">http://annals.org/article.aspx?articleid=1872852</a>) Ann Intern Med. 2014 May 20;160(10):727-8.<span style="color: #ff0000;">**</span></p>
<p>**</p>
<p>Krist AH, Beasley JW, Crosson JC, Kibbe DC, et al. [Electronic health record functionality needed to better support primary </p>
<p>care.](<a href="http://www.ncbi.nlm.nih.gov/pubmed/24431335?dopt=Abstract" target="_blank" rel="external">http://www.ncbi.nlm.nih.gov/pubmed/24431335?dopt=Abstract</a>) J Am Med Inform Assoc. 2014 Jan 15. [E] &lt;span </p>
<p>style=”color: #ff0000;”&gt;**</p>
<p>**</p>
<p>Hypp?nen H, Saranto K, Vuokko R, M?kel?-Bengs P, Doupi P, Lindqvist M, M?kel?  M. [Impacts of structuring the electronic </p>
<p>health record: A systematic review protocol and results of previous reviews]</p>
<p>(<a href="http://www.sciencedirect.com/science/article/pii/S1386505613002475" target="_blank" rel="external">http://www.sciencedirect.com/science/article/pii/S1386505613002475</a>). Int J Med Inform.  2013 Dec 8. [E] &lt;span </p>
<p>style=”color: #ff0000;”&gt;**</p>
<p>**</p>
<p>Xiaomu Zhou, Kai Zheng, Mark Ackerman, and David Hanauer. 2012. [Cooperative documentation: the patient problem list as a </p>
<p>nexus in electronic health records.](<a href="http://web.eecs.umich.edu/~ackerm/pub/12b69/CSCW12-352-ProblemList.inpress.pdf" target="_blank" rel="external">http://web.eecs.umich.edu/~ackerm/pub/12b69/CSCW12-352-ProblemList.inpress.pdf</a>) In </p>
<p>Proceedings of the ACM 2012 conference on Computer Supported Cooperative Work (CSCW &#8217;12). ACM, New York, NY, USA, </p>
<p>911-920.</p>
<p>Bisbal J, Berry D. [An analysis framework for electronic health record systems. Interoperation and collaboration in shared </p>
<p>healthcare](<a href="http://www.dtic.upf.edu/~jbisbal/publications/me09-01-0002_Bisbal.pdf" target="_blank" rel="external">http://www.dtic.upf.edu/~jbisbal/publications/me09-01-0002_Bisbal.pdf</a>). Methods Inf Med. 2011;50</p>
<p>(2):1809.<strong><span style="color: #ff0000;"> </span></strong></p>
<p>Blobel B, Pharow P. [Analysis and evaluation of EHR approaches]</p>
<p>(<a href="http://person.hst.aau.dk/ska/MIE2008/ParalleSessions/PapersForDownloads/06.HIS&amp;EHR/SHTI136-0359.pdf" target="_blank" rel="external">http://person.hst.aau.dk/ska/MIE2008/ParalleSessions/PapersForDownloads/06.HIS&amp;EHR/SHTI136-0359.pdf</a>). Methods Inf Med. </p>
<p>2009;48(2):162-9. **<span style="color: #ff0000;"></span></p>
<p>**</p>
<p>Greenhalgh T, Potts HW, Wong G et al. (2009) . [Tensions and paradoxes in electronic patient record research: a systematic </p>
<p>literature review using the meta-narrative method](<a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2888022/)**.**" target="_blank" rel="external">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2888022/)**.**</a> <em>Milbank Q</em> </p>
<p>vol. 87, (4) 729-788.  **<span style="color: #ff0000;"></span></p>
<p>**</p>
<p>Miller J.  <a href="http://msdn.microsoft.com/en-us/magazine/cc947917.aspx" target="_blank" rel="external">Cohesion and Coupling</a>. MSDN Magazine. October 2008.** </p>
<p>**</p>
<p>H?yrinen K, Saranto K, Nyk?nen P. [Definition, structure, content, use and impacts of electronic health records: a review </p>
<p>of the research literature.](<a href="http://www.ijmijournal.com/article/S1386-5056(07)00168-2/abstract" target="_blank" rel="external">http://www.ijmijournal.com/article/S1386-5056(07)00168-2/abstract</a>) Int J  Med Inform. 2008 </p>
<p>May;77(5):291-304.  **<span style="color: #ff0000;"></span></p>
<p>**</p>
<p>**Articles</p>
<p><strong>**[</strong><span style="color: #ff0000;"><strong>New</strong> <strong> July 29 - August 26, 2014]  [</strong>&lt;span style=”color: </span></p>
<h1 id="ff0000;”&gt;E**]_=_e-pub_date">ff0000;”&gt;<strong>E**</strong>] = e-pub date</h1><p><span style="color: #3366ff;">2014</span></p>
<p>**Bouaud J, Lamy JB. A 2014 medical informatics perspective on clinical decision support systems: do we hit the </p>
<p>ceiling of effectiveness? Yearb Med Inform. 2014 Aug 15;9(1):163-6.</p>
<p>Braun M, Brandt AU, Schulz S, Boeker M. Validating archetypes for the Multiple Sclerosis Functional Composite. BMC Med </p>
<p>Inform Decis Mak. 2014 Aug 3;14:64. 6.</p>
<p>Tastan S, Linch GC, Keenan GM, Stifter J, McKinney D, Fahey L, Lopez KD, Yao Y, Wilkie DJ. Evidence for the existing </p>
<p>American Nurses Association-recognized standardized nursing terminologies: a systematic review. Int J Nurs Stud. 2014 </p>
<p>Aug;51(8):1160-70.</p>
<p>Liaw ST, Taggart J, Yu H, Lusignan SD, Kuziemsky C, Hayen A. Integrating electronic health record information to support </p>
<p>integrated care: Practical application of ontologies to improve the accuracy of diabetes disease registers.  J Biomed </p>
<p>Inform. 2014 Aug 1. [E]</p>
<p>Kiah ML, Haiqi A, Zaidan BB, Zaidan AA. Open source EMR software: Profiling, insights and hands-on analysis. Comput Methods </p>
<p>Programs Biomed. 2014 Jul 17. [E]</p>
<p>Forrest CB, Margolis PA, Bailey LC, Marsolo K, Del Beccaro MA, Finkelstein JA, Milov DE, Vieland VJ, Wolf BA, Yu FB, Kahn </p>
<p>MG. PEDSnet: a National Pediatric Learning Health System. J Am Med Inform Assoc. 2014 Jul-Aug;21(4):602-6.</p>
<p>Yao Q, Han X, Ma XK, Xue YF, Chen YJ, Li JS. Cloud-based hospital information  system as a service for grassroots </p>
<p>healthcare institutions. J Med Syst. 2014 Sep;38(9):104.</p>
<p>Jing X, Kay S, Marley T, Hardiker NR. Integration of an OWL-DL Knowledge Base  with an EHR Prototype and Providing </p>
<p>Customized Information. J Med Syst. 2014 Sep;38(9):75.</p>
<p>Gazzarata R, Vergari F, Salmon Cinotti T, Giacomini M. A standardized SOA for  clinical data interchange in a cardiac </p>
<p>telemonitoring environment. IEEE J Biomed  Health Inform. 2014 Jul 1. [E]</p>
<p>Abbas A, Khan SU. A Review on the State-of-the-Art Privacy-Preserving Approaches in the e-Health Clouds. IEEE J Biomed </p>
<p>Health Inform. 2014 Jul;18(4):1431-41.</p>
<p>D&#8217;Amore JD, Mandel JC, Kreda DA, Swain A, Koromia GA, Sundareswaran S, Alschuler L, Dolin RH, Mandl KD, Kohane IS, </p>
<p>Ramoni RB. Are Meaningful Use Stage 2 certified EHRs ready for interoperability? Findings from the SMART C-CDA </p>
<p>Collaborative. J Am Med Inform Assoc. 2014 Jun 26. pii: amiajnl-2014-002883. [E].</p>
<p>G?eg KR, Chen R, H?jen AR, Elberg P. Content analysis of physical examination  templates in electronic health records using </p>
<p>SNOMED CT. Int J Med Inform. 2014 Jun 17. [E]</p>
<p>Rasmussen LV, Thompson WK, Pacheco JA, Kho AN, Carrell DS, Pathak J, Peissig PL, Tromp G, Denny JC, Starren JB. Design </p>
<p>Patterns for the Development of Electronic Health Record-Driven Phenotype Extraction Algorithms. J Biomed Inform. 2014 Jun </p>
<ol>
<li>[E]</li>
</ol>
<p>Kush R, Goldman M. Fostering responsible data sharing through standards. N Engl J Med. 2014 Jun 5;370(23):2163-5.</p>
<p>Berges I, Bermudez J, Illarramendi A. Binding SNOMED CT Terms to Archetype Elements. Establishing a Baseline of Results. </p>
<p>Methods Inf Med. 2014 Jun 3;53(4).  [E]</p>
<p>de Hoog CL, Portegijs PJ, Stoffers HE. Family history tools for primary care are not ready yet to be implemented. A </p>
<p>systematic review. Eur J Gen Pract. 2014 Jun;20(2):125-33.</p>
<p>Wongsapai M, Suebnukarn S, Rajchagool S, Beach D, Kawaguchi S. Health-oriented electronic oral health record: development </p>
<p>and evaluation. Health Informatics J.  2014 Jun;20(2):104-17.</p>
<p>Raebel MA, Haynes K, Woodworth TS, Saylor G, Cavagnaro E, Coughlin KO, Curtis  LH, Weiner MG, Archdeacon P, Brown JS. </p>
<p>Electronic clinical laboratory test results data tables: lessons from Mini-Sentinel. Pharmacoepidemiol Drug Saf. 2014 </p>
<p>Jun;23(6):609-18.</p>
<p>Laing GL, Bruce JL, Skinner DL, Allorto NL, Clarke DL, Aldous C. Development,  implementation, and evaluation of a hybrid </p>
<p>electronic medical record system specifically designed for a developing world surgical service. World J Surg. 2014 Jun;38</p>
<p>(6):1388-97.</p>
<p>Sinsky CA, Beasley JW, Simmons GE, Baron RJ. Electronic health records: design, implementation, and policy for higher-value </p>
<p>primary care. Ann Intern Med. 2014 May 20;160(10):727-8.</p>
<p>Matui P, Wyatt JC, Pinnock H, Sheikh A, McLean S. Computer decision support systems for asthma: a systematic review. NPJ </p>
<p>Prim Care Respir Med. 2014 May 20;24:14005.</p>
<p>Asan O, D Smith P, Montague E. More screen time, less face time – implications for EHR design. J Eval Clin Pract. 2014 May </p>
<ol>
<li>[E]</li>
</ol>
<p>Trigo JD, Kohl CD, Eguzkiza A, Martinez-Espronceda M, Alesanco A, Serrano L, Garcia J, Knaup P. On the Seamless, Harmonized </p>
<p>Use of ISO/IEEE11073 and OpenEHR.  IEEE J Biomed Health Inform. 2014 May;18(3):872-84.</p>
<p>Morrison Z, Fernando B, Kalra D, Cresswell K, Sheikh A. National evaluation of the benefits and risks of greater </p>
<p>structuring and coding of the electronic health record: exploratory qualitative investigation. J Am Med Inform Assoc. 2014  </p>
<p>May-Jun;21(3):492-500.</p>
<p>Goossen W, Langford LH. Exchanging care records using HL7 V3 care provision messages. J Am Med Inform Assoc. 2014 Apr 19. </p>
<p>[E]</p>
<p>V. Curcin, S. Miles, R. Danger, Y. Chen, R. Bache, and A. Taweel. 2014. Implementing interoperable provenance in biomedical </p>
<p>research. <em>Future Gener. Comput. Syst.</em> 34 (May 2014), 1-16.</p>
<p>Fernando B, Morrison Z, Kalra D, Cresswell K, Sheikh A. Approaches to recording drug allergies in electronic health </p>
<p>records: qualitative study. PLoS One. 2014 Apr 16;9(4)</p>
<p>Kerstin A. Kessel, Christian Bohn, Uwe Engelmann, Dieter Oetzel, Nina Bougatf, Rolf Bendl, Jürgen Debus, and Stephanie E. </p>
<p>Combs. 2014. Five-year experience with setup and implementation of an integrated database system for clinical documentation </p>
<p>and research.<em>Comput. Methods Prog. Biomed.</em> 114, 2 (April 2014)</p>
<p>Poba-Nzaou, Placide; Marsan, Josianne; Pare, Guy; Raymond, Louis, &#8220;Governance of Open Source Electronic Health Record </p>
<p>Projects: A Successful Case of a Hybrid Model,&#8221; _System Sciences (HICSS), 2014 47th Hawaii International Conference </p>
<p>on_ , vol., no., pp.2798,2807, 6-9 Jan. 2014</p>
<p>Steininger, Katharina; Stiglbauer, Barbara; Baumgartner, Bernd; Engleder, Bernhard, &#8220;Factors Explaining </p>
<p>Physicians&#8217; Acceptance of Electronic Health Records,&#8221; System Sciences (HICSS), 2014 47th Hawaii International </p>
<p>Conference on , vol., no., pp.2768,2777, 6-9 Jan. 2014</p>
<p>Gan, Qiwei; Cao, Qing, &#8220;Adoption of Electronic Health Record System: Multiple Theoretical Perspectives,&#8221; </p>
<p><em>System Sciences (HICSS), 2014 47th Hawaii International Conference on</em> , vol., no., pp.2716,2724, 6-9 Jan. 2014</p>
<p>Noteboom, Cherie; Dempsey, Kathryn; Fruhling, Ann, &#8220;Recognizing Patient Safety Importance through Instrument </p>
<p>Validation on Physicians&#8217; Assessment of an EHR,&#8221; _System Sciences (HICSS), 2014 47th Hawaii International </p>
<p>Conference on_ , vol., no., pp.2828,2837, 6-9 Jan. 2014</p>
<p>Grabenbauer, Lisa A.; Fruhling, Ann L.; Windle, John R., &#8220;Towards a Cardiology/EHR Interaction Workflow Usability </p>
<p>Evaluation Method,&#8221; <em>System Sciences (HICSS), 2014 47th Hawaii International Conference on</em> , vol., no., </p>
<p>pp.2626,2635, 6-9 Jan. 2014</p>
<p>Mansoori B, Rosipko B, Erhard KK, Sunshine JL. Design and Implementation of Disaster Recovery and Business Continuity </p>
<p>Solution for Radiology PACS. J Digit Imaging. 2014 Feb;27(1):19-25.</p>
<p>Thyvalikakath TP, Dziabiak MP, Johnson R, Torres-Urquidy MH, Acharya A, Yabes  J, Schleyer TK. Advancing cognitive </p>
<p>engineering methods to support user interface design for electronic health records. Int J Med Inform. 2014 Jan 20. [E]</p>
<p>M. Poulymenopoulou, F. Malamateniou, and G. Vassilacopoulos. 2014. E-EPR: a workflow-based electronic emergency patient </p>
<p>record. Personal Ubiquitous Comput. 18, 1 (January 2014), 91-100.</p>
<p>Doods J, Botteri F, Dugas M, Fritz F; EHR4CR WP7. A European inventory of common electronic health record data elements for </p>
<p>clinical trial feasibility.Trials. 2014 Jan 10;15:18.</p>
<p>Kathleen H. Pine and Melissa Mazmanian. 2014. Institutional logics of the EMR and the problem of &#8216;perfect&#8217; but </p>
<p>inaccurate accounts. In Proceedings of the 17th ACM conference on Computer supported cooperative work &amp; social </p>
<p>computing (CSCW &#8217;14). ACM, New York, NY, USA, 283-294</p>
<p>Krist AH, Beasley JW, Crosson JC, Kibbe DC, Klinkman MS, Lehmann CU, Fox CH, Mitchell JM, Mold JW, Pace WD, Peterson KA, </p>
<p>Phillips RL, Post R, Puro J, Raddock  M, Simkus R, Waldren SE. Electronic health record functionality needed to better  </p>
<p>support primary care. J Am Med Inform Assoc. 2014 Jan 15. [E]</p>
<p>Zargaran E, Schuurman N, Nicol AJ, Matzopoulos R, Cinnamon J, Taulu T, Ricker  B, Garbutt Brown DR, Navsaria P, Hameed SM. </p>
<p>The electronic trauma health record: design and usability of a novel tablet-based tool for trauma care and injury </p>
<p>surveillance in low resource settings. J Am Coll Surg. 2014 Jan;218(1):41-50.</p>
<p>**2013</p>
<p>**Klann JG, Szolovits P, Downs SM, Schadow G. Decision support from local data: Creating adaptive order menus from </p>
<p>past clinician behavior. J Biomed Inform. 2013 Dec 16. [E]</p>
<p>Duke JD, Morea J, Mamlin B, Martin DK, Simonaitis L, Takesue BY, Dixon BE, Dexter PR. Regenstrief Institute&#8217;s Medical </p>
<p>Gopher: A next-generation homegrown electronic medical record system. Int J Med Inform.  2013 Dec 14 [E]</p>
<p>Austin T, Sun S, Hassan T, Kalra D. Evaluation of ISO EN 13606 as a result of  its implementation in XML. Health </p>
<p>Informatics J. 2013 Dec;19(4):264-80.</p>
<p>Duftschmid G, Rinner C, Kohler M, Huebner-Bloder G, Saboor S, Ammenwerth E. The EHR-ARCHE project: Satisfying clinical </p>
<p>information needs in a Shared Electronic Health Record System based on IHE XDS and Archetypes. Int J Med Inform. 2013 </p>
<p>Dec;82(12):1195-207.</p>
<p>Acharya A, Hernandez P, Thyvalikakath T, Ye H, Song M, Schleyer T. Development and initial validation of a content taxonomy </p>
<p>for patient records in general dentistry. Int J Med Inform. 2013 Dec;82(12):1171-82.</p>
<p>Bache R, Miles S, Taweel A. An adaptable architecture for patient cohort identification from diverse data sources. J Am Med </p>
<p>Inform Assoc. 2013 Dec;20(e2):e327-33.</p>
<p>Yilmaz O, Erdur RC, Türksever M. SAMS &#8211; A Systems Architecture for Developing  Intelligent Health Information </p>
<p>Systems. J Med Syst. 2013 Dec;37(6):9989.</p>
<p>Xin Zhang; Tingting Zhang, &#8220;Achieving scalability in a distributed electronic health record system,&#8221; Science </p>
<p>and Information Conference (SAI), 2013 , vol., no., pp.68,77, 7-9 Oct. 2013</p>
<p>Deblieck C, Laflamme AF, Rivard MJ, Monsen KA. Standardizing Documentation for Postoperative Nausea and Vomiting in the </p>
<p>Electronic Health Record. AORN J. 2013 Oct;98(4):370-80.</p>
<p>Kho AN, Rasmussen LV, Connolly JJ, Peissig PL, Starren J, Hakonarson H, Hayes  MG. Practical challenges in integrating </p>
<p>genomic data into the electronic health record. Genet Med. 2013 Oct;15(10):772-8.</p>
<p>Tarczy-Hornoch P, Amendola L, Aronson SJ, Garraway L, Gray S, Grundmeier RW, Hindorff LA, Jarvik G, Karavite D, Lebo M, </p>
<p>Plon SE, Van Allen E, Weck KE, White PS, Yang Y. A survey of informatics approaches to whole-exome and whole-genome </p>
<p>clinical reporting in the electronic health record. Genet Med. 2013 Oct;15(10):824-32.</p>
<p>Peterson JF, Bowton E, Field JR, Beller M, Mitchell J, Schildcrout J, Gregg W, Johnson K, Jirjis JN, Roden DM, Pulley JM, </p>
<p>Denny JC. Electronic health record design and implementation for pharmacogenomics: a local perspective. Genet Med. 2013 </p>
<p>Oct;15(10):833-41.</p>
<p>Rothman MJ, Rothman SI, Beals J 4th. Development and validation of a continuous measure of patient condition using the </p>
<p>Electronic Medical Record. J Biomed Inform. 2013 Oct;46(5):837-48.</p>
<p>Sinaci AA, Laleci Erturkmen GB. A federated semantic metadata registry framework for enabling interoperability across </p>
<p>clinical research and care domains. J Biomed Inform. 2013 Oct;46(5):784-94.</p>
<p>Baskaran LN, Greco PJ, Kaelber DC. Case report medical eponyms: an applied clinical informatics opportunity. Appl Clin </p>
<p>Inform. 2012 Sep 19;3(3):349-55.</p>
<p>Katzer R, Barton DJ, Adelman S, Clark S, Seaman EL, Hudson KB. Impact of implementing an EMR on physical exam documentation </p>
<p>by ambulance personnel. Appl Clin Inform. 2012 Jul 25;3(3):301-8.</p>
<p>Bahga, A.; Madisetti, V.K., &#8220;A Cloud-based Approach for Interoperable Electronic Health Records (EHRs), Biomedical </p>
<p>and Health Informatics, IEEE Journal of , vol.17, no.5, pp.894,906, Sept. 2013.</p>
<p>Makam AN, Lanham HJ, Batchelor K, Moran B, Howell-Stampley T, Kirk L, Cherukuri M, Samal L, Santini N, Leykum LK, Halm EA. </p>
<p>The good, the bad and the early adopters: providers&#8217; attitudes about a common, commercial EHR. J Eval Clin  Pract. </p>
<p>2013 Aug 20. [E]</p>
<p>Fernández-Breis JT, Maldonado JA, Marcos M, Legaz-García MD, Moner D, Torres-Sospedra J, Esteban-Gil A, Martínez-Salvador </p>
<p>B, Robles M. Leveraging electronic healthcare record standards and semantic web technologies for the identification of </p>
<p>patient cohorts. J Am Med Inform Assoc. 2013 Aug 9. [E]</p>
<p>Brown JS, Kahn M, Toh S. Data quality assessment for comparative effectiveness research in distributed data networks. Med </p>
<p>Care. 2013 Aug;51(8 Suppl 3):S22-9.</p>
<p>Kuqi K, Eveleigh T, Holzer T, Sarkani S, Levin JE, Crowley RS. Design of electronic medical record user interfaces: a </p>
<p>matrix-based method for improving usability. J Healthc Eng. 2013;4(3):427-52.</p>
<p>Kushniruk A, Nohr C, Jensen S, Borycki EM. From Usability Testing to Clinical Simulations: Bringing Context into the Design </p>
<p>and Evaluation of Usable and Safe Health Information Technologies. Contribution of the IMIA Human Factors Engineering for </p>
<p>Healthcare Informatics Working Group. Yearb Med Inform.2013;8(1):78-85.</p>
<p>Majeed RW, St?hr MR, R?hrig R. Architecture of a Prehospital Emergency Patient Care Report System (PEPRS). Stud Health </p>
<p>Technol Inform. 2013;192:1151.</p>
<p>Del Fiol G, Curtis C, Cimino JJ, Iskander A, Kalluri AS, Jing X, Hulse NC, Long J, Overby CL, Schardt C, Douglas DM. </p>
<p>Disseminating Context-Specific Access to Online Knowledge Resources within Electronic Health Record Systems. Stud Health </p>
<p>Technol Inform. 2013;192:672-6.</p>
<p>Janzek-Hawlat S, Ammenwerth E, Dorda W, Duftschmid G, Hackl W, H?rbst A, Jung  M, Woertz K, Gall W. The Austrian e-</p>
<p>Medikation Pilot Evaluation: Lessons Learned  from a National Medication List. Stud Health Technol Inform. 2013;192:347-51.</p>
<p>Mansoori B, Rosipko B, Erhard KK, Sunshine JL. Design and Implementation of Disaster Recovery and Business Continuity </p>
<p>Solution for Radiology PACS. J Digit Imaging. 2013 Aug 6. [E]</p>
<p>Park JY, Lee G, Shin SY, Kim JH, Han HW, Kwon TW, Kim WS, Lee JH. Lessons Learned from the  Development of Health </p>
<p>Applications in a Tertiary Hospital. Telemed J E Health. 2013 Aug 2. [E]</p>
<p>Alabdulatif, A.; Khalil, I.; Mai, V., &#8220;Protection of electronic health records (EHRs) in cloud,&#8221; Engineering in </p>
<p>Medicine and Biology Society (EMBC), 2013 35th Annual International Conference of the IEEE , vol., no., pp.4191,4194, 3-7 </p>
<p>July 2013.</p>
<p>Vreeman DJ, Richoz C. Possibilities and Implications of Using the ICF and Other Vocabulary Standards in Electronic Health </p>
<p>Records. Physiother Res Int. 2013 Jul 30. [E]</p>
<p>Aljarullah A, El-Masri S. A novel system architecture for the national integration of electronic health records: a semi-</p>
<p>centralized approach. J Med Syst. 2013 Aug;37(4):9953.</p>
<p>Sahoo SS, Zhang GQ, Lhatoo SD. Epilepsy informatics and an ontology-driven infrastructure for large database research and </p>
<p>patient care in epilepsy. Epilepsia. 2013 Aug;54(8):1335-41.</p>
<p>Morton P, Petersen C, Chard R, Kleiner C. Validation of the Data Elements for the Health System Domain of the PNDS. AORN J. </p>
<p>2013 Jul;98(1):39-48.</p>
<p>Bacelar-Silva, G.M.; Cesar, H.; Braga, P.; Guimaraes, R., &#8220;OpenEHR-based pervasive health information system for </p>
<p>primary care: First Brazilian experience for public care,&#8221; Computer-Based Medical Systems (CBMS), 2013 IEEE 26th </p>
<p>International Symposium on , vol., no., pp.572,873, 20-22 June 2013.</p>
<p>Santos, B.; Rodrigues, P.; Cruz-Correia, R., &#8220;An automatic clinical document importance estimator for an existing </p>
<p>electronic patient record — Architecture and implementation,&#8221; Computer-Based Medical Systems (CBMS), 2013 IEEE 26th </p>
<p>International Symposium on , vol., no., pp.537,539, 20-22 June 2013.</p>
<p>Shoenbill K, Fost N, Tachinardi U, Mendonca EA. Genetic data and electronic health records: a discussion of ethical, </p>
<p>logistical and technological considerations. J Am Med Inform Assoc. 2013 Jun 14. [E]</p>
<p>Post AR, Kurc T, Cholleti S, Gao J, Lin X, Bornstein W, Cantrell D, Levine D,  Hohmann S, Saltz JH. The Analytic </p>
<p>Information Warehouse (AIW): A platform for analytics using electronic health record data. J Biomed Inform. 2013 Jun;46</p>
<p>(3):410-24.</p>
<p>Byrne MD. Redesign of electronic health records for perianesthesia nursing. J Perianesth Nurs. 2013 Jun;28(3):163-8.</p>
<p>Gupta A,  Sharda R. 2013. Improving the science of healthcare delivery and informatics using modeling approaches. _Decis. </p>
<p>Support Syst._ 55, 2 (May 2013), 423-427.</p>
<p>Klann JG, McCoy AB, Wright A, Wattanasin N, Sittig DF, Murphy SN. Health care  transformation through collaboration on </p>
<p>open-source informatics projects: integrating a medical applications platform, research data repository, and patient </p>
<p>summarization. Interact J Med Res. 2013 May 30;2(1):e11.</p>
<p>Sundvall E, Nystr?m M, Karlsson D, Eneling M, Chen R, Orman H. Applying representational state transfer (REST) architecture </p>
<p>to archetype-based electronic health record systems. BMC Med Inform Decis Mak. 2013 May 9;13(1):57. [E]</p>
<p>Anderson HV, Weintraub WS, Radford MJ, Kremers MS, Roe MT, Shaw RE, Pinchotti  DM, Tcheng JE. Standardized cardiovascular </p>
<p>data for clinical research, registries, and patient care: a report from the data standards workgroup of the national </p>
<p>cardiovascular research infrastructure project. J Am Coll Cardiol. 2013  May 7;61(18):1835-46.</p>
<p>Yoo S, Kim S, Lee S, Lee KH, Baek RM, Hwang H. A study of user requests regarding the fully electronic health record system </p>
<p>at Seoul National University  Bundang Hospital: Challenges for future electronic health record systems. Int J Med Inform. </p>
<p>2013 May;82(5):387-97.</p>
<p>Yunan Chen, &#8220;Towards collaborative-oriented health IT systems design,&#8221; Collaboration Technologies and Systems </p>
<p>(CTS), 2013 International Conference on , vol., no., pp.479,480, 20-24 May 2013.</p>
<p>Brasil, L.; Oliveria, E.; Elpi?dio, F.; Neto, A.; Tahmasebi, R.; Mendon?a, H.; Puttini, R., &#8220;Information architecture </p>
<p>and services of the Electronic Health Record (EHR) definition of Brazil &#8211; GT information architecture,&#8221; Health </p>
<p>Care Exchanges (PAHCE), 2013 Pan American , vol., no., pp.1,1, April 29 2013-May 4 2013.</p>
<p>Bahga, A.; Madisetti, V.K.. A Cloud-Based Approach to Interoperable EHRs. Biomedical and Health Informatics, IEEE Journal </p>
<p>of , vol 17  no.99. April 2013</p>
<p>Menárguez-Tortosa M, Fernández-Breis JT.OWL-based reasoning methods for validating archetypes.J Biomed Inform. 2013 Apr;46</p>
<p>(2):304-17.</p>
<p>Lee KK, Tang WC, Choi KS. Alternatives to relational database: comparison of NoSQL and XML approaches for clinical data </p>
<p>storage.Comput Methods Programs Biomed. 2013 Apr;110(1):99-109.</p>
<p>Ngouongo SM, L?be M, Stausberg J.The ISO/IEC 11179 norm for metadata registries:  Does it cover healthcare standards in </p>
<p>empirical research?J Biomed Inform. 2013 Apr;46(2):318-27.</p>
<p>K?pcke F, Trinczek B, Majeed RW, Schreiweis B, Wenk J, Leusch T, Ganslandt T, Ohmann C, Bergh B, R?hrig R, Dugas M, </p>
<p>Prokosch HU.Evaluation of data completeness in the electronic health record for the purpose of patient recruitment into </p>
<p>clinical trials: a retrospective analysis of element presence.BMC Med Inform Decis Mak. 2013 Mar 21;13:37.</p>
<p>Atkins D, Cullen T. The future of health information technology: implications for research. Med Care. 2013 Mar;51 Suppl:S1</p>
<p>-3.</p>
<p>Calvillo J,  Rom I, Rivas S, and Roa LM. 2013. Easing the development of healthcare architectures following RM-ODP </p>
<p>principles and healthcare standards. Comput. Stand. Interfaces 35, 3 (March 2013), 329-337.</p>
<p>Laleci, G.B.; Yuksel, M.; Dogac, A., &#8220;Providing Semantic Interoperability Between Clinical Care and Clinical Research </p>
<p>Domains,&#8221; Biomedical and Health Informatics, IEEE Journal of , vol.17, no.2, pp.356,369, March 2013</p>
<p>Li-Min Liu. 2013. A new software development methodology for clinical trial systems. <em>Adv. Soft. Eng.</em> 2013, (January </p>
<p>2013).</p>
<p><strong>2012</strong></p>
<p>de la Torre-Díez I, López-Coronado M, Rodrigues JJ. How to measure the QoS of  a web-based EHRs system: development of an </p>
<p>instrument. J Med Syst. 2012 Dec;36(6):3725-31.</p>
<p>Sun S, Austin T, Kalra D. A data types profile suitable for use with ISO EN 13606. J Med Syst. 2012 Dec;36(6):3621-35.</p>
<p>Anoshiravani A, Gaskin GL, Groshek MR, Kuelbs C, Longhurst CA. Special requirements for electronic medical records in </p>
<p>adolescent medicine. J Adolesc Health. 2012 Nov;51(5):409-14.</p>
<p>Antoniades, A.; Georgousopoulos, C.; Forgo, N.; Aristodimou, A.; Tozzi, F.; Hasapis, P.; Perakis, K.; Bouras, T.; </p>
<p>Alexandrou, D.; Kamateri, E.; Panopoulou, E.; Tarabanis, K.; Pattichis, C., &#8220;Linked2Safety: A secure linked data </p>
<p>medical information space for semantically-interconnecting EHRs advancing patients&#8217; safety in medical </p>
<p>research,&#8221; Bioinformatics &amp; Bioengineering (BIBE), 2012 IEEE 12th International Conference on , vol., no., </p>
<p>pp.517,522, 11-13 Nov. 2012</p>
<p>Yu, W.D.; Panova, A., &#8220;An architectural design framework for an Electronic Health Record system with hospice </p>
<p>application,&#8221; e-Health Networking, Applications and Services (Healthcom), 2012 IEEE 14th International Conference on </p>
<p>, vol., no., pp.367,370, 10-13 Oct. 2012</p>
<p>Menárguez-Tortosa M, Martínez-Costa C, Fernández-Breis JT. A generative tool for building health applications driven by ISO </p>
<p>13606 archetypes. J Med Syst. 2012 Oct;36(5):3063-75.</p>
<p>Cui Tao; Guoqian Jiang; Oniki, T.A.; Freimuth, R.R.; Pathak, J.; Qian Zhu; Sharma, D.; Huff, S.M.; Chute, C.G., &#8220;A </p>
<p>Semantic-Web Oriented Representation of Clinical Element Model for Secondary Use of Electronic Healthcare Data,&#8221; </p>
<p>Healthcare Informatics, Imaging and Systems Biology (HISB), 2012 IEEE Second International Conference on , vol., no., </p>
<p>pp.133,133, 27-28 Sept. 2012</p>
<p>Jie Huang; Sharaf, M.; Chin-Tser Huang, &#8220;A Hierarchical Framework for Secure and Scalable EHR Sharing and Access </p>
<p>Control in Multi-cloud,&#8221; Parallel Processing Workshops (ICPPW), 2012 41st International Conference on , vol., no., </p>
<p>pp.279,287, 10-13 Sept. 2012</p>
<p>Srur, B.L.; Drew, S., &#8220;Challenges in designing a successful e-health system for Australia,&#8221; Information </p>
<p>Technology in Medicine and Education (ITME), 2012 International Symposium on , vol.1, no., p.480,484, 3-5 Aug. 2012</p>
<p>Yu HY, Li JS, Zhang XG, Tian Y, Suzuki M, Araki K. Performance assessment of EMR systems based on post-relational database. </p>
<p>J Med Syst. 2012 Aug;36(4):2421-30.</p>
<p>Seto B, Friedman C. Moving toward multimedia electronic health records: how do we get there? J Am Med Inform Assoc. 2012 </p>
<p>Jul-Aug;19(4):503-5.</p>
<p>Zhiwei Yu; Thomborson, C.; Chaokun Wang; Jianmin Wang; Rui Li, &#8220;A cloud-based watermarking method for health data </p>
<p>security,&#8221; High Performance Computing and Simulation (HPCS), 2012 International Conference on , vol., no., </p>
<p>pp.642,647, 2-6 July 2012</p>
<p>Rodriguez-Martinez, M.; Valdivia, H.; Rivera, J.; Seguel, J.; Greer, M., &#8220;MedBook: A Cloud-Based Healthcare Billing </p>
<p>and Record Management System,&#8221; Cloud Computing (CLOUD), 2012 IEEE 5th International Conference on , vol., no., </p>
<p>pp.899,905, 24-29 June</p>
<p>Ati, M.; Omar, W.; Hussain, A., &#8220;Knowledge based system framework for managing chronic diseases based on service </p>
<p>oriented architecture,&#8221; Information Science and Digital Content Technology (ICIDT), 2012 8th International Conference </p>
<p>on , vol.1, no., pp.20,23, 26-28 June 2012</p>
<p>Jing X, Kay S, Marley T, Hardiker NR, Cimino JJ. Incorporating personalized gene sequence variants, molecular genetics </p>
<p>knowledge, and health knowledge into an EHR prototype based on the Continuity of Care Record standard. J Biomed Inform. </p>
<p>2012 Feb;45(1):82-92.</p>
<p>Chen W, Shih CC. Architecture of portable electronic medical records system integrated with streaming media. J Med Syst. </p>
<p>2012 Feb;36(1):25-31.</p>
<p>Park HA, Min YH, Jeon E, Kim Y, Km HY. Development of an electronic nursing records system based on information models and </p>
<p>clinical practice guidelines. Stud Health Technol Inform. 2012;180:1206-8.</p>
<p>Al Jarullah A, El-Masri S. Proposal of an architecture for the national integration of Electronic Health Records: a semi-</p>
<p>centralized approach. Stud Health Technol Inform. 2012;180:917-21.</p>
<p>Stausberg J, Pritzkuleit R, Schmidt CO, Schrader T, Nonnemacher M. Indicators of data quality: revision of a guideline for </p>
<p>networked medical research. Stud Health Technol Inform. 2012;180:711-5.</p>
<p>Veseli H, Kopanitsa G, Demski H. Standardized EHR interoperability -preliminary results of a German pilot project using the </p>
<p>archetype methodology. Stud Health Technol Inform. 2012;180:646-50.</p>
<p>Ouagne D, Hussain S, Sadou E, Jaulent MC, Daniel C. The Electronic Healthcare Record for Clinical Research (EHR4CR) </p>
<p>information model and terminology. Stud Health Technol Inform. 2012;180:534-8.  Ahlbrandt J, Henrich M, Hartmann BA,</p>
<p>Bundschuh BB, Schwarz J, Klasen J, R?hrig R. Small cause &#8211; big effect: improvement in interface design results in </p>
<p>improved data quality &#8211; a multicenter crossover study. Stud Health Technol Inform. 2012;180:393-7.</p>
<p>Kalra D, Tapuria A, Austin T, De Moor G. Quality requirements for EHR archetypes. Stud Health Technol Inform. 2012;180:48-</p>
<p>52.</p>
<p>Mouleeswaran, S. K.; Rangaswamy, A.; Rauf, H.A., &#8220;Harnessing and securing cloud in patient health monitoring,&#8221; </p>
<p>Computer Communication and Informatics (ICCCI), 2012 International Conference on , vol., no., pp.1,5, 10-12 Jan. 2012</p>
<p><strong>2011</strong></p>
<p>Wade TD, Hum RC, Murphy JR. A Dimensional Bus model for integrating clinical  and research data. J Am Med Inform Assoc. </p>
<p>2011 Dec;18 Suppl 1:i96-102.</p>
<p>Batley NJ, Osman HO, Kazzi AA, Musallam KM. Implementation of an emergency department computer system: design features that </p>
<p>users value. J Emerg Med. 2011 Dec;41(6):693-700.</p>
<p>Abd Ghani, M.K.; Lee Chew Wen, &#8220;The design of flexible Pervasive Electronic Health Record  PEHR),&#8221; Humanities, </p>
<p>Science and Engineering (CHUSER), 2011 IEEE Colloquium on , vol., no., pp.249,254, 5-6 Dec. 2011</p>
<p>Yang Jin; Tang Deyu; Zhou Yi, &#8220;A Distributed Storage Model for EHR Based on HBase,&#8221; Information Management, </p>
<p>Innovation Management and Industrial Engineering (ICIII), 2011 International Conference on , vol.2, no., pp.369,372, 26-27 </p>
<p>Nov. 2011</p>
<p>Saleem JJ, Haggstrom DA, Militello LG, Flanagan M, Kiess CL, Arbuckle N, Doebbeling BN. Redesign of a computerized clinical </p>
<p>reminder for colorectal cancer screening: a human-computer interaction evaluation. BMC Med Inform Decis Mak. 2011 Nov </p>
<p>29;11:74.</p>
<p>Weiwei Jiang; Haishun Wang; Xiaomei Xu; Chun Peng, &#8220;Individual Self-Service Electronic Health Records: Architecture, </p>
<p>Key Technologies and Prototype System,&#8221; Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC), 2011 </p>
<p>International Conference on , vol., no., pp.574,579, 10-12 Oct. 2011.</p>
<p>Dias RD, Cook TW, Freire SM. Modeling healthcare authorization and claim submissions using the openEHR dual-model approach. </p>
<p>BMC Med Inform Decis Mak. 2011 Oct 12;11:60.</p>
<p>Acker B, Bronnert J, Brown T, Clark JS, Dunagan B, Elmer T, Goodell S, Green  K, Heller P, Holmes C, Imel M, Johnson K, </p>
<p>Kallem C, Loucks M, Patel S, Reed DA, Scichilone R, Tegen AL. Problem list guidance in the EHR. J AHIMA. 2011 Sep;82(9):52</p>
<p>-8.</p>
<p>Ray, S.; Dogra, D.; Bhattacharya, S.; Saha, B.; Biswas, A.; Majumdar, A.; Mukherjee, J.; Majumdar, B.; Singh, A.; Paria, </p>
<p>A.; Mukherjee, S.; Bhattacharya, S.D., &#8220;A Web Enabled Health Information System for the Neonatal Intensive Care Unit </p>
<p>(NICU),&#8221; Services (SERVICES), 2011 IEEE World Congress on , vol., no., pp.451,458, 4-9 July 2011</p>
<p>de Smet, K., &#8220;The Dutch Nationwide Electronic Health Record: Why the Centralised Services Architecture?,&#8221; </p>
<p>Software Architecture (WICSA), 2011 9th Working IEEE/IFIP Conference on , vol., no., pp.181,186, 20-24 June 2011</p>
<p>Xu W, Guan Z, Cao H, Zhang H, Lu M, Li T. Analysis and evaluation of the Electronic Health Record standard in China: a </p>
<p>comparison with the American national standard ASTM E 1384. Int J Med Inform. 2011 Aug;80(8):555-61.</p>
<p>Yang TH, Sun YS, Lai F. A scalable healthcare information system based on a service-oriented architecture. J Med Syst. 2011 </p>
<p>Jun;35(3):391-407.</p>
<p>Soares dos Santos, E.; Martins, H.G., &#8220;Usability and impact of Electronic Health Records for Primary Care Units in </p>
<p>Portugal,&#8221; Information Systems and Technologies (CISTI), 2011 6th Iberian Conference on , vol., no., pp.1,3, 15-18 </p>
<p>June 2011</p>
<p>Chiasera, A.; Toai, T.J.; Bogoni, L.P.; Armellin, G.; Jara, J.J., &#8220;Federated EHR: How to improve data quality </p>
<p>maintaining privacy,&#8221; IST-Africa Conference Proceedings, 2011 , vol., no., pp.1,8, 11-13 May 2011</p>
<p>Huser V, Rasmussen LV, Oberg R, Starren JB. Implementation of workflow engine technology to deliver basic clinical decision </p>
<p>support functionality. BMC Med Res  Methodol. 2011 Apr 10;11:43.</p>
<p>Brzeziski, J.; Czajka, S.; Kobusi?ski, J.; Piernik, M., &#8220;Healthcare Integration Platform,&#8221; Medical Information </p>
<p>&amp; Communication Technology (ISMICT), 2011 5th International Symposium on , vol., no., pp.52,55, 27-30 March 2011</p>
<p>Cheong YC, Bird L, Tun NN, Brooks C. Using a logical information model-driven design process in healthcare. Stud Health </p>
<p>Technol Inform. 2011;169:804-8.</p>
<p>de la Cruz E, Lopez DM, Uribe G, Gonzalez C, Blobel B. A reference architecture for integrated EHR in Colombia. Stud Health </p>
<p>Technol Inform. 2011;169:305-9.</p>
<p>Chevrier R, Jaques D, Lovis C. Architecture of a decision support system to improve clinicians&#8217; interpretation of </p>
<p>abnormal liver function tests. Stud Health  Technol Inform. 2011;169:195-9.</p>
<p>Eccher C, Piras EM, Stenico M. TreC &#8211; a REST-based regional PHR. Stud Health Technol Inform. 2011;169:108-12.</p>
<p>Tuomainen M, Mykk?nen J. Reference architecture of application services for personal wellbeing information management. Stud </p>
<p>Health Technol Inform. 2011;169:98-102.</p>
<p>Rinner C, Kohler M, Hübner-Bloder G, Saboor S, Ammenwerth E, Duftschmid G. Creating ISO/EN 13606 archetypes based on </p>
<p>clinical information needs. Stud Health Technol Inform. 2011;165:43-8.</p>
<p>Sullivan-Taylor P, Flanagan T, Harrison T, Webster G. Development of a draft  pan-Canadian primary health care electronic </p>
<p>medical record content standard. Stud Health Technol Inform. 2011;164:385-91.</p>
<p><strong>2010</strong></p>
<p>Pavalam, S. M.; Jawahar, M.; Akorli, F.K., &#8220;Data warehouse based Architecture for Electronic Health Records for </p>
<p>Rwanda,&#8221; Education and Management Technology (ICEMT), 2010 International Conference on , vol., no., pp.253,255, 2-4 </p>
<p>Nov. 2010</p>
<p>Liang Xiao; ChunZhi Wang; YiXiang Chen; Cousins, G.; Hederman, L.; Fahey, T.; Dimitrov, B., &#8220;Developing an EHR for </p>
<p>methadone treatment recording and decision support,&#8221; Computer Application and System Modeling (ICCASM), 2010 </p>
<p>International Conference on , vol.14, no., pp.V14-189,V14-193, 22-24 Oct. 2010</p>
<p>Liang Xiao; Cousins, G.; Hederman, L.; Fahey, T.; Dimitrov, B., &#8220;The design of an EHR for clinical decision </p>
<p>support,&#8221; Biomedical Engineering and Informatics (BMEI), 2010 3rd International Conference on , vol.6, no., </p>
<p>pp.2525,2531, 16-18 Oct. 2010</p>
<p>Jiye An; Zhe Wu; Hushan Chen; Xudong Lu; Huilong Duan, &#8220;Level of detail navigation and visualization of electronic </p>
<p>health records,&#8221; Biomedical Engineering and Informatics (BMEI), 2010 3rd International Conference on , vol.6, no., </p>
<p>pp.2516,2519, 16-18 Oct. 2010</p>
<p>Percival, J.; McGregor, C.; Percival, N.; Kamaleswaran, R.; Tuuha, S., &#8220;A framework for nursing documentation </p>
<p>enabling integration with EHR and real-time patient monitoring,&#8221; Computer-Based Medical Systems (CBMS), 2010 IEEE </p>
<p>23rd International Symposium on , vol., no., pp.468,473, 12-15 Oct. 2010</p>
<p>Malaviya AN, Gogia SB. Development, implementation and benefits of a rheumatology-specific electronic medical record </p>
<p>application with automated display of outcome measures. Int J Rheum Dis. 2010 Oct;13(4):347-60.</p>
<p>Flores Zuniga AE, Win KT, Susilo W. Functionalities of free and open electronic health record systems. Int J Technol Assess </p>
<p>Health Care. 2010 Oct;26(4):382-9.</p>
<p>Bach A, Singer MB, Bach M. The perfect electronic medical record system. J Am Osteopath Assoc. 2010 Oct;110(10):614-5.</p>
<p>Bates GW. Special requirements of electronic medical record systems in obstetrics and gynecology. Obstet Gynecol. 2010 </p>
<p>Oct;116(4):994.</p>
<p>Sutcliffe A, Thew S, De Bruijn O, Buchan I, Jarvis P, McNaught J, Procter R.  User engagement by user-centred design in e-</p>
<p>Health. Philos Transact A Math Phys Eng Sci. 2010 Sep 13;368(1926):4209-24.</p>
<p>Tychalas, D.; Kakarountas, A., &#8220;Planning and Development of an Electronic Health Record Client Based on the Android </p>
<p>Platform,&#8221; Informatics (PCI), 2010 14th Panhellenic Conference on , vol., no., pp.3,6, 10-12 Sept. 2010</p>
<p>Cho I, Kim J, Kim JH, Kim HY, Kim Y. Design and implementation of a standards-based interoperable clinical decision support </p>
<p>architecture in the context of the Korean EHR. Int J Med Inform. 2010 Sep;79(9):611-22.</p>
<p>Duftschmid G, Wrba T, Rinner C. Extraction of standardized archetyped data from Electronic Health Record systems based on </p>
<p>the Entity-Attribute-Value Model.  Int J Med Inform. 2010 Aug;79(8):585-97.</p>
<p>McCoy MJ, Diamond AM, Strunk AL; American Congress of Obstetricians and  Gynecologists&#8217; Committee on Ambulatory </p>
<p>Practice Operations. Special requirements of electronic medical record systems in obstetrics and gynecology. Obstet </p>
<p>Gynecol. 2010 Jul;116(1):140-3.</p>
<p>Frank, L.; Andersen, S.K., &#8220;Evaluation of different database designs for integration of heterogeneous distributed </p>
<p>Electronic Health Records,&#8221; Complex Medical Engineering (CME), 2010 IEEE/ICME International Conference on , vol., </p>
<p>no., pp.204,209, 13-15 July</p>
<p>Ken Qing Yang, &#8220;Secure and efficient data replay in distributed eHealthcare information system,&#8221; Information </p>
<p>Society (i-Society), 2010 International Conference on , vol., no., pp.634,639, 28-30 June 2010</p>
<p>Jinyuan Sun; Yuguang Fang, &#8220;Cross-Domain Data Sharing in Distributed Electronic Health Record Systems,&#8221; </p>
<p>Parallel and Distributed Systems, IEEE Transactions on , vol.21, no.6, pp.754,764, June 2010</p>
<p>Riedl, B.; Grascher, V., &#8220;Assuring integrity and confidentiality for pseudonymized health data,&#8221; Electrical </p>
<p>Engineering/Electronics Computer Telecommunications and Information Technology (ECTI-CON), 2010 International Conference on </p>
<p>, vol., no., pp.473,477, 19-21 May 2010</p>
<p>Niès J, Pelayo S. From users involvement to users&#8217; needs understanding: a case study. Int J Med Inform. 2010 Apr;79</p>
<p>(4):e76-82.</p>
<p>Arzt NH. Service-oriented architecture in public health. J Healthc Inf Manag. 2010 Spring;24(2):45-52. Ryan A, Eklund P. </p>
<p>The Health Service Bus: an architecture and case study in achieving interoperability in healthcare. Stud Health Technol </p>
<p>Inform. 2010;160(Pt2):922-6.</p>
<p>Lober WB, Revere D, Hills R. A Lab-EMR interoperability profile as an eHealth architecture component for resource-</p>
<p>constrained settings. Stud Health Technol Inform. 2010;160(Pt 1):257-61.</p>
<p>Walderhaug S, Hartvigsen G, Stav E. Model-driven traceability in healthcare information systems development. Stud Health </p>
<p>Technol Inform. 2010;160(Pt 1):242-6.</p>
<p>Santos MR, Bax MP, Kalra D. Building a logical EHR architecture based on ISO  13606 standard and semantic web technologies. </p>
<p>Stud Health Technol Inform. 2010;160(Pt 1):161-5.</p>
<p>Rosenbeck KH, Randorff Rasmussen A, Elberg PB, Andersen SK. Balancing centralised and decentralised EHR approaches to </p>
<p>manage standardisation. Stud Health Technol Inform. 2010;160(Pt 1):151-5.  Webster C, Copenhaver M. Process-aware EHR BPM </p>
<p>systems: two prototypes and a  conceptual framework. Stud Health Technol Inform. 2010;160(Pt 1):106-10.</p>
<p>Bansler JP, Havn EC, M?nsted T. Designing shared electronic records for chronic care. Stud Health Technol Inform. </p>
<p>2010;157:53-8.</p>
<p>Botin L. How to dwell in an EHR. The question concerning architecture EHR.  Stud Health Technol Inform. 2010;157:38-43.</p>
<p>Koppel R, Kreda DA. Healthcare IT usability and suitability for clinical needs: challenges of design, workflow, and </p>
<p>contractual relations. Stud Health Technol Inform. 2010;157:7-14.</p>
<p>Katt B, Trojer T, Breu R, Schabetsberger T, Wozak F. Meeting EHR security requirements: SeAAS approach. Stud Health Technol </p>
<p>Inform. 2010;155:85-91.</p>
<p><strong>2009</strong></p>
<p>Hoerbst, A.; Ammenwerth, E., &#8220;A structural model for quality requirements regarding Electronic Health Records &#8211; </p>
<p>State of the art and first concepts,&#8221; Software Engineering in Health Care, 2009. SEHC &#8217;09. ICSE Workshop on , </p>
<p>vol., no., pp.34,41, 18-19 May 2009</p>
<p>Weng C, Levine BA, Mun SK. Software architecture and engineering for patient  records: current and future. Mil Med. 2009 </p>
<p>May;174(5 Suppl):27-34. Review.</p>
<p>Arguello, M.; Des, J.; Perez, R.; Fernandez-Prieto, M. J.; Paniagua, H., &#8220;Electronic Health Records (EHRs) Standards </p>
<p>and the Semantic Edge: A Case Study of Visualising Clinical Information from EHRs,&#8221; Computer Modelling and </p>
<p>Simulation, 2009. UKSIM &#8217;09. 11th International Conference on , vol., no., pp.485,490, 25-27 March 2009</p>
<p>Jian-Cheng Dong; Dong Zhou; Xin-Ping Hu; Zhi-Mei Zhang; Kui Jiang, &#8220;Analysis and Design on Standard System of </p>
<p>Electronic Health Records,&#8221; Education Technology and Computer Science, 2009. ETCS &#8217;09. First International </p>
<p>Workshop on , vol.1, no., pp.980,982, 7-8 March 2009</p>
<p>Senathirajah Y, Bakken S. Architectural and usability considerations in the development of a Web 2.0-based EHR. Stud Health </p>
<p>Technol Inform. 2009;143:315-21.</p>
<p>Armstrong B, Kushniruk A, Joe R, Borycki E. Technical and architectural issues in deploying electronic health records </p>
<p>(EHRs) over the WWW. Stud Health Technol Inform. 2009;143:93-8.</p>
<p><strong>2008</strong></p>
<p>Kim H, Harris MR, Savova GK, Chute CG. The first step toward data reuse: disambiguating concept representation of the </p>
<p>locally developed ICU nursing flowsheets. Comput Inform Nurs. 2008 Sep-Oct;26(5):282-9.</p>
<p>Martins SB, Shahar Y, Goren-Bar D, Galperin M, Kaizer H, Basso LV, McNaughton D, Goldstein MK. Evaluation of an </p>
<p>architecture for intelligent query and exploration of time-oriented clinical data. Artif Intell Med. 2008 May;43(1):17-34.</p>
<p>H?yrinen K, Saranto K, Nyk?nen P. Definition, structure, content, use and impacts of electronic health records: a review of </p>
<p>the research literature. Int J  Med Inform. 2008 May;77(5):291-304.</p>
<p>Leslie H. International developments in openEHR archetypes and templates. HIM J. 2008;37(1):38-9.</p>
<p>Yoo SK, Kim DK, Kim JC, Park YJ, Chang BC. Implementation of a large-scale hospital information infrastructure for multi-</p>
<p>unit health-care services. J Telemed Telecare. 2008;14(3):164-6.</p>
<p>Massaut J, Reper P. Open source electronic health record and patient data management system for intensive care. Stud Health </p>
<p>Technol Inform. 2008;141:139-45.</p>
<p>Pomares A, Roncancio C, Abásolo J. Virtual objects in large scale health information systems. Stud Health Technol Inform. </p>
<p>2008;138:80-9.</p>
<p>Massari P, Pereira S, Thirion B, Derville A, Darmoni SJ. Use of super-concepts to customize electronic medical records data </p>
<p>display. Stud Health  Technol Inform. 2008;136:845-50.</p>
<p>It?l? T, Ukkola J, Virtanen A, Mykk?nen J. SOA approach for integration of departmental systems. Stud Health Technol </p>
<p>Inform. 2008;136:723-8.</p>
<p>Wong MC, Turner P, Yee KC. Involving clinicians in the development of an electronic clinical handover system &#8211; </p>
<p>thinking systems not just technology. Stud  Health Technol Inform. 2008;136:490-5.</p>
<p>Carrajo L, Penas A, Melcón R, González FJ, Couto E. From documents on paper to electronic medical records. Stud Health </p>
<p>Technol Inform. 2008;136:395-400.</p>
<p>Blobel BG, Pharow P. Analysis and evaluation of EHR approaches. Stud Health Technol Inform. 2008;136:359-64.</p>
<p>Khajouei R, Jaspers MW. CPOE system design aspects and their qualitative effect on usability. Stud Health Technol Inform. </p>
<p>2008;136:309-14. Review.</p>
<p>Jaspers MW, Peute LW, Lauteslager A, Bakker PJ. Pre-post evaluation of physicians&#8217; satisfaction with a redesigned </p>
<p>electronic medical record system. Stud Health Technol Inform. 2008;136:303-8.</p>
<p>Martinez, I.; Fernandez, J.; Galarraga, M.; Serrano, L.; de Toledo, P.; Jimenez-Fernandez, S.; Led, S.; Martfnez-</p>
<p>Espronceda, M.; Garcia, J., &#8220;Implementation of an end-to-end standard-based patient monitoring </p>
<p>solution,&#8221;Communications, IET , vol.2, no.2, pp.181,191, February 2008</p>
<p>Riedl, B.; Grascher, V.; Fenz, S.; Neubauer, T., &#8220;Pseudonymization for improving the Privacy in E-Health </p>
<p>Applications,&#8221; Hawaii International Conference on System Sciences, Proceedings of the 41st Annual , vol., no., </p>
<p>pp.255,255, 7-10 Jan. 2008.</p>
<p><strong>2007</strong></p>
<p>Riedl, B.; Grascher, V.; Neubauer, T., &#8220;Applying a Threshold Scheme to the Pseudonymization of Health Data,&#8221; </p>
<p>Dependable Computing, 2007. PRDC 2007. 13th Pacific Rim International Symposium on , vol., no., pp.397,400, 17-19 Dec.</p>
<p>Katehakis, D.G.; Sfakianakis, S.G.; Kavlentakis, G.; Anthoulakis, D.N.; Tsiknakis, M., &#8220;Delivering a Lifelong </p>
<p>Integrated Electronic Health Record Based on a Service Oriented Architecture,&#8221; Information Technology in Biomedicine, </p>
<p>IEEE Transactions on , vol.11, no.6, pp.639,650, Nov. 2007</p>
<p>Li HaoMin; Duan Huilong; Lu XuDong; Huang Zhengxing, &#8220;A Clinical Document Repository for CDA Documents,&#8221; </p>
<p>Bioinformatics and Biomedical Engineering, 2007. ICBBE 2007. The 1st International Conference on , vol., no., pp.1084,1087, </p>
<p>6-8 July 2007</p>
<p>Jian WS, Hsu CY, Hao TH, Wen HC, Hsu MH, Lee YL, Li YC, Chang P. Building a  portable data and information interoperability </p>
<p>infrastructure-framework for a standard Taiwan Electronic Medical Record Template. Comput Methods Programs Biomed. 2007 </p>
<p>Nov;88(2):102-11.</p>
<p>Katehakis DG, Sfakianakis SG, Kavlentakis G, Anthoulakis DN, Tsiknakis M. Delivering a lifelong integrated electronic </p>
<p>health record based on a service oriented architecture. IEEE Trans Inf Technol Biomed. 2007 Nov;11(6):639-50.</p>
<p>Chelico JD, Wilcox A, Wajngurt D. Architectural design of a data warehouse to support operational and analytical queries </p>
<p>across disparate clinical databases. AMIA Annu Symp Proc. 2007 Oct 11:901..</p>
<p>Murphy SN, Mendis M, Hackett K, Kuttan R, Pan W, Phillips LC, Gainer V, Berkowicz D, Glaser JP, Kohane I, Chueh HC. </p>
<p>Architecture of the open-source clinical research chart from Informatics for Integrating Biology and the Bedside. AMIA Annu </p>
<p>Symp Proc. 2007 Oct 11:548-52</p>
<p>Sumita Y, Takata M, Ishitsuka K, Tominaga Y, Ohe K. Building a reference functional model for EHR systems. Int J Med </p>
<p>Inform. 2007 Sep;76(9):688-700.</p>
<p>McMurry AJ, Gilbert CA, Reis BY, Chueh HC, Kohane IS, Mandl KD. A self-scaling, distributed information architecture for </p>
<p>public health, research, and clinical care. J Am Med Inform Assoc. 2007 Jul-Aug;14(4):527-33.</p>
<p>Morales Rodriguez M, Casper G, Brennan PF. Patient-centered design. The potential of user-centered design in personal </p>
<p>health records. J AHIMA. 2007 Apr;78(4):44-6; quiz 49-50.</p>
<p>Bergmann J, Bott OJ, Pretschner DP, Haux R. An e-consent-based shared HER system architecture for integrated healthcare </p>
<p>networks. Int J Med Inform. 2007 Feb-Mar;76(2-3):130-6.</p>
<p>Blobel B, Pharow P. A model driven approach for the German health telematics architectural framework and security </p>
<p>infrastructure. Int J Med Inform. 2007 Feb-Mar;76(2-3):169-75.</p>
<p>Yang Y, Ahtinen A, Lahteenmaki J, Nyman P, Paajanen H, Peltoniemi T, Quiroz  C. A service platform architecture design </p>
<p>towards a light integration of heterogeneous systems in the wellbeing domain. Conf Proc IEEE Eng Med Biol Soc. </p>
<p>2007;2007:5865-8.</p>
<p>Stacey M, McGregor C, Tracy M. An architecture for multi-dimensional temporal abstraction and its application to support </p>
<p>neonatal intensive care. Conf Proc IEEE Eng Med Biol Soc. 2007;2007:3752-6.</p>
<p>Raghupathi W, Gao W. An Eclipse-based development approach to health information technology. Int J Electron Healthc. </p>
<p>2007;3(4):433-52.</p>
<p>Mu?oz A, Somolinos R, Pascual M, Fragua JA, González MA, Monteagudo JL, Salvador CH. Proof-of-concept design and </p>
<p>development of an EN13606-based electronic health care record service. J Am Med Inform Assoc. 2007 Jan-Feb;14(1):118-29.</p>
<p>Corwin J, Silberschatz A, Miller PL, Marenco L. Dynamic tables: an architecture for managing evolving, heterogeneous </p>
<p>biomedical data in relational database management systems. J Am Med Inform Assoc. 2007 Jan-Feb;14(1):86-93.</p>
<p>Klimov D, Shahar Y. Intelligent querying and exploration of multiple time-oriented medical records. Stud Health Technol </p>
<p>Inform. 2007;129(Pt 2):1314-8.</p>
<p>Boye N, Eberholst F, Farlie R, S?rensen LB, Lyng KM. User driven, evidence based experimental design; a new method for </p>
<p>interface design used to develop an interface for clinical overview of patient records. Stud Health Technol Inform. </p>
<p>2007;129(Pt 2):1053-7.</p>
<p>Beale T, Heard S. An ontology-based model of clinical information. Stud Health Technol Inform. 2007;129(Pt 1):760-4.</p>
<p>Ginsburg, M., &#8220;Pediatric Electronic Health Record Interface Design: The PedOne System,&#8221; System Sciences, 2007. </p>
<p>HICSS 2007. 40th Annual Hawaii International Conference on , vol., no., pp.139,139, Jan. 2007</p>
<p><strong>2006</strong></p>
<p>Al-zharani, S.; Sarasvady, S.; Chandra, H.; Pichappan, P., &#8220;Controlled EHR access in secured health information </p>
<p>system,&#8221; Digital Information Management, 2006 1st International Conference on , vol., no., pp.63,68, 6-6 Dec. 2006</p>
<p>Shanmugam, M.; Thiruvengadam, S.; Khurat, A.; Maglogiannis, I., &#8220;Enabling Secure Mobile Access for Electronic Health </p>
<p>Care Applications,&#8221; Pervasive Health Conference and Workshops, 2006 , vol., no., pp.1,8, Nov. 29 2006-Dec. 1 2006</p>
<p>Ferranti JM, Musser RC, Kawamoto K, Hammond WE. The clinical document architecture and the continuity of care record: a </p>
<p>critical analysis. J Am Med Inform Assoc. 2006 May-Jun;13(3):245-52.</p>
<p>Stoicu-Tivadar L, Stoicu-Tivadar V. Human-computer interaction reflected in  the design of user interfaces for general </p>
<p>practitioners. Int J Med Inform. 2006 Mar-Apr;75(3-4):335-42.</p>
<p>Blobel B. Advanced and secure architectural EHR approaches. Int J Med Inform. 2006 Mar-Apr;75(3-4):185-90.</p>
<p>Seo HJ, Youn ST, Hwang KT, Kim JH. Defining structural constraints for the development of structured operation note for </p>
<p>breast cancer based on Clinical Document Architecture. AMIA Annu Symp Proc. 2006:1089.</p>
<p>Murphy SN, Mendis ME, Berkowitz DA, Kohane I, Chueh HC. Integration of clinical and genetic data in the i2b2 architecture. </p>
<p>AMIA Annu Symp Proc. 2006:1040.</p>
<p>Massey T, Gao T, Welsh M, Sharp JH, Sarrafzadeh M. The design of a decentralized electronic triage system. AMIA Annu Symp </p>
<p>Proc. 2006:544-8.</p>
<p>Moner D, Maldonado JA, Bosca D, Fernandez JT, Angulo C, Crespo P, Vivancos PJ, Robles M. Archetype-based semantic </p>
<p>integration and standardization of clinical data. Conf Proc IEEE Eng Med Biol Soc. 2006;1:5141-4.</p>
<p>Nace GS, Graumlich JF, Aldag JC. Software design to facilitate information transfer at hospital discharge. Inform Prim </p>
<p>Care. 2006;14(2):109-19.</p>
<p>Blobel BG, Engel K, Pharow P. Semantic interoperability&#8211;HL7 Version 3 compared to advanced architecture standards. </p>
<p>Methods Inf Med. 2006;45(4):343-53.</p>
<p>Blobel BG. Advanced EHR architectures&#8211;promises or reality. Methods Inf Med. 2006;45(1):95-101.</p>
<p><strong>2005</strong></p>
<p>Zhang J. Human-centered computing in health information systems part 2: evaluation. J Biomed Inform. 2005 Jun;38(3):173-5.</p>
<p>Yun-Sik Kwak, &#8220;International standards for building Electronic Health Record (EHR),&#8221; Enterprise networking and </p>
<p>Computing in Healthcare Industry, 2005. HEALTHCOM 2005. Proceedings of 7th International Workshop on , vol., no., pp.18,23, </p>
<p>23-25 June 2005</p>
<p>Hanzlicek P, Spidlen J, Heroutova H, Nagy M. User interface of MUDR electronic health record. Int J Med Inform. 2005 </p>
<p>Mar;74(2-4):221-7.</p>
<p>Johnson CM, Johnson TR, Zhang J. A user-centered framework for redesigning health care interfaces. J Biomed Inform. 2005 </p>
<p>Feb;38(1):75-87.</p>
<p>Samaras GM, Horst RL. A systems engineering perspective on the human-centered design of health information systems. J </p>
<p>Biomed Inform. 2005 Feb;38(1):61-74.</p>
<p>Rose AF, Schnipper JL, Park ER, Poon EG, Li Q, Middleton B. Using qualitative studies to improve the usability of an EMR. J </p>
<p>Biomed Inform. 2005 Feb;38(1):51-60.</p>
<p>Zhang J. Human-centered computing in health information systems. Part 1: analysis and design. J Biomed Inform. 2005 Feb;38</p>
<p>(1):1-3.</p>
<p>Orlova AO, Dunnagan M, Finitzo T, Higgins M, Watkins T, Tien A, Beales S. Electronic health record &#8211; public health </p>
<p>(EHR-PH) system prototype for interoperability in 21st century healthcare systems. AMIA Annu Symp Proc. 2005:575-9.</p>
<p><strong>2004</strong></p>
<p>Marcheschi, P.; Mazzarisi, A.; Dalmiani, S.; Benassi, A., &#8220;HL7 clinical document architecture to share cardiological </p>
<p>images and structured data in next generation infrastructure,&#8221; Computers in Cardiology, 2004 , vol., no., pp.617,620, </p>
<p>19-22 Sept. 2004</p>
<p>Blobel B, Pharow P. Implementing MDA-based distributed, interoperable, flexible, scalable, portable, and secure EHR </p>
<p>systems. Stud Health Technol Inform. 2004;103:394-9.</p>
<p>Hanzlicek P, Spidlen J, Nagy M. Universal electronic health record MUDR. Stud Health Technol Inform. 2004;105:190-201.</p>
<p>Barretto, S.A.; Warren, J.; Goodchild, A., &#8220;Designing guideline-based workflow-enabled electronic health </p>
<p>records,&#8221; System Sciences, 2004. Proceedings of the 37th Annual Hawaii International Conference on , vol., no., pp.10 </p>
<p>pp.,, 5-8 Jan. 2004</p>
<p><strong>2003</strong></p>
<p>Zheng L, Wetzel AW, Gilbertson J, Becich MJ. Design and analysis of a content-based pathology image retrieval system. IEEE </p>
<p>Trans Inf Technol Biomed. 2003 Dec;7(4):249-55.</p>
<p>Mahoney ME. A nontraditional day in the life. Software development: from conception to implementation. J AHIMA. 2003 </p>
<p>Oct;74(9):32-3.</p>
<p>Blobel B. Architecture and tools for open, interoperable and portable EHRs.  Stud Health Technol Inform. 2003;97:25-33.</p>
<p>Berler, A.; Konnis, G.; Pavlopoulos, S.; Karkalis, G.; Sakka, E.; Koutsouris, D., &#8220;Use of XML technology in a virtual </p>
<p>patient record infrastructure,&#8221; Information Technology Applications in Biomedicine, 2003. 4th International IEEE EMBS </p>
<p>Special Topic Conference on , vol., no., pp.118,121, 24-26 April 2003</p>
<p><strong>2002</strong></p>
<p>Berler, A.; Pavlopoulos, S.; Karkalis, G.; Sakka, E.; Konnis, G.; Koutsouris, D., &#8220;Implementation of a novel virtual </p>
<p>patient record architecture,&#8221; Engineering in Medicine and Biology, 2002. 24th Annual Conference and the Annual Fall </p>
<p>Meeting of the Biomedical Engineering Society EMBS/BMES Conference, 2002. Proceedings of the Second Joint , vol.3, no., </p>
<p>pp.1936,1937 vol.3, 23-26 Oct. 2002</p>
<p>Blobel B. Comparing concepts for electronic health record architectures. Stud Health Technol Inform. 2002;90:209-14.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="EHR_Architecture_and_Design">EHR Architecture and Design</h1><p>by <span class="author vcard fn">Jerome Carter on <abbr class="publi]]>
    </summary>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日志" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Github pages 个人主页和项目主页的不同设置]]></title>
    <link href="http://wanghaisheng.github.io/2014/06/25/githubpages/"/>
    <id>http://wanghaisheng.github.io/2014/06/25/githubpages/</id>
    <published>2014-06-25T14:05:57.000Z</published>
    <updated>2014-12-03T10:25:25.000Z</updated>
    <content type="html"><![CDATA[<p>Github pages 个人主页和项目主页的不同设置</p>
<p>如果你想利用github pages来搭建属于自己的博客 亦或是为某个小项目做一个宣传页面  这里有点小坑 大家需要提防一下。  </p>
<p>1.如果你想做一个个人主页的话，比如我在github建了这样一个<a href="https://github.com/wanghaisheng/wanghaisheng.github.io" target="_blank" rel="external">repo</a>，除了需要有一个CNAME文件，内容如下，   </p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attribute">http</span>:<span class="comment">//wanghaisheng.github.io   </span></span><br><span class="line"><span class="built_in">``</span>`   </span><br><span class="line">同时，github pages要求你要发布的网站内容必须位于master分支下。  </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.如果你只是想做一个项目主页的话，比如你在GitHub建了个项目叫作 wiki ，那么只需在这个项目下新建一个root branch叫作 gh-pages ，</span><br><span class="line">那么push到这个branch里的内容都会发布到</span><br></pre></td></tr></table></figure>
<p><a href="http://你的用户名.github.com/wiki" target="_blank" rel="external">http://你的用户名.github.com/wiki</a><br>```<br>现成的例子如<a href="http://twitter.github.com/bootstrap/" target="_blank" rel="external">bootstrap</a>。</p>
<p>在每个项目的Admin页面里都有一个选项叫做 GitHub Pages ，勾选此选项则会自动为你生成上述的branch。  </p>
<p>具体操作可以参阅GitHub Pages主页。当然，这个项目页面也和个人主页一样支持自定义域名，只需建立一个名为 CNAME 的文件并包含所映射的域名，然后修改DNS设置就可以了。所以理论上你可以绑定任意数量的域名到GitHub。绑定域名后 <a href="http://你的用户名.github.com/projectname" target="_blank" rel="external">http://你的用户名.github.com/projectname</a> 和 你绑定的域名都能访问这个站点。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Github pages 个人主页和项目主页的不同设置</p>
<p>如果你想利用github pages来搭建属于自己的博客 亦或是为某个小项目做一个宣传页面  这里有点小坑 大家需要提防一下。  </p>
<p>1.如果你想做一个个人主页的话，比如我在github建了这]]>
    </summary>
    
      <category term="Github pages" scheme="http://wanghaisheng.github.io/tags/Github-pages/"/>
    
      <category term="博客" scheme="http://wanghaisheng.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="日志" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[piqi学习]]></title>
    <link href="http://wanghaisheng.github.io/2014/06/09/abc/"/>
    <id>http://wanghaisheng.github.io/2014/06/09/abc/</id>
    <published>2014-06-09T10:18:30.000Z</published>
    <updated>2014-12-03T10:25:25.000Z</updated>
    <content type="html"><![CDATA[<h1 id="piqi学习">piqi学习</h1><p>*目标一：·piqi是什么   </p>
<p> *目标二：piqi与FHIR整合的可能性评估    </p>
<p>*目标三：piqi用在文档内容校验上的可能性  </p>
<p>*目标四：基于piqi的消息引擎的设计      </p>
<h2 id="piqi_FAQ">piqi FAQ</h2><p>*1. piq和JSON的区别在哪里<br>Piq语言适合与人机交互，JSON则只是一种标准的、轻便的、高效的结构化数据的表达方式。  The Piq language is optimized for human interaction, whereas JSON is a standard, portable and reasonably efficient way of representing structured data.  </p>
<p>与JSON不同的是，Piq中有comment批注和逐字文本。字段名称也没有逗号分割和引号。这些特征都使得PIq更适合查看结构化数据或者在文本编辑器中编辑结构化数据.  Unlike JSON, Piq has comments and verbatim text literals. Also, there’s no comma-separators and quotes around field names. These and some other features make Piq a better choice for viewing structured data or editing it in a text editor.   </p>
<p>Piq是一种强类型语言 JSON则是动态类型的.  Piq is a strongly typed language and JSON is dynamically typed.   </p>
<p>Piq的使用离不开Piqi数据定义.有了数据定义之后,它就比JSON更强大.比如 在Piq中 字段默认值 甚至说字段本身都可以省略.  Piq can’t be used without Piqi data definitions. With data definitions, though, it is much more powerful than JSON. For example, in Piq, default field values and even field names can be omitted.    </p>
<p>同时也可以在Piq中嵌入未分配类型的JSON.  And it is possible to embed untyped JSON in Piq!   </p>
<p>Piq的数据模型更加强大.  Piq has a more powerful data model.   </p>
<p>除了JSON所支持的所有数据类型,Piq/piqi还支持binary 二进制 enum枚举和variant(如tagged unions)还有一些其他优点 如支持浮点数NaN 正无穷 负无穷.   In addition to all data types supported by JSON, Piq/Piqi supports binaries, enums and variants (i.e. tagged unions). There are some other goodies, such as support for floating point NaN, negative and positive infinities.   </p>
<p>Piq在持续改进中 而JSON木已成舟.  Piq is evolving, whereas JSON is set in stone.  </p>
<p>Piq最终将支持半结构化数据.  For example, Piq will eventually get support for semi-structured data.</p>
<p>需要注意的是 尽管存在差异,Piq格式的数据仍可以转换成JSON、XML、Protoco Buffer格式.这样你就可以使用PIq来对数据进行手动编辑,在其他目的下将其转换成其他格式即可.   Note that despite all the differences, data represented in Piq can be reliably converted to and from JSON, XML and Protocol Buffers binary formats. This way one can use Piq for manual data editing and convert it to other formats for other purposes.   </p>
<p>*2. Piqi与Protocol Buffer的区别/How Piqi compares to Protocol Buffers?</p>
<p>作为数据序列化系统,piqi与protocol buffer是类似的,也兼容它.事实上,Piqi主要是受其启发.然而 却存在一些本质上的设计差异.  As a data serialization system, Piqi is very similar and compatible with Protocol Buffers. In fact, Piqi was largely inspired by it. However, there are some fundamental design differences.   </p>
<p>Piqi是围绕着一个更加强大的数据模型而设计的.  Piqi is designed around a more powerful data model.</p>
<p>另外 对于protocol buffer中支持的record记录、enum枚举 、user-defined types自定义类型,Piqi中有list、type aliase和variant.  In addition to record and enum user-defined types supported by Protocol Buffer, Piqi has lists, type aliases and variants (aka tagged unions).</p>
<p>支持丰富的数据类型,这对于高级编程语言如OCaml和Erlang相当重要.比如,没有了list和variant,在处理数据时,就无法充分使用这些语言的功能.  Rich type support really makes a difference for high-level programming languages such as OCaml and Erlang. For example, without lists and variants, one can’t use utilize full potential of these languages when working with data.</p>
<p>相反的,protocol Bufffer是为Java、Python、C++等面向对象的语言设计的.  In contrast, Protocol Buffers was designed for object-oriented Java, Python and C++ languages.</p>
<p>Piqi是一种高级的数据定义语言.  Piqi is a high-level data definition language.</p>
<p>list、variant、record和aliase的组合可以很好地定义任何复杂的数据结构.在这方面protocol Buffer数据定义语言的层次就太低了.  Combination of lists, variants, records and aliases can be used to define any complex data structure in a very expressive way. Protocol Buffers data definition language is too low-level in this respect.</p>
<p>Portocol Buffer DDL的一些特性 如嵌套定义会给数据定义的表达能力带来负面作用.Piqi中拿掉了这些特性.  Some Protocol Buffers DDL’s features, like nested definitions, can negatively affect expressiveness of data definitions. Piqi avoids such features.  </p>
<h2 id="person实例">person实例</h2><h3 id="person-piqi（schema定义）">person.piqi（schema定义）</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">% this <span class="keyword">is</span> an object <span class="keyword">of</span> type <span class="string">"person"</span> which <span class="keyword">is</span> defined <span class="keyword">in</span> module <span class="string">"person"</span></span><br><span class="line">:person/person [</span><br><span class="line">    .<span class="property">name</span> <span class="string">"J. Random Hacker"</span></span><br><span class="line">    .<span class="property">id</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    .email <span class="string">"j.r.hacker@example.com"</span></span><br><span class="line"></span><br><span class="line">    .phone [</span><br><span class="line">        .<span class="type">number</span> <span class="string">"(111) 123 45 67"</span></span><br><span class="line">        % NOTE: phone <span class="keyword">is</span> <span class="string">"home"</span> <span class="keyword">by</span> default</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    .phone [</span><br><span class="line">        .<span class="type">number</span> <span class="string">"(222) 123 45 67"</span></span><br><span class="line">        .mobile</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    .phone [</span><br><span class="line">        .<span class="type">number</span> <span class="string">"(333) 123 45 67"</span></span><br><span class="line">        .work</span><br><span class="line">    ]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">% another object <span class="keyword">of</span> <span class="keyword">the</span> same type</span><br><span class="line">:person/person [</span><br><span class="line">    .<span class="property">name</span> <span class="string">"Joe User"</span></span><br><span class="line">    .<span class="property">id</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    % Joe User doesn't have an email</span><br><span class="line"></span><br><span class="line">    .phone [ <span class="string">"(444) 123 45 67"</span> ]</span><br><span class="line">    .phone [ <span class="string">"(555) 123 45 67"</span> .work ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="piqi学习">piqi学习</h1><p>*目标一：·piqi是什么   </p>
<p> *目标二：piqi与FHIR整合的可能性评估    </p>
<p>*目标三：piqi用在文档内容校验上的可能性  </p>
<p>*目标四：基于piqi的消息引擎的设计]]>
    </summary>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="模板" scheme="http://wanghaisheng.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="日志" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="第一天" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E5%BF%97/%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[致访客]]></title>
    <link href="http://wanghaisheng.github.io/2014/05/20/welcome/"/>
    <id>http://wanghaisheng.github.io/2014/05/20/welcome/</id>
    <published>2014-05-20T07:13:12.000Z</published>
    <updated>2014-12-03T10:25:25.000Z</updated>
    <content type="html"><![CDATA[<p>曾几何时，幻想着自己能文思如尿奔，写一些生活的感悟，记录一些成长的足迹，辗转从qq空间到chinaunix再到科学网，种种不适，最终在这里落脚。<br>这里是海生(edwin)的小窝，记录着海生成长过程中的酸甜苦辣。虽努力地想让大家看到、了解、认识真实的自己，海生却不如自己所想的那般勇敢和自信，这其中或多或少是由于天生的那点自尊、自恋和自卑在作祟。文字总是唯美的，我可爱的朋友们，希望你们能够从这些拙劣的话语中找到一丝丝温暖，感受到一丝丝温馨.如果看了我的碎碎念之后,你有要说话的冲动，请不要过分珍惜你的键盘或者是我的空间 －－ 因为，你是我的朋友。”</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>曾几何时，幻想着自己能文思如尿奔，写一些生活的感悟，记录一些成长的足迹，辗转从qq空间到chinaunix再到科学网，种种不适，最终在这里落脚。<br>这里是海生(edwin)的小窝，记录着海生成长过程中的酸甜苦辣。虽努力地想让大家看到、了解、认识真实的自己，海生却不如自己]]>
    </summary>
    
      <category term="日记" scheme="http://wanghaisheng.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="生活日志" scheme="http://wanghaisheng.github.io/categories/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[xxxxx]]></title>
    <link href="http://wanghaisheng.github.io/2014/05/20/blog_template/"/>
    <id>http://wanghaisheng.github.io/2014/05/20/blog_template/</id>
    <published>2014-05-20T07:11:12.000Z</published>
    <updated>2015-04-27T14:41:30.000Z</updated>
    <content type="html"><![CDATA[<p>博文撰写可以使用Swig语法或者markDown语法 元数据部分请参考 本文源代码 正文部分请参考如下内容</p>
<blockquote>
<p>原文标题：<a href="">xxxxx</a><br>原文作者：xxxxx<br>原文来源：<a href="">xxxxx</a><br>译者： <a href="http://wanghaisheng.github.io/about/" target="_blank" rel="external">edwin_uestc</a><br>版权声明：<br>欢迎转载本站的所有内容，本站的所有文章使用<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="external">知识共享署名-非商业性使用-相同方式共享 3.0 Unported许可协议</a>，唯一的要求就是保留署名权，请在转载时注明出处。<br>Swig语法</p>
</blockquote>
<h2 id="引用">引用</h2><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote>
<h2 id="代码块">代码块</h2><figure class="highlight ruby"><figcaption><span>.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="keyword">false</span>, <span class="number">2</span>, ‘’, <span class="number">3</span>]);</span><br><span class="line"><span class="status">=&gt;</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<h2 id="链接">链接</h2><a href="http://w.qq.com/" title="webQQ" target="_blank">webQQ</a>
<h2 id="图片">图片</h2><img src="/images/th.jpeg" width="400" height="600" title="这是一张图片">
<p>MarkDown语法</p>
<h2 id="引用-1">引用</h2><blockquote>
<p>Every interaction is both precious and an opportunity to delight.</p>
</blockquote>
<h2 id="代码块-1">代码块</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.compact([0, 1, false, 2, &#8216;&#8217;, 3]);&#10;=&#62; [1, 2, 3]</span><br></pre></td></tr></table></figure>
<h2 id="链接-1">链接</h2><p><a href="http://w.qq.com/" target="_blank" rel="external">webQQ</a></p>
<h2 id="图片-1">图片</h2><p><img src="/images/th.jpeg" alt="这是一张图片"></p>
<p>对于本地图片，需要在source目录下面新建一个目录images，然后把图片放到目录中</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>博文撰写可以使用Swig语法或者markDown语法 元数据部分请参考 本文源代码 正文部分请参考如下内容</p>
<blockquote>
<p>原文标题：<a href="">xxxxx</a><br>原文作者：xxxxx<br>原文来源：<a href="">xxxx]]>
    </summary>
    
      <category term="碎碎念" scheme="http://wanghaisheng.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="碎碎念" scheme="http://wanghaisheng.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="碎碎念" scheme="http://wanghaisheng.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu下sqlplus上下光标键乱码解决方法]]></title>
    <link href="http://wanghaisheng.github.io/2010/10/22/ubuntu_sqlplus/"/>
    <id>http://wanghaisheng.github.io/2010/10/22/ubuntu_sqlplus/</id>
    <published>2010-10-22T11:15:57.000Z</published>
    <updated>2014-12-03T10:25:25.000Z</updated>
    <content type="html"><![CDATA[<p>ubuntu下sqlplus上下光标键乱码解决方法 </p>
<p>我的系统是ubuntu10.10，oracle版本为10gXE<br>遇到如题所述的问题时，可以这样解决该问题：</p>
<p>1 、安装插件：<br> <code>sudo apt-get install rlwrap</code>  </p>
<p>2、在当前用户下设置一个命令别名：<br><code>alias sqlplus=&#39;rlwrap sqlplus&#39;</code>  </p>
<p>3、重新键入sqlplus命令即可尽情享用上下左右光标键了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ubuntu下sqlplus上下光标键乱码解决方法 </p>
<p>我的系统是ubuntu10.10，oracle版本为10gXE<br>遇到如题所述的问题时，可以这样解决该问题：</p>
<p>1 、安装插件：<br> <code>sudo apt-get install]]>
    </summary>
    
      <category term="Oracle" scheme="http://wanghaisheng.github.io/tags/Oracle/"/>
    
      <category term="Ubuntu" scheme="http://wanghaisheng.github.io/tags/Ubuntu/"/>
    
      <category term="日志" scheme="http://wanghaisheng.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
</feed>